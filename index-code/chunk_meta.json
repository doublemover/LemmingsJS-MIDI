[{"id":0,"file":"js\\ActionFryingSystem.js","start":113,"end":933,"kind":"ClassDeclaration","name":"ActionFryingSystem","weight":1.5,"headline":"le action lemmings look sprite return game","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.FRYING, singleSprite: true, actionName: 'frying' });\r","  }"]},{"id":1,"file":"js\\ActionHoistSystem.js","start":113,"end":1131,"kind":"ClassDeclaration","name":"ActionHoistSystem","weight":1.5,"headline":"le lemmings return frame action level lemming","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.POSTCLIMBING, actionName: 'hoist' });\r","  }"]},{"id":2,"file":"js\\ActionOhNoSystem.js","start":117,"end":883,"kind":"ClassDeclaration","name":"ActionOhNoSystem","weight":1.5,"headline":"le action lemmings sprite return game lemming","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.OHNO, singleSprite: true, actionName: 'oh-no' });\r","  }"]},{"id":3,"file":"js\\ActionJumpSystem.js","start":113,"end":1052,"kind":"ClassDeclaration","name":"ActionJumpSystem","weight":1.5,"headline":"le state lemmings action lemming return level","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.JUMPING, actionName: 'jump' });\r","  }"]},{"id":4,"file":"js\\ActionShrugSystem.js","start":113,"end":610,"kind":"ClassDeclaration","name":"ActionShrugSystem","weight":1.5,"headline":"le action lemmings return system sprites super","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.SHRUGGING, actionName: 'shrugging' });\r","  }"]},{"id":5,"file":"js\\Animation.js","start":1259,"end":4663,"kind":"ClassDeclaration","name":"Animation","weight":1.5,"headline":"frame palette frames animation class constructor offset","preContext":[],"postContext":["constructor (_compat = null, loop = true) {","    this.frames = [];","    this._lastFrame = null;","    this.loop   = loop;"]},{"id":6,"file":"js\\BaseImageInfo.js","start":54,"end":850,"kind":"ClassDeclaration","name":"BaseImageInfo","weight":1.5,"headline":"image loc bits th vg mask position","preContext":[],"postContext":["constructor() {\r","    this.width = 0;\r","    this.height = 0;\r","    /// normal case\r"]},{"id":7,"file":"js\\ActionSplatterSystem.js","start":121,"end":731,"kind":"ClassDeclaration","name":"ActionSplatterSystem","weight":1.5,"headline":"le action lemmings sprite return game lemming","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.SPLATTING, singleSprite: true, actionName: 'splatter' });\r","  }"]},{"id":8,"file":"js\\BitReader.js","start":246,"end":3536,"kind":"ClassDeclaration","name":"BitReader","weight":1.5,"headline":"number reader length read checksum bit pos","preContext":[],"postContext":["constructor(fileReader, offset, length, initBufferLength = 8) {\r","    if (!fileReader || typeof fileReader.readByte !== 'function')\r","      throw new TypeError('fileReader must implement readByte()');\r","    if (!Number.isInteger(offset) || offset < 0)\r"]},{"id":9,"file":"js\\CommandLemmingsAction.js","start":54,"end":875,"kind":"ClassDeclaration","name":"CommandLemmingsAction","weight":1.5,"headline":"lemming game skill return skills manager get","preContext":[],"postContext":["constructor(lemmingId) {\r","    this.lemmingId = lemmingId;\r","  }"]},{"id":10,"file":"js\\BitWriter.js","start":255,"end":3374,"kind":"ClassDeclaration","name":"BitWriter","weight":1.5,"headline":"reader bit pos length number lemmings param","preContext":[],"postContext":["constructor(bitReader, outLength) {\r","    super();\r","    if (!bitReader || typeof bitReader.read !== 'function') {\r","      throw new TypeError('bitReader must have a .read() method');\r"]},{"id":11,"file":"js\\Game.js","start":78,"end":6510,"kind":"ClassDeclaration","name":"Game","weight":1.5,"headline":"game display manager level lemmings state null","preContext":[],"postContext":["constructor (gameResources) {","    super();","    this.gameResources = gameResources;",""]},{"id":12,"file":"js\\GameGui.js","start":154,"end":23606,"kind":"ClassDeclaration","name":"GameGui","weight":1.5,"headline":"game skill panel draw const speed get","preContext":[],"postContext":["constructor(game, skillPanelSprites, skills, gameTimer, gameVictoryCondition) {","    /* external handles */","    this.game                 = game;","    this.skillPanelSprites    = skillPanelSprites;"]},{"id":13,"file":"js\\FileProvider.js","start":138,"end":7559,"kind":"ClassDeclaration","name":"FileProvider","weight":1.5,"headline":"hr promise binary cache new load string","preContext":[],"postContext":["constructor(rootPath) {","    super();","    this.rootPath = rootPath;",""]},{"id":14,"file":"js\\CommandReleaseRateDecrease.js","start":54,"end":423,"kind":"ClassDeclaration","name":"CommandReleaseRateDecrease","weight":1.5,"headline":"game number victory condition return command release","preContext":[],"postContext":["constructor(number) {\r","    this.number = number;\r","  }"]},{"id":15,"file":"js\\CommandNuke.js","start":54,"end":523,"kind":"ClassDeclaration","name":"CommandNuke","weight":1.5,"headline":"game lemming manager return victory condition nuke","preContext":[],"postContext":["constructor() {}"]},{"id":16,"file":"js\\CommandReleaseRateIncrease.js","start":54,"end":422,"kind":"ClassDeclaration","name":"CommandReleaseRateIncrease","weight":1.5,"headline":"game number victory condition return command release","preContext":[],"postContext":["constructor(number) {\r","    this.number = number;\r","  }"]},{"id":17,"file":"js\\GameStateTypes.js","start":0,"end":239,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings game state types import names pace","preContext":[],"postContext":[]},{"id":18,"file":"js\\GameTimer.js","start":52,"end":9136,"kind":"ClassDeclaration","name":"GameTimer","weight":1.5,"headline":"game factor speed tick time const steps","preContext":[],"postContext":["constructor(level) {","    this.TIME_PER_FRAME_MS = 60;","    this.#speedFactor = 1;","    this.#frameTime = this.TIME_PER_FRAME_MS;"]},{"id":19,"file":"js\\CrosshairCursor.js","start":52,"end":632,"kind":"FunctionDeclaration","name":"createCrosshairFrame","weight":2,"headline":"frame size center const color set pixel","preContext":[],"postContext":[]},{"id":20,"file":"js\\DrawProperties.js","start":54,"end":432,"kind":"ClassDeclaration","name":"DrawProperties","weight":1.5,"headline":"overwrite erase class draw properties constructor upside","preContext":[],"postContext":["constructor(isUpsideDown, noOverwrite, onlyOverwrite, isErase) {\r","    this.isUpsideDown = isUpsideDown;\r","    this.noOverwrite = noOverwrite;\r","    this.onlyOverwrite = onlyOverwrite;\r"]},{"id":21,"file":"js\\FileContainer.js","start":256,"end":2863,"kind":"ClassDeclaration","name":"FileContainer","weight":1.5,"headline":"reader part parts read lemmings binary container","preContext":[],"postContext":["constructor(content) {","    super();","    this.#parts = [];","    this.read(content);"]},{"id":22,"file":"js\\EventHandler.js","start":54,"end":738,"kind":"ClassDeclaration","name":"EventHandler","weight":1.5,"headline":"handler handlers arg class event constructor callback","preContext":[],"postContext":["constructor () {\r","    this.handlers = new Set();\r","  }"]},{"id":23,"file":"js\\GameFactory.js","start":52,"end":1525,"kind":"ClassDeclaration","name":"GameFactory","weight":1.5,"headline":"game conf new return resources lemmings reader","preContext":[],"postContext":["constructor(rootPath) {","    this.rootPath = rootPath;","    this.fileProvider = new Lemmings.FileProvider(rootPath);","    let configFileReader = this.fileProvider.loadString('config.json');"]},{"id":24,"file":"js\\GameResult.js","start":54,"end":409,"kind":"ClassDeclaration","name":"GameResult","weight":1.5,"headline":"game get state class result constructor survivor","preContext":[],"postContext":["constructor(game) {\r","    this.state = game.getGameState();\r","    this.replay = game.getCommandManager().serialize();\r","    this.survivorPercentage = game.getVictoryCondition().getSurvivorPercentage();\r"]},{"id":25,"file":"js\\LevelWriter.js","start":81,"end":3903,"kind":"ClassDeclaration","name":"LevelWriter","weight":1.5,"headline":"pos set ui nt const level properties","preContext":[],"postContext":["write(level) {\r","    const out = new Uint8Array(2048);\r","    const dv = new DataView(out.buffer);\r","\r"]},{"id":26,"file":"js\\LevelElement.js","start":54,"end":179,"kind":"ClassDeclaration","name":"LevelElement","weight":1.5,"headline":"class level element constructor frame","preContext":[],"postContext":["constructor() {\r","    this.x = 0;\r","    this.y = 0;\r","    this.id = 0;\r"]},{"id":27,"file":"js\\LevelIndexResolve.js","start":54,"end":1010,"kind":"ClassDeclaration","name":"LevelIndexResolve","weight":1.5,"headline":"level order conf let li mode return","preContext":[],"postContext":["constructor(config) {\r","    this.config = config;\r","  }"]},{"id":28,"file":"js\\LogHandler.js","start":52,"end":1121,"kind":"ClassDeclaration","name":"Logger","weight":1.5,"headline":"msg class logger constructor module console enabled","preContext":[],"postContext":["constructor(moduleName) {","    this._moduleName = moduleName;","  }"]},{"id":29,"file":"js\\LevelConfig.js","start":54,"end":782,"kind":"ClassDeclaration","name":"LevelConfig","weight":1.5,"headline":"group odd table order level use prefix","preContext":[],"postContext":["constructor() {\r","    /** file Prefix used in the filename of the level-file */\r","    this.filePrefix = 'LEVEL';\r","    /** use the odd-table-file */\r"]},{"id":30,"file":"js\\LevelIndexType.js","start":54,"end":134,"kind":"ClassDeclaration","name":"LevelIndexType","weight":1.5,"headline":"class level constructor use odd table false","preContext":[],"postContext":["constructor() {\r","    this.useOddTable = false;\r","  }"]},{"id":31,"file":"js\\LevelProperties.js","start":54,"end":306,"kind":"ClassDeclaration","name":"LevelProperties","weight":1.5,"headline":"level release class properties constructor rate need","preContext":[],"postContext":["constructor() {\r","    this.levelName = '';\r","    this.releaseRate = 0;\r","    this.releaseCount = 0;\r"]},{"id":32,"file":"js\\MaskTypes.js","start":0,"end":233,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings mask types import names pace js","preContext":[],"postContext":[]},{"id":33,"file":"js\\MapObject.js","start":54,"end":1689,"kind":"ClassDeclaration","name":"MapObject","weight":1.5,"headline":"im animation frames ob frame map trigger","preContext":[],"postContext":["constructor (ob, objectImg, animation = new Lemmings.Animation(), triggerType = Lemmings.TriggerTypes.NO_TRIGGER) {\r","    this.ob              = ob;\r","    this.obID            = ob.id;\r","    this.x               = ob.x;\r"]},{"id":34,"file":"js\\MaskList.js","start":54,"end":623,"kind":"ClassDeclaration","name":"MaskList","weight":1.5,"headline":"offset mask fr frames length load class","preContext":[],"postContext":["constructor(fr, width, height, count, offsetX, offsetY) {\r","    this.frames = [];\r","    if (fr != null) {\r","      this.loadFromFile(fr, width, height, count, offsetX, offsetY);\r"]},{"id":35,"file":"js\\Mask.js","start":54,"end":1390,"kind":"ClassDeclaration","name":"Mask","weight":1.5,"headline":"offset bit fr pix mask param number","preContext":[],"postContext":["constructor(fr, width = 0, height = 0, offsetX = 0, offsetY = 0) {\r","    this.offsetX = offsetX;\r","    this.offsetY = offsetY;\r","    this.width = width;\r"]},{"id":36,"file":"js\\MaskProvider.js","start":54,"end":778,"kind":"ClassDeclaration","name":"MaskProvider","weight":1.5,"headline":"mask list lemmings types fr new class","preContext":[],"postContext":["constructor(fr) {\r","    this.maskList = [];\r","    this.maskList[Lemmings.MaskTypes.BASHING_R] = new Lemmings.MaskList(fr, 16, 10, 4, -8, -10);\r","    this.maskList[Lemmings.MaskTypes.BASHING_L] = new Lemmings.MaskList(fr, 16, 10, 4, -8, -10);\r"]},{"id":37,"file":"js\\ObjectImageInfo.js","start":81,"end":525,"kind":"ClassDeclaration","name":"ObjectImageInfo","weight":1.5,"headline":"image unknown info class extends lemmings base","preContext":[],"postContext":["constructor() {","    super(...arguments);","    this.animationLoop = false;","    this.firstFrameIndex = 0;"]},{"id":38,"file":"js\\ObjectManager.js","start":54,"end":669,"kind":"ClassDeclaration","name":"ObjectManager","weight":1.5,"headline":"game objects obj let timer map display","preContext":[],"postContext":["constructor(gameTimer) {\r","    this.gameTimer = gameTimer;\r","    this.objects = [];\r","  }"]},{"id":39,"file":"js\\SkillPanelSprites.js","start":54,"end":4010,"kind":"ClassDeclaration","name":"SkillPanelSprites","weight":1.5,"headline":"palette sprite number let const im return","preContext":[],"postContext":["constructor(fr2, fr6, colorPalette) {\r","    this.letterSprite = {};\r","    this.numberSpriteLeft = [];\r","    this.numberSpriteRight = [];\r"]},{"id":40,"file":"js\\OddTableReader.js","start":81,"end":1846,"kind":"ClassDeclaration","name":"OddTableReader","weight":1.5,"headline":"level prop read fr word lemmings skills","preContext":[],"postContext":["constructor(oddfile) {\r","    super();\r","    this.levelProperties = [];\r","    this.read(oddfile);\r"]},{"id":41,"file":"js\\SkillTypes.js","start":0,"end":266,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings skill types import names pace js","preContext":[],"postContext":[]},{"id":42,"file":"js\\PackFilePart.js","start":815,"end":2781,"kind":"ClassDeclaration","name":"PackFilePart","weight":1.5,"headline":"bits push byte const let length chunk","preContext":[],"postContext":["static pack(buffer) {","    if (!(buffer instanceof Uint8Array)) buffer = new Uint8Array(buffer);","","    const bits = [];"]},{"id":43,"file":"js\\Stage.js","start":52,"end":395,"kind":"FunctionDeclaration","name":"colorStringTo32","weight":2,"headline":"const ff parse int str return function","preContext":[],"postContext":["class Stage {","  constructor(canvasForOutput) {","    this.controller = null;","    this.fadeTimer = 0;"]},{"id":44,"file":"js\\SpriteTypes.js","start":0,"end":475,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings sprite types import names pace js","preContext":[],"postContext":[]},{"id":45,"file":"js\\PaletteImage.js","start":54,"end":1775,"kind":"ClassDeclaration","name":"PaletteImage","weight":1.5,"headline":"bu bit pix sr pos let palette","preContext":[],"postContext":["constructor(width, height) {\r","    this.width = width;\r","    this.height = height;\r","    this.pixBuf = new Uint8Array(width * height);\r"]},{"id":46,"file":"js\\ParticleTable.js","start":212,"end":3057,"kind":"ClassDeclaration","name":"ParticleTable","weight":1.5,"headline":"particle palette table frame color frames const","preContext":[],"postContext":["constructor(palette) {","    this.#palette = palette;","    this.#colorIndexTable = [4, 15, 14, 13, 12, 11, 10, 9, 8, 11, 10, 9, 8, 7, 6, 2];",""]},{"id":47,"file":"js\\Position2D.js","start":54,"end":259,"kind":"ClassDeclaration","name":"Position2D","weight":1.5,"headline":"position container class constructor","preContext":[],"postContext":["constructor(x = 0, y = 0) {\r","    /** X position in the container */\r","    this.x = 0;\r","    /** Y position in the container */\r"]},{"id":48,"file":"js\\Range.js","start":54,"end":221,"kind":"ClassDeclaration","name":"Range","weight":1.5,"headline":"class range constructor direction","preContext":[],"postContext":["constructor() {\r","    this.x = 0;\r","    this.y = 0;\r","    this.width = 0;\r"]},{"id":49,"file":"js\\Rectangle.js","start":54,"end":436,"kind":"ClassDeclaration","name":"Rectangle","weight":1.5,"headline":"class rectangle constructor position container","preContext":[],"postContext":["constructor(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\r","    /** X position in the container */\r","    this.x1 = 0;\r","    /** Y position in the container */\r"]},{"id":50,"file":"eslint.config.js","start":0,"end":480,"kind":"Module","name":"root","weight":1.2,"headline":"error holiday lemmings xmas export default files","preContext":[],"postContext":[]},{"id":51,"file":"js\\StageImageProperties.js","start":52,"end":809,"kind":"ClassDeclaration","name":"StageImageProperties","weight":1.5,"headline":"canvas cav image create true stage view","preContext":[],"postContext":["constructor() {","    this.x = 0;","    this.y = 0;","    this.width = 0;"]},{"id":52,"file":"js\\TerrainImageInfo.js","start":81,"end":137,"kind":"ClassDeclaration","name":"TerrainImageInfo","weight":1.5,"headline":"image info class terrain extends lemmings base","preContext":[],"postContext":[]},{"id":53,"file":"js\\Trigger.js","start":54,"end":1528,"kind":"ClassDeclaration","name":"Trigger","weight":1.5,"headline":"tick disabled trigger owner return disable ticks","preContext":[],"postContext":["constructor(type = Lemmings.TriggerTypes.NO_TRIGGER, x1 = 0, y1 = 0, x2 = 0, y2 = 0, disableTicksCount = 0, soundIndex = -1, owner = null) {\r","    this.#disabledUntilTick = 0;\r","    this.owner = owner;\r","    this.type = type;\r"]},{"id":54,"file":"js\\ActionBaseSystem.js","start":177,"end":2670,"kind":"ClassDeclaration","name":"ActionBaseSystem","weight":1.5,"headline":"sprite action cache mask map get sprites","preContext":[],"postContext":["constructor({sprites=null, spriteType=null, singleSprite=false, masks=null, maskTypes=null, actionName=null} = {}) {\r","    this.sprites = null;\r","    this.masks   = null;\r","    this.actionName = actionName || '';\r"]},{"id":55,"file":"js\\ActionBlockerSystem.js","start":110,"end":1024,"kind":"ClassDeclaration","name":"ActionBlockerSystem","weight":1.5,"headline":"le trigger lemmings manager state action sprite","preContext":[],"postContext":["constructor(sprites, triggerManager) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.BLOCKING, singleSprite: true, actionName: 'blocking' });","    this.triggerManager = triggerManager;","  }"]},{"id":56,"file":"js\\ActionBuildSystem.js","start":113,"end":1244,"kind":"ClassDeclaration","name":"ActionBuildSystem","weight":1.5,"headline":"le look lemmings state return lemming level","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.BUILDING, actionName: 'building' });\r","  }"]},{"id":57,"file":"js\\ActionClimbSystem.js","start":117,"end":1104,"kind":"ClassDeclaration","name":"ActionClimbSystem","weight":1.5,"headline":"le return lemmings frame action lemming state","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.CLIMBING, actionName: 'climbing' });\r","  }"]},{"id":58,"file":"js\\ActionCountdownSystem.js","start":113,"end":1086,"kind":"ClassDeclaration","name":"ActionCountdownSystem","weight":1.5,"headline":"le countdown action number masks system return","preContext":[],"postContext":["constructor(masks) {\r","    super({ actionName: 'countdown' });\r","    if (ActionCountdownSystem.numberMasks.size == 0) {\r","      ActionCountdownSystem.numberMasks.set('numbers', masks.GetMask(Lemmings.MaskTypes.NUMBERS));\r"]},{"id":59,"file":"js\\ActionDiggSystem.js","start":121,"end":1326,"kind":"ClassDeclaration","name":"ActionDiggSystem","weight":1.5,"headline":"le level state dig lemmings ground return","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.DIGGING, actionName: 'digging' });\r","  }"]},{"id":60,"file":"js\\ActionDrowningSystem.js","start":113,"end":933,"kind":"ClassDeclaration","name":"ActionDrowningSystem","weight":1.5,"headline":"le action lemmings look sprite return game","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.DROWNING, singleSprite: true, actionName: 'drowning' });\r","  }"]},{"id":61,"file":"js\\ActionExitingSystem.js","start":113,"end":772,"kind":"ClassDeclaration","name":"ActionExitingSystem","weight":1.5,"headline":"le game action victory condition sprite lemmings","preContext":[],"postContext":["constructor(sprites, gameVictoryCondition) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.EXITING, singleSprite: true, actionName: 'exiting' });\r","    this.gameVictoryCondition = gameVictoryCondition;\r","  }"]},{"id":62,"file":"js\\ActionFallSystem.js","start":110,"end":947,"kind":"ClassDeclaration","name":"ActionFallSystem","weight":1.5,"headline":"le state lemmings lemming return action fall","preContext":[],"postContext":["constructor(sprites) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.FALLING, actionName: 'falling' });","  }"]},{"id":63,"file":"js\\BinaryReader.js","start":208,"end":8377,"kind":"ClassDeclaration","name":"BinaryReader","weight":1.5,"headline":"offset length pos number reader logical hidden","preContext":[],"postContext":["constructor(dataArray, offset = 0, length, filename = '[unknown]', foldername = '[unknown]') {","    super();","    this.filename = filename;","    this.foldername = foldername;"]},{"id":64,"file":"js\\ActionFloatingSystem.js","start":258,"end":1318,"kind":"ClassDeclaration","name":"ActionFloatingSystem","weight":1.5,"headline":"le frame action return sprites lemmings lemming","preContext":[],"postContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.UMBRELLA, actionName: 'floating' });\r","  }"]},{"id":65,"file":"js\\xbrz\\scalers\\Blender.js","start":82,"end":286,"kind":"FunctionDeclaration","name":"blendComponent","weight":2,"headline":"mask pixel set chan blend const function","preContext":[],"postContext":["function alphaBlend (n, m, dstPtr, col) {","  // assert n < 256 : \"possible overflow of (col & redMask) * N\";","  // assert m < 256 : \"possible overflow of (col & redMask) * N + (dst & redMask) * (M - N)\";","  // assert 0 < n && n < m : \"0 < N && N < M\";"]},{"id":66,"file":"test\\action-base-system.test.js","start":306,"end":425,"kind":"ClassDeclaration","name":"StubAnimation","weight":0.5,"headline":"class stub animation constructor label get frame","preContext":[],"postContext":["constructor(label) { this.label = label; }"]},{"id":67,"file":"test\\automerge-metrics-workflow.test.js","start":0,"end":534,"kind":"Module","name":"root","weight":0.5,"headline":"const sync import fs yam auto merge","preContext":[],"postContext":[]},{"id":68,"file":"test\\animation.test.js","start":0,"end":1433,"kind":"Module","name":"root","weight":0.5,"headline":"anim js expect palette equal import color","preContext":[],"postContext":[]},{"id":69,"file":"test\\action-drown-explode.test.js","start":368,"end":655,"kind":"ClassDeclaration","name":"StubLemming","weight":0.5,"headline":"class stub lemming constructor look true disabled","preContext":[],"postContext":["constructor(x = 0, y = 0) {","    this.x = x;","    this.y = y;","    this.lookRight = true;"]},{"id":70,"file":"test\\action-mine-system.test.js","start":214,"end":347,"kind":"ClassDeclaration","name":"DummyMask","weight":0.5,"headline":"class dummy mask constructor offset return false","preContext":[],"postContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; }"]},{"id":71,"file":"test\\baseimageinfo.test.js","start":0,"end":1203,"kind":"Module","name":"root","weight":0.5,"headline":"info expect equal image js base loc","preContext":[],"postContext":[]},{"id":72,"file":"test\\action-systems-extra.test.js","start":488,"end":609,"kind":"ClassDeclaration","name":"StubDisplay","weight":0.5,"headline":"class stub display constructor frame calls draw","preContext":[],"postContext":["constructor() { this.calls = []; }"]},{"id":73,"file":"test\\action-systems.test.js","start":1819,"end":2371,"kind":"ClassDeclaration","name":"StubLemming","weight":0.5,"headline":"countdown return true class stub lemming constructor","preContext":[],"postContext":["constructor(x = 0, y = 0) {","    this.x = x;","    this.y = y;","    this.lookRight = true;"]},{"id":74,"file":"test\\bench-measure-extras.test.js","start":0,"end":2817,"kind":"Module","name":"root","weight":0.5,"headline":"game view js lemmings get return global","preContext":[],"postContext":[]},{"id":75,"file":"test\\bench-speed-adjust.test.js","start":0,"end":3515,"kind":"Module","name":"root","weight":0.5,"headline":"timer ra clock gu speed lemmings cb","preContext":[],"postContext":[]},{"id":76,"file":"test\\bench-sequence-start.test.js","start":0,"end":2028,"kind":"Module","name":"root","weight":0.5,"headline":"lemmings js game stage return import expect","preContext":[],"postContext":[]},{"id":77,"file":"test\\bench-entrance-placement.test.js","start":381,"end":541,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"game get return async conf class factory","preContext":[],"postContext":["async getGame() { return {}; }"]},{"id":78,"file":"test\\binaryreader.test.js","start":0,"end":2001,"kind":"Module","name":"root","weight":0.5,"headline":"reader read assert const lemmings log handler","preContext":[],"postContext":[]},{"id":79,"file":"test\\bench-no-end.test.js","start":294,"end":624,"kind":"FunctionDeclaration","name":"makeGame","weight":0.5,"headline":"game const level release time new victory","preContext":[],"postContext":[]},{"id":80,"file":"test\\bitreader.test.js","start":0,"end":2023,"kind":"Module","name":"root","weight":0.5,"headline":"reader expect const new bin bit equal","preContext":[],"postContext":[]},{"id":81,"file":"test\\bench-sequence.test.js","start":214,"end":275,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":82,"file":"test\\bitstream.test.js","start":0,"end":2035,"kind":"Module","name":"root","weight":0.5,"headline":"bit reader writer js const import read","preContext":[],"postContext":[]},{"id":83,"file":"test\\check-undefined.test.js","start":0,"end":1850,"kind":"Module","name":"root","weight":0.5,"headline":"sync dir fs result const script ht","preContext":[],"postContext":[]},{"id":84,"file":"test\\bench-start.test.js","start":324,"end":582,"kind":"ClassDeclaration","name":"LevelStub","weight":0.5,"headline":"ground return class level stub constructor objects","preContext":[],"postContext":["constructor() {","    this.width = 100;","    this.height = 50;","    this.objects = [];"]},{"id":85,"file":"test\\bench-tps.test.js","start":288,"end":1767,"kind":"ClassDeclaration","name":"DisplayImageStub","weight":0.5,"headline":"draw frame arg calls push op new","preContext":[],"postContext":["constructor() {","    this.width = 176;","    this.height = 40;","    this.onMouseDown = new Lemmings.EventHandler();"]},{"id":86,"file":"test\\commands.test.js","start":0,"end":3270,"kind":"Module","name":"root","weight":0.5,"headline":"const nuke return lemmings command expect game","preContext":[],"postContext":[]},{"id":87,"file":"test\\dependency-review-workflow.test.js","start":0,"end":732,"kind":"Module","name":"root","weight":0.5,"headline":"expect work const dependency review flow step","preContext":[],"postContext":[]},{"id":88,"file":"test\\command-lemmings-action.extra.test.js","start":0,"end":1226,"kind":"Module","name":"root","weight":0.5,"headline":"lemmings command const action return expect cmd","preContext":[],"postContext":[]},{"id":89,"file":"test\\bitwriter.test.js","start":283,"end":416,"kind":"ClassDeclaration","name":"StubReader","weight":0.5,"headline":"class stub reader constructor values slice read","preContext":[],"postContext":["constructor(values) {","    this.values = values.slice();","  }"]},{"id":90,"file":"test\\crosshaircursor.test.js","start":0,"end":863,"kind":"Module","name":"root","weight":0.5,"headline":"js frame size import crosshair const center","preContext":[],"postContext":[]},{"id":91,"file":"test\\displayimage.primitives.test.js","start":86,"end":349,"kind":"ClassDeclaration","name":"StubStage","weight":0.5,"headline":"class stub stage constructor calls create image","preContext":[],"postContext":["constructor() { this.calls = []; }"]},{"id":92,"file":"js\\GameTypes.js","start":0,"end":1113,"kind":"Module","name":"root","weight":1.2,"headline":"game types string return length function lemmings","preContext":[],"postContext":[]},{"id":93,"file":"js\\GameView.js","start":172,"end":24541,"kind":"ClassDeclaration","name":"GameView","weight":1.5,"headline":"game level bench const group timer null","preContext":[],"postContext":["constructor() {","    super();","    this.gameType = null;","    this.levelIndex = 0;"]},{"id":94,"file":"js\\GameVictoryCondition.js","start":52,"end":2321,"kind":"ClassDeclaration","name":"GameVictoryCondition","weight":1.5,"headline":"release rate return finalize get level min","preContext":[],"postContext":["constructor(level) {","    this.isFinalize = false;","    this.needCount = level.needCount;","    this.releaseCount = level.releaseCount;"]},{"id":95,"file":"js\\GroundRenderer.js","start":54,"end":2029,"kind":"ClassDeclaration","name":"GroundRenderer","weight":1.5,"headline":"const im sr level des overwrite let","preContext":[],"postContext":["constructor () {}"]},{"id":96,"file":"js\\Lemming.js","start":78,"end":3027,"kind":"ClassDeclaration","name":"Lemming","weight":1.5,"headline":"action return lemming countdown center lemmings state","preContext":[],"postContext":["constructor(x = 0, y = 0, id) {","    super();","    this.lookRight = true;","    this.frameIndex = 0;"]},{"id":97,"file":"js\\L2ssSpriteDecoder.js","start":31,"end":104,"kind":"FunctionDeclaration","name":"readU16BE","weight":2,"headline":"bu function read return","preContext":[],"postContext":["function readU32BE(buf, off) {","  return (","    (buf[off] << 24) |","    (buf[off + 1] << 16) |"]},{"id":98,"file":"js\\LemmingsBootstrap.js","start":0,"end":2942,"kind":"Module","name":"root","weight":1.2,"headline":"import js action system game level reader","preContext":[],"postContext":[]},{"id":99,"file":"js\\LemmingsNamespace.js","start":0,"end":264,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings ff window names pace js export","preContext":[],"postContext":[]},{"id":100,"file":"js\\ActionMineSystem.js","start":113,"end":1317,"kind":"ClassDeclaration","name":"ActionMineSystem","weight":1.5,"headline":"le mask lemmings level types frame case","preContext":[],"postContext":["constructor(sprites, masks) {\r","    super({\r","      sprites,\r","      spriteType: Lemmings.SpriteTypes.MINING,\r"]},{"id":101,"file":"js\\LemmingStateType.js","start":0,"end":481,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings lemming state import names pace js","preContext":[],"postContext":[]},{"id":102,"file":"js\\LemmingsSprite.js","start":212,"end":5685,"kind":"ClassDeclaration","name":"LemmingsSprite","weight":1.5,"headline":"lemmings sprite animation types palette cache param","preContext":[],"postContext":["constructor(fr, colorPalette) {\r","    this.#colorPalette = colorPalette;\r","\r","    // Ensure a palette entry exists in the cache (cost: one WeakMap lookup)\r"]},{"id":103,"file":"js\\LevelReader.js","start":81,"end":4763,"kind":"ClassDeclaration","name":"LevelReader","weight":1.5,"headline":"fr read level new properties word lemmings","preContext":[],"postContext":["constructor(fr) {\r","    super();\r","    this.levelWidth = 1600;\r","    this.levelHeight = 160;\r"]},{"id":104,"file":"js\\xbrz\\xbrz.js","start":252,"end":482,"kind":"ClassDeclaration","name":"IntPtr","weight":1.5,"headline":"pt int arr pos class constructor position","preContext":[],"postContext":["constructor (intArray) {","    this.arr = intArray;","    this.ptr = 0;","  }"]},{"id":105,"file":"test\\gamegui.test.js","start":354,"end":1790,"kind":"ClassDeclaration","name":"DisplayImageStub","weight":0.5,"headline":"draw frame arg calls push op new","preContext":[],"postContext":["constructor() {","    this.width = 176;","    this.height = 40;","    this.onMouseDown = new Lemmings.EventHandler();"]},{"id":106,"file":"test\\gameview.applyquery.test.js","start":133,"end":194,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":107,"file":"test\\gameview.helpers.test.js","start":131,"end":175,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"class game factory stub constructor","preContext":[],"postContext":["constructor() {}"]},{"id":108,"file":"test\\gameview.canvas-reset.test.js","start":119,"end":430,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"calls handler add remove timeout event listener","preContext":[],"postContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"]},{"id":109,"file":"test\\gameview.dispose.test.js","start":119,"end":430,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"calls handler add remove timeout event listener","preContext":[],"postContext":["class KeyboardShortcutsMock {","  constructor() { this.disposeCalled = 0; }","  dispose() { this.disposeCalled++; }","}"]},{"id":110,"file":"test\\gameview.frames-no-game.test.js","start":0,"end":421,"kind":"Module","name":"root","weight":0.5,"headline":"view game frame expect speed factor import","preContext":[],"postContext":[]},{"id":111,"file":"test\\gameview.enableDebug.test.js","start":119,"end":180,"kind":"ClassDeclaration","name":"KeyboardShortcutsStub","weight":0.5,"headline":"class keyboard shortcuts stub constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":112,"file":"test\\gameview.helperExtras.test.js","start":132,"end":176,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"class game factory stub constructor","preContext":[],"postContext":["constructor() {}"]},{"id":113,"file":"test\\gameview.menu-selects.test.js","start":119,"end":282,"kind":"FunctionDeclaration","name":"createWindow","weight":0.5,"headline":"timeout event listener function create window return","preContext":[],"postContext":["function createDocument() {","  return {","    createElement() { return { textContent: '', value: '' }; },","    addEventListener() {},"]},{"id":114,"file":"test\\gameview.loadlevel-missing.test.js","start":179,"end":244,"kind":"ClassDeclaration","name":"KeyboardShortcutsStub","weight":0.5,"headline":"class keyboard shortcuts stub constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":115,"file":"test\\gameview.loadlevel.test.js","start":226,"end":287,"kind":"ClassDeclaration","name":"KeyboardShortcutsStub","weight":0.5,"headline":"class keyboard shortcuts stub constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":116,"file":"test\\gameview.loadReplay.test.js","start":165,"end":226,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":117,"file":"test\\gameview.movelevel.paths.test.js","start":87,"end":250,"kind":"FunctionDeclaration","name":"createWindow","weight":0.5,"headline":"timeout event listener function create window return","preContext":[],"postContext":[]},{"id":118,"file":"test\\geometry.test.js","start":0,"end":972,"kind":"Module","name":"root","weight":0.5,"headline":"expect equal js import rect lemmings range","preContext":[],"postContext":[]},{"id":119,"file":"test\\gameview.onGameEnd.test.js","start":200,"end":261,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":120,"file":"test\\gameview.setup.test.js","start":119,"end":288,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"create return event listener function document stub","preContext":[],"postContext":["function createSelect() {","  return {","    options: [],","    selectedIndex: -1,"]},{"id":121,"file":"test\\gameview.stepSpeed.test.js","start":0,"end":1258,"kind":"Module","name":"root","weight":0.5,"headline":"game view timer const speed calls tick","preContext":[],"postContext":[]},{"id":122,"file":"test\\gameview.sound.test.js","start":56,"end":98,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"class game factory stub constructor","preContext":[],"postContext":["constructor() {}"]},{"id":123,"file":"test\\keyboardshortcuts.instantNuke.test.js","start":0,"end":2299,"kind":"Module","name":"root","weight":0.5,"headline":"action lemmings const list calls set expect","preContext":[],"postContext":[]},{"id":124,"file":"test\\hqx-index.test.js","start":151,"end":899,"kind":"FunctionDeclaration","name":"setupTemp","weight":0.5,"headline":"js sync hq squoosh dir fs const","preContext":[],"postContext":[]},{"id":125,"file":"test\\hqx-scaling.test.js","start":69,"end":281,"kind":"FunctionDeclaration","name":"decodeBase64","weight":0.5,"headline":"const binary bytes function decode base ob","preContext":[],"postContext":[]},{"id":126,"file":"test\\keyboardshortcuts.loop.test.js","start":293,"end":1109,"kind":"ClassDeclaration","name":"StageStub","weight":0.5,"headline":"im return view point scale game props","preContext":[],"postContext":["constructor() {","    this._rawScale = 1;","    this.redrawCount = 0;","    this.updateCalls = [];"]},{"id":127,"file":"js\\TriggerTypes.js","start":0,"end":459,"kind":"Module","name":"root","weight":1.2,"headline":"lemmings trigger types import names pace js","preContext":[],"postContext":[]},{"id":128,"file":"test\\displayimage.test.js","start":126,"end":281,"kind":"ClassDeclaration","name":"StubStage","weight":0.5,"headline":"class stub stage create image return new","preContext":[],"postContext":["createImage() {","    return { width: 0, height: 0, data: new Uint8ClampedArray(0) };","  }"]},{"id":129,"file":"js\\vendor\\hqx\\squooshhqx.js","start":44,"end":250,"kind":"FunctionDeclaration","name":"getUint32Memory0","weight":2,"headline":"ui nt memory cached function get null","preContext":[],"postContext":["function passArray32ToWasm0(arg, malloc) {","  const ptr = malloc(arg.length * 4, 4) >>> 0;","  getUint32Memory0().set(arg, ptr / 4);","  WASM_VECTOR_LEN = arg.length;"]},{"id":130,"file":"js\\TriggerManager.js","start":565,"end":5872,"kind":"ClassDeclaration","name":"TriggerManager","weight":1.5,"headline":"trigger const level frame cs debug max","preContext":[],"postContext":["constructor (gameTimer, levelW = 1600, levelH = 160, cellSize = 16) {\r","    /* store basics */\r","    this.gameTimer = gameTimer;\r","    this._cellSize = cellSize;\r"]},{"id":131,"file":"js\\UserInputManager.js","start":52,"end":333,"kind":"ClassDeclaration","name":"MouseMoveEventArguements","weight":1.5,"headline":"delta mouse button class move event argue","preContext":[],"postContext":["constructor(x = 0, y = 0, deltaX = 0, deltaY = 0, button = false) {","    super(x, y);","    this.mouseDownX = 0;","    this.mouseDownY = 0;"]},{"id":132,"file":"js\\UnpackFilePart.js","start":236,"end":5284,"kind":"ClassDeclaration","name":"UnpackFilePart","weight":1.5,"headline":"reader number bit size return unknown binary","preContext":[],"postContext":["constructor(fileReader) {\r","    super();\r","    this.#fileReader = fileReader;\r","  }"]},{"id":133,"file":"js\\vendor\\hqx\\index.js","start":124,"end":336,"kind":"FunctionDeclaration","name":"decodeBase64","weight":2,"headline":"const binary bytes function decode base ob","preContext":[],"postContext":["function initHqx() {","  if (!initialized) {","    const bytes = decodeBase64(wasmBase64);","    initSync(bytes);"]},{"id":134,"file":"js\\xbrz\\scalers\\index.js","start":0,"end":156,"kind":"Module","name":"root","weight":1.2,"headline":"scaler import js export","preContext":[],"postContext":[]},{"id":135,"file":"js\\VGASpecReader.js","start":186,"end":3913,"kind":"ClassDeclaration","name":"VGASpecReader","weight":1.5,"headline":"fr lemmings read image palette const offset","preContext":[],"postContext":["constructor(vgaspecFile, width, height) {\r","    super();\r","    this.#log = this.log;\r","    this.#width = width | 0;\r"]},{"id":136,"file":"js\\xbrz\\scalers\\Scaler3x.js","start":0,"end":1242,"kind":"Module","name":"root","weight":1.2,"headline":"blend ref alpha scale line scaler super","preContext":[],"postContext":[]},{"id":137,"file":"js\\xbrz\\scalers\\Scaler4x.js","start":0,"end":1697,"kind":"Module","name":"root","weight":1.2,"headline":"blend ref alpha scale set line scaler","preContext":[],"postContext":[]},{"id":138,"file":"js\\ViewPoint.js","start":52,"end":1194,"kind":"ClassDeclaration","name":"ViewPoint","weight":1.5,"headline":"min max bounds math number trun class","preContext":[],"postContext":["constructor(x, y, scale) {","    this.x = x;","    this.y = y;","    this.scale = scale;"]},{"id":139,"file":"js\\xbrz\\scalers\\Scaler2x.js","start":0,"end":782,"kind":"Module","name":"root","weight":1.2,"headline":"blend alpha ref scale line shallow steep","preContext":[],"postContext":[]},{"id":140,"file":"test\\gamevictorycondition.methods.test.js","start":0,"end":2125,"kind":"Module","name":"root","weight":0.5,"headline":"vc expect release rate equal function make","preContext":[],"postContext":[]},{"id":141,"file":"test\\no-result-queries-workflow.test.js","start":0,"end":1764,"kind":"Module","name":"root","weight":0.5,"headline":"fs result target base dir sync const","preContext":[],"postContext":[]},{"id":142,"file":"test\\loghandler.test.js","start":181,"end":321,"kind":"ClassDeclaration","name":"RecordingHandler","weight":0.5,"headline":"recording handler class constructor messages push log","preContext":[],"postContext":["constructor(name) {","    this.name = name;","    RecordingHandler.messages.push(name);","  }"]},{"id":143,"file":"test\\no-result-queries-ci-workflow.test.js","start":0,"end":531,"kind":"Module","name":"root","weight":0.5,"headline":"const sync import fs yam auto merge","preContext":[],"postContext":[]},{"id":144,"file":"test\\oddtable.test.js","start":0,"end":1015,"kind":"Module","name":"root","weight":0.5,"headline":"js import const lemmings br pos offsets","preContext":[],"postContext":[]},{"id":145,"file":"test\\mask.test.js","start":226,"end":374,"kind":"ClassDeclaration","name":"StubReader","weight":0.5,"headline":"class stub reader constructor bytes read byte","preContext":[],"postContext":["constructor(bytes) {","    this.bytes = bytes;","    this.idx = 0;","  }"]},{"id":146,"file":"test\\oddtablereader.test.js","start":0,"end":1277,"kind":"Module","name":"root","weight":0.5,"headline":"js reader const import odd level expect","preContext":[],"postContext":[]},{"id":147,"file":"test\\objectmanager.render.test.js","start":0,"end":1137,"kind":"Module","name":"root","weight":0.5,"headline":"frame obj manager const tick draws draw","preContext":[],"postContext":[]},{"id":148,"file":"test\\packfilepart.test.js","start":0,"end":4232,"kind":"Module","name":"root","weight":0.5,"headline":"part const arr packed result new js","preContext":[],"postContext":[]},{"id":149,"file":"test\\search-history-ci-workflow.test.js","start":0,"end":531,"kind":"Module","name":"root","weight":0.5,"headline":"const sync import fs yam auto merge","preContext":[],"postContext":[]},{"id":150,"file":"test\\search-history-workflow.test.js","start":0,"end":3507,"kind":"Module","name":"root","weight":0.5,"headline":"const fs history dir target rec sync","preContext":[],"postContext":[]},{"id":151,"file":"test\\overlay-ants.test.js","start":326,"end":728,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"image return canvas ct get event listener","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":152,"file":"test\\search-script.test.js","start":0,"end":9152,"kind":"Module","name":"root","weight":0.5,"headline":"dir sync const fs join js res","preContext":[],"postContext":[]},{"id":153,"file":"test\\particletable.test.js","start":197,"end":329,"kind":"FunctionDeclaration","name":"makePalette","weight":0.5,"headline":"return get function make palette","preContext":[],"postContext":[]},{"id":154,"file":"test\\skillpanelsprites.helpers.test.js","start":362,"end":426,"kind":"ClassDeclaration","name":"FakeReader","weight":0.5,"headline":"class fake reader set offset read byte","preContext":[],"postContext":["setOffset() {}"]},{"id":155,"file":"test\\squooshhqx.test.js","start":0,"end":1862,"kind":"Module","name":"root","weight":0.5,"headline":"pt const module web assembly instance stub","preContext":[],"postContext":[]},{"id":156,"file":"test\\smoothscroller.test.js","start":0,"end":1805,"kind":"Module","name":"root","weight":0.5,"headline":"ss velocity expect impulse add smooth scroll","preContext":[],"postContext":[]},{"id":157,"file":"test\\skillpanelsprites.test.js","start":341,"end":445,"kind":"ClassDeclaration","name":"FakeAnimation","weight":0.5,"headline":"class fake animation constructor label get frame","preContext":[],"postContext":["constructor(label) { this.label = label; }"]},{"id":158,"file":"test\\stage.setGameViewPointPosition.test.js","start":326,"end":624,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":159,"file":"test\\enums.test.js","start":0,"end":992,"kind":"Module","name":"root","weight":0.5,"headline":"types expect js equal game import state","preContext":[],"postContext":[]},{"id":160,"file":"test\\eventhandler.test.js","start":0,"end":679,"kind":"Module","name":"root","weight":0.5,"headline":"calls const lemmings js event handler import","preContext":[],"postContext":[]},{"id":161,"file":"test\\stage.utilities.test.js","start":373,"end":671,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":162,"file":"test\\stage.utils.test.js","start":326,"end":624,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":163,"file":"test\\fileprovider.test.js","start":139,"end":164,"kind":"ClassDeclaration","name":"MockBinaryReader","weight":0.5,"headline":"class mock binary reader","preContext":[],"postContext":["class MockLogHandler {","  constructor() {","    this.logged = [];","    this.debugged = [];"]},{"id":164,"file":"test\\exportLemmingsSprites.test.js","start":276,"end":1249,"kind":"FunctionDeclaration","name":"setupStubs","weight":0.5,"headline":"lemmings sprite frame palette class color game","preContext":[],"postContext":["function patchScript() {","  const origPath = new URL('../tools/exportLemmingsSprites.js', import.meta.url);","  const code = fs.readFileSync(fileURLToPath(origPath), 'utf8');","  const patched = code"]},{"id":165,"file":"test\\game.test.js","start":0,"end":6486,"kind":"Module","name":"root","weight":0.5,"headline":"game lemmings expect manager called display timer","preContext":[],"postContext":[]},{"id":166,"file":"test\\exportPanelSprite.defaultPack.test.js","start":237,"end":958,"kind":"FunctionDeclaration","name":"setupStubs","weight":0.5,"headline":"lemmings panel color skill sprite frame palette","preContext":[],"postContext":["async function runScript(script, args, options = {}) {","  const origArgv = process.argv;","  const origCwd = process.cwd();","  let error;"]},{"id":167,"file":"test\\filecontainer.test.js","start":367,"end":841,"kind":"FunctionDeclaration","name":"buildBuffer","weight":0.5,"headline":"checksum const compressed ui nt size bad","preContext":[],"postContext":["function computeChecksum(part, source) {\r","  let cs = 0;\r","  const data = source.data.subarray(part.offset, part.offset + part.compressedSize);\r","  for (const b of data) cs ^= b;\r"]},{"id":168,"file":"test\\gamefactory.resources.test.js","start":0,"end":1901,"kind":"Module","name":"root","weight":0.5,"headline":"game resources lemmings conf stub expect provider","preContext":[],"postContext":[]},{"id":169,"file":"test\\filecontainer-errors.test.js","start":208,"end":321,"kind":"ClassDeclaration","name":"MockLogHandler","weight":0.5,"headline":"log logged msg class mock handler constructor","preContext":[],"postContext":["constructor() { this.logged = []; }"]},{"id":170,"file":"test\\gamefactory.test.js","start":0,"end":2265,"kind":"Module","name":"root","weight":0.5,"headline":"game lemmings stub conf timer resources provider","preContext":[],"postContext":[]},{"id":171,"file":"test\\gamedisplay.extra.test.js","start":206,"end":493,"kind":"FunctionDeclaration","name":"createDisplay","weight":0.5,"headline":"draw rect calls arg corner dashed push","preContext":[],"postContext":["function createManagers(lem) {","  const lm = {","    renderCalled: 0,","    debugCalled: 0,"]},{"id":172,"file":"test\\gamegui.misc.test.js","start":0,"end":1343,"kind":"Module","name":"root","weight":0.5,"headline":"get return skill gu stub const js","preContext":[],"postContext":[]},{"id":173,"file":"test\\gamevictory.test.js","start":0,"end":3799,"kind":"Module","name":"root","weight":0.5,"headline":"game vc lemmings const state expect victory","preContext":[],"postContext":[]},{"id":174,"file":"test\\gamegui.behavior.test.js","start":469,"end":766,"kind":"ClassDeclaration","name":"TimerStub","weight":0.5,"headline":"class timer stub constructor running game return","preContext":[],"postContext":["constructor() {","    this.running = true;","    this.speedFactor = 1;","    this.eachGameSecond = { on() {}, off() {} };"]},{"id":175,"file":"test\\minimap.extra.test.js","start":163,"end":704,"kind":"FunctionDeclaration","name":"createDisplay","weight":0.5,"headline":"frame return draw mouse new lemmings event","preContext":[],"postContext":["function createLevel(width, height) {","  const mask = {","    width,","    height,"]},{"id":176,"file":"js\\FileContainer.js","start":503,"end":588,"kind":"MethodDefinition","name":"FileContainer.constructor","weight":1.2,"headline":"constructor content super parts read","preContext":["  get parts() {","    return this.#parts.slice();","  }","}"],"postContext":["count() {","    return this.#parts.length;","  }"]},{"id":177,"file":"js\\DrawProperties.js","start":80,"end":429,"kind":"MethodDefinition","name":"DrawProperties.constructor","weight":1.2,"headline":"constructor overwrite erase upside original game allow","preContext":["    if (noOverwrite)\r","      this.isErase = false;\r","  }\r","}"],"postContext":[]},{"id":178,"file":"js\\GameTimer.js","start":298,"end":1695,"kind":"MethodDefinition","name":"GameTimer.constructor","weight":1.2,"headline":"constructor false handler lemmings event time game","preContext":["    return t * (this.TIME_PER_FRAME_MS / 1000); ","  }","  secondsToTicks(s) { return s * (1000 / this.TIME_PER_FRAME_MS); }","}"],"postContext":["isRunning() { return this.#running; }"]},{"id":179,"file":"js\\FileProvider.js","start":189,"end":499,"kind":"MethodDefinition","name":"FileProvider.constructor","weight":1.2,"headline":"constructor promise root cache string map super","preContext":["    }","    return bytes.buffer;","  }","}"],"postContext":["clearCache() {","    this._cache.clear();","  }"]},{"id":180,"file":"js\\CommandReleaseRateIncrease.js","start":92,"end":145,"kind":"MethodDefinition","name":"CommandReleaseRateIncrease.constructor","weight":1.2,"headline":"constructor number","preContext":["  load() {}\r","  save() { return []; }\r","  getCommandKey() { return 'i'; }\r","}"],"postContext":["execute(game) {\r","    const gameVictoryCondition = game.getVictoryCondition();\r","    if (!gameVictoryCondition) return false;\r","    return gameVictoryCondition.changeReleaseRate(this.number);\r"]},{"id":181,"file":"js\\GameGui.js","start":172,"end":2725,"kind":"MethodDefinition","name":"GameGui.constructor","weight":1.2,"headline":"constructor game changed selection panel true nuke","preContext":["    default: return -1;","    }","  }","}"],"postContext":["setMiniMap(miniMap) {","    this.miniMap = miniMap;","    this.game?.lemmingManager?.setMiniMap?.(miniMap);","  }"]},{"id":182,"file":"js\\CommandNuke.js","start":77,"end":93,"kind":"MethodDefinition","name":"CommandNuke.constructor","weight":1.2,"headline":"constructor","preContext":["  load() {}\r","  save() { return []; }\r","  getCommandKey() { return 'n'; }\r","}"],"postContext":["execute(game) {\r","    const lemmingManager = game.getLemmingManager();\r","    const gameVictoryCondition = game.getVictoryCondition();\r","    if (!lemmingManager || !gameVictoryCondition) return false;\r"]},{"id":183,"file":"js\\CommandReleaseRateDecrease.js","start":92,"end":145,"kind":"MethodDefinition","name":"CommandReleaseRateDecrease.constructor","weight":1.2,"headline":"constructor number","preContext":["  load() {}\r","  save() { return []; }\r","  getCommandKey() { return 'd'; }\r","}"],"postContext":["execute(game) {\r","    const gameVictoryCondition = game.getVictoryCondition();\r","    if (!gameVictoryCondition) return false;\r","    return gameVictoryCondition.changeReleaseRate(-this.number);\r"]},{"id":184,"file":"js\\Game.js","start":121,"end":958,"kind":"MethodDefinition","name":"Game.constructor","weight":1.2,"headline":"constructor null game level resources display manager","preContext":["      this.guiDisplay.redraw();","    }","  }","}"],"postContext":["setGameDisplay (display) {","    this.display = display;","    if (this.gameDisplay) {","      this.gameDisplay.setGuiDisplay(display);"]},{"id":185,"file":"test\\xbrz-scalers.test.js","start":136,"end":244,"kind":"FunctionDeclaration","name":"color32","weight":0.5,"headline":"function color return","preContext":[],"postContext":[]},{"id":186,"file":"js\\BitWriter.js","start":714,"end":1186,"kind":"MethodDefinition","name":"BitWriter.constructor","weight":1.2,"headline":"constructor bit reader length new read throw","preContext":["  eof() {\r","    return this.#outPos <= 0;\r","  }\r","}"],"postContext":["get outData() {\r","    return this.#outData;\r","  }"]},{"id":187,"file":"js\\CommandLemmingsAction.js","start":87,"end":149,"kind":"MethodDefinition","name":"CommandLemmingsAction.constructor","weight":1.2,"headline":"constructor lemming","preContext":["  getCommandKey() {\r","    return 'l';\r","  }\r","}"],"postContext":["execute(game) {\r","    const lemmingManager = game.getLemmingManager();\r","    const gameSkills = game.getGameSkills();\r","    if (!lemmingManager || !gameSkills) return false;\r"]},{"id":188,"file":"js\\BitReader.js","start":1061,"end":2018,"kind":"MethodDefinition","name":"BitReader.constructor","weight":1.2,"headline":"constructor length reader init integer offset new","preContext":["  eof() {\r","    return this.#bufferLen === 0 && this.#pos <= 0;\r","  }\r","}"],"postContext":["getCurrentChecksum() {\r","    return this.#checksum;\r","  }"]},{"id":189,"file":"js\\ActionSplatterSystem.js","start":178,"end":318,"kind":"MethodDefinition","name":"ActionSplatterSystem.constructor","weight":1.2,"headline":"constructor sprite sprites super lemmings types single","preContext":["    if (++lem.frameIndex >= 16) return Lemmings.LemmingStateType.OUT_OF_LEVEL;\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":190,"file":"js\\BaseImageInfo.js","start":79,"end":847,"kind":"MethodDefinition","name":"BaseImageInfo.constructor","weight":1.2,"headline":"constructor loc image bits th vg mask","preContext":["    /** the color palette to be used for this image */\r","    this.palette = null;\r","  }\r","}"],"postContext":[]},{"id":191,"file":"js\\Animation.js","start":1279,"end":1777,"kind":"MethodDefinition","name":"Animation.constructor","weight":1.2,"headline":"constructor frame null loop true frames external","preContext":["    this.loadFromFile(fr, bitsPerPixel, width, height, frames,","      newPal, offsetX, offsetY);","  }","}"],"postContext":["restart (startTick = 0) {","    this.firstFrameIndex = startTick;","    this.isFinished      = false;","  }"]},{"id":192,"file":"js\\ActionShrugSystem.js","start":167,"end":288,"kind":"MethodDefinition","name":"ActionShrugSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":193,"file":"js\\ActionJumpSystem.js","start":166,"end":280,"kind":"MethodDefinition","name":"ActionJumpSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["\r","    return Lemmings.LemmingStateType.JUMPING;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":194,"file":"js\\ActionOhNoSystem.js","start":170,"end":302,"kind":"MethodDefinition","name":"ActionOhNoSystem.constructor","weight":1.2,"headline":"constructor sprite sprites super lemmings types single","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":195,"file":"js\\ActionHoistSystem.js","start":167,"end":287,"kind":"MethodDefinition","name":"ActionHoistSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":196,"file":"js\\ActionFryingSystem.js","start":168,"end":303,"kind":"MethodDefinition","name":"ActionFryingSystem.constructor","weight":1.2,"headline":"constructor sprite sprites super lemmings types single","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":197,"file":"test\\lemming.extra.test.js","start":0,"end":1015,"kind":"Module","name":"root","weight":0.5,"headline":"le expect lemming js const equal import","preContext":[],"postContext":[]},{"id":198,"file":"test\\l2ssSpriteDecoder.test.js","start":0,"end":2863,"kind":"Module","name":"root","weight":0.5,"headline":"const plane expect frame new ui nt","preContext":[],"postContext":[]},{"id":199,"file":"test\\keyboardshortcuts.zoomClear.test.js","start":556,"end":854,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":200,"file":"test\\lemmingsnamespace.test.js","start":0,"end":488,"kind":"Module","name":"root","weight":0.5,"headline":"lemmings import window ur const expect names","preContext":[],"postContext":[]},{"id":201,"file":"test\\level.arrow.test.js","start":0,"end":1571,"kind":"Module","name":"root","weight":0.5,"headline":"level js stub import mask const expect","preContext":[],"postContext":[]},{"id":202,"file":"test\\lemmingmanager.test.js","start":852,"end":1081,"kind":"ClassDeclaration","name":"DummyAction","weight":0.5,"headline":"action return le class dummy constructor get","preContext":[],"postContext":["constructor(name) { this.name = name; }"]},{"id":203,"file":"test\\level.ground.test.js","start":0,"end":1234,"kind":"Module","name":"root","weight":0.5,"headline":"level ground expect lemmings js palette import","preContext":[],"postContext":[]},{"id":204,"file":"test\\lemming.transitions.test.js","start":220,"end":489,"kind":"ClassDeclaration","name":"SeqAction","weight":0.5,"headline":"next le action return class seq constructor","preContext":[],"postContext":["constructor(name, next) { this.name = name; this.next = next; }"]},{"id":205,"file":"test\\level.render.test.js","start":0,"end":1101,"kind":"Module","name":"root","weight":0.5,"headline":"level calls lemmings js expect const ground","preContext":[],"postContext":[]},{"id":206,"file":"test\\level.misc.test.js","start":0,"end":793,"kind":"Module","name":"root","weight":0.5,"headline":"level js expect lemmings import function equal","preContext":[],"postContext":[]},{"id":207,"file":"test\\level.steel.test.js","start":0,"end":1152,"kind":"Module","name":"root","weight":0.5,"headline":"level js steel lemmings ground import expect","preContext":[],"postContext":[]},{"id":208,"file":"test\\levelindexresolve.test.js","start":0,"end":2319,"kind":"Module","name":"root","weight":0.5,"headline":"level result expect resolve const resolver function","preContext":[],"postContext":[]},{"id":209,"file":"test\\levelwriter.test.js","start":0,"end":3294,"kind":"Module","name":"root","weight":0.5,"headline":"js level lr import expect equal properties","preContext":[],"postContext":[]},{"id":210,"file":"test\\levelreader.test.js","start":0,"end":1201,"kind":"Module","name":"root","weight":0.5,"headline":"js import reader level expect const new","preContext":[],"postContext":[]},{"id":211,"file":"test\\maskprovider.test.js","start":0,"end":2477,"kind":"Module","name":"root","weight":0.5,"headline":"mask types lemmings action mp base system","preContext":[],"postContext":[]},{"id":212,"file":"test\\mapobject.test.js","start":314,"end":655,"kind":"FunctionDeclaration","name":"makeObjectImage","weight":0.5,"headline":"palette pal loop color set function make","preContext":[],"postContext":[]},{"id":213,"file":"js\\ActionBaseSystem.js","start":639,"end":2014,"kind":"MethodDefinition","name":"ActionBaseSystem.constructor","weight":1.2,"headline":"constructor cache sprite mask map action null","preContext":["    const frame = ani.getFrame(lem.frameIndex);\r","    gameDisplay.drawFrame(frame, lem.x, lem.y);\r","  }\r","}"],"postContext":["getActionName() {\r","    return this.actionName || '';\r","  }"]},{"id":214,"file":"js\\Trigger.js","start":96,"end":504,"kind":"MethodDefinition","name":"Trigger.constructor","weight":1.2,"headline":"constructor math disable ticks owner min max","preContext":["    }\r","    gameDisplay.drawRect(this.x1, this.y1, this.x2 - this.x1, this.y2 - this.y1, 255, 0, 0);\r","  }\r","}"],"postContext":["get disabledUntilTick() { return this.#disabledUntilTick; }"]},{"id":215,"file":"js\\StageImageProperties.js","start":83,"end":254,"kind":"MethodDefinition","name":"StageImageProperties.constructor","weight":1.2,"headline":"constructor view point display null new lemmings","preContext":["    this.ctx = this.cav.getContext('2d', { willReadFrequently: true , desynchronized: true, alpha: true});","    return this.ctx.createImageData(width, height);","  }","}"],"postContext":["get canvasViewportSize() {","    return { width: this.width, height: this.height };","  }"]},{"id":216,"file":"js\\Rectangle.js","start":75,"end":433,"kind":"MethodDefinition","name":"Rectangle.constructor","weight":1.2,"headline":"constructor position container","preContext":["    this.x2 = x2;\r","    this.y2 = y2;\r","  }\r","}"],"postContext":[]},{"id":217,"file":"js\\Range.js","start":71,"end":218,"kind":"MethodDefinition","name":"Range.constructor","weight":1.2,"headline":"constructor direction","preContext":["    this.height = 0;\r","    this.direction = 0; // 1 is right, 0 is left\r","  }\r","}"],"postContext":[]},{"id":218,"file":"js\\Position2D.js","start":76,"end":256,"kind":"MethodDefinition","name":"Position2D.constructor","weight":1.2,"headline":"constructor position container","preContext":["    this.x = x;\r","    this.y = y;\r","  }\r","}"],"postContext":[]},{"id":219,"file":"js\\Stage.js","start":397,"end":19040,"kind":"ClassDeclaration","name":"Stage","weight":1.5,"headline":"image stage im props scale display const","preContext":["  const b = parseInt(m[3]);","  const a = m[4] === undefined ? 1 : parseFloat(m[4]);","  return ((Math.round(a * 255) & 0xff) << 24) | (b << 16) | (g << 8) | r;","}"],"postContext":["constructor(canvasForOutput) {","    this.controller = null;","    this.fadeTimer = 0;","    this.fadeAlpha = 0;"]},{"id":220,"file":"js\\ParticleTable.js","start":518,"end":941,"kind":"MethodDefinition","name":"ParticleTable.constructor","weight":1.2,"headline":"constructor particle table palette base shared decode","preContext":["    }","    return frames;","  }","}"],"postContext":["get palette() { return this.#palette; }"]},{"id":221,"file":"js\\PaletteImage.js","start":78,"end":214,"kind":"MethodDefinition","name":"PaletteImage.constructor","weight":1.2,"headline":"constructor pix bu new ui nt","preContext":["      bitBuf <<= 1; bitLen--;\r","    }\r","  }\r","}"],"postContext":["getImageBuffer() { return this.pixBuf; }"]},{"id":222,"file":"js\\PackFilePart.js","start":1260,"end":2779,"kind":"MethodDefinition","name":"PackFilePart.pack","weight":1.2,"headline":"bits push byte const let length chunk","preContext":["","    return { byteArray, checksum, initialBits };","  }","}"],"postContext":[]},{"id":223,"file":"js\\SkillPanelSprites.js","start":83,"end":1876,"kind":"MethodDefinition","name":"SkillPanelSprites.constructor","weight":1.2,"headline":"constructor palette im sprite let frame image","preContext":["    }\r","    return patch;\r","  }\r","}"],"postContext":["getPanelSprite() {\r","    return this.panelSprite;\r","  }"]},{"id":224,"file":"js\\OddTableReader.js","start":135,"end":233,"kind":"MethodDefinition","name":"OddTableReader.constructor","weight":1.2,"headline":"constructor odd super level properties read","preContext":["    }\r","    this.log.debug('levelProperties: ' + this.levelProperties.length);\r","  }\r","}"],"postContext":["getLevelProperties(levelNumber) {\r","    if ((levelNumber >= this.levelProperties.length) || (levelNumber < 0))\r","      return null;\r","    return this.levelProperties[levelNumber];\r"]},{"id":225,"file":"js\\ObjectManager.js","start":79,"end":165,"kind":"MethodDefinition","name":"ObjectManager.constructor","weight":1.2,"headline":"constructor game timer objects","preContext":["      this.objects.push(mapObjects[i]);\r","    }\r","  }\r","}"],"postContext":["render(gameDisplay) {\r","    let objs = this.objects;\r","    let tick = this.gameTimer.getGameTicks();\r","    for (let i = 0; i < objs.length; i++) {\r"]},{"id":226,"file":"js\\ObjectImageInfo.js","start":138,"end":523,"kind":"MethodDefinition","name":"ObjectImageInfo.constructor","weight":1.2,"headline":"constructor trigger unknown effect super arguments animation","preContext":["    this.unknown = 0;","    this.trap_sound_effect_id = 0;","  }","}"],"postContext":[]},{"id":227,"file":"js\\MaskProvider.js","start":78,"end":708,"kind":"MethodDefinition","name":"MaskProvider.constructor","weight":1.2,"headline":"constructor mask list lemmings fr types new","preContext":["  GetMask(maskTypes) {\r","    return this.maskList[maskTypes];\r","  }\r","}"],"postContext":["GetMask(maskTypes) {\r","    return this.maskList[maskTypes];\r","  }"]},{"id":228,"file":"js\\Mask.js","start":281,"end":560,"kind":"MethodDefinition","name":"Mask.constructor","weight":1.2,"headline":"constructor offset fr null load","preContext":["    }\r","    this.data = pixBuf;\r","  }\r","}"],"postContext":["getMask() {\r","    return this.data;\r","  }"]},{"id":229,"file":"js\\MaskList.js","start":74,"end":259,"kind":"MethodDefinition","name":"MaskList.constructor","weight":1.2,"headline":"constructor offset fr frames null load","preContext":["      this.frames.push(mask);\r","    }\r","  }\r","}"],"postContext":["get length() {\r","    return this.frames.length;\r","  }"]},{"id":230,"file":"js\\MapObject.js","start":193,"end":1390,"kind":"MethodDefinition","name":"MapObject.constructor","weight":1.2,"headline":"constructor im frames animation ob frame trigger","preContext":["    }\r","    // 2. play sound, spawn particles \r","  }\r","}"],"postContext":["onTrigger (globalTick, lemming = null) {\r","    // 1. restart visual cue\r","    if (this.animation && !this.animation.loop) {\r","      this.animation.restart(globalTick);\r"]},{"id":231,"file":"js\\LevelProperties.js","start":81,"end":303,"kind":"MethodDefinition","name":"LevelProperties.constructor","weight":1.2,"headline":"constructor release level rate need time limit","preContext":["    this.timeLimit = 0;\r","    this.skills = new Array(Object.keys(Lemmings.SkillTypes).length);\r","  }\r","}"],"postContext":[]},{"id":232,"file":"js\\LevelIndexType.js","start":80,"end":131,"kind":"MethodDefinition","name":"LevelIndexType.constructor","weight":1.2,"headline":"constructor use odd table false","preContext":["  constructor() {\r","    this.useOddTable = false;\r","  }\r","}"],"postContext":[]},{"id":233,"file":"js\\LogHandler.js","start":69,"end":133,"kind":"MethodDefinition","name":"Logger.constructor","weight":1.2,"headline":"constructor module","preContext":["      console.dir(msg);","    }","  }","}"],"postContext":["_enabled() {","    return typeof lemmings !== 'undefined' &&","            lemmings.game && lemmings.game.showDebug === true;","  }"]},{"id":234,"file":"js\\LevelConfig.js","start":77,"end":609,"kind":"MethodDefinition","name":"LevelConfig.constructor","weight":1.2,"headline":"constructor odd table use prefix used level","preContext":["    }\r","    return this.order[groupIndex].length;\r","  }\r","}"],"postContext":["getGroupLength(groupIndex) {\r","    if ((groupIndex < 0) || (groupIndex >= this.order.length)) {\r","      return 0;\r","    }\r"]},{"id":235,"file":"js\\LevelIndexResolve.js","start":83,"end":136,"kind":"MethodDefinition","name":"LevelIndexResolve.constructor","weight":1.2,"headline":"constructor conf","preContext":["    liType.levelNumber = levelNo + levelIndex;\r","    return liType;\r","  }\r","}"],"postContext":["resolve(levelMode, levelIndex) {\r","    let levelOrderList = this.config.level.order;\r","    if (levelOrderList.length <= levelMode)\r","      return null;\r"]},{"id":236,"file":"js\\LevelElement.js","start":78,"end":176,"kind":"MethodDefinition","name":"LevelElement.constructor","weight":1.2,"headline":"constructor frame","preContext":["    this.id = 0;\r","    this.frameIndex = 0;\r","  }\r","}"],"postContext":[]},{"id":237,"file":"js\\LevelWriter.js","start":325,"end":3900,"kind":"MethodDefinition","name":"LevelWriter.write","weight":1.2,"headline":"pos set ui nt const level skills","preContext":["\r","    return out;\r","  }\r","}"],"postContext":[]},{"id":238,"file":"test\\trigger.test.js","start":0,"end":1162,"kind":"Module","name":"root","weight":0.5,"headline":"trigger expect trig types js res equal","preContext":[],"postContext":[]},{"id":239,"file":"test\\triggermanager.test.js","start":0,"end":2099,"kind":"Module","name":"root","weight":0.5,"headline":"trigger tm frame expect js types const","preContext":[],"postContext":[]},{"id":240,"file":"test\\terrainimageinfo.test.js","start":387,"end":950,"kind":"FunctionDeclaration","name":"computeSteelSize","weight":0.5,"headline":"info let widest tallest pixel const frame","preContext":[],"postContext":[]},{"id":241,"file":"test\\unpackfilepart.test.js","start":308,"end":470,"kind":"ClassDeclaration","name":"MockLogHandler","weight":0.5,"headline":"msg log logged debugged push class mock","preContext":[],"postContext":["constructor() { this.logged = []; this.debugged = []; }"]},{"id":242,"file":"test\\workflow.test.js","start":0,"end":938,"kind":"Module","name":"root","weight":0.5,"headline":"steps run step const expect np setup","preContext":[],"postContext":[]},{"id":243,"file":"test\\userinput.dispose.test.js","start":263,"end":630,"kind":"FunctionDeclaration","name":"createStubElement","weight":0.5,"headline":"calls handler add remove return event listener","preContext":[],"postContext":[]},{"id":244,"file":"test\\userinput.events.test.js","start":211,"end":466,"kind":"ClassDeclaration","name":"StubElement","weight":0.5,"headline":"class stub element extends event target constructor","preContext":[],"postContext":["constructor(width = 100, height = 100) {","    super();","    this.width = width;","    this.height = height;"]},{"id":245,"file":"test\\userinput.test.js","start":560,"end":858,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":246,"file":"js\\CommandManager.js","start":78,"end":2988,"kind":"ClassDeclaration","name":"CommandManager","weight":1.5,"headline":"game command tick timer return new null","preContext":[],"postContext":["constructor(game, gameTimer) {","    super();","    if (game == null || gameTimer == null) {","      this.log.log('error! game/timer is null');"]},{"id":247,"file":"test\\xbrz-scaler4x.test.js","start":202,"end":310,"kind":"FunctionDeclaration","name":"color32","weight":0.5,"headline":"function color return","preContext":[],"postContext":["function makeOut(buf) {","  return {","    ref(i, j) {","      const idx = i * 4 + j;"]},{"id":248,"file":"test\\xbrz-scaler2x.test.js","start":202,"end":310,"kind":"FunctionDeclaration","name":"color32","weight":0.5,"headline":"function color return","preContext":[],"postContext":["function makeOut(buf) {","  return {","    ref(i, j) {","      const idx = i * 2 + j;"]},{"id":249,"file":"js\\ColorPalette.js","start":52,"end":936,"kind":"ClassDeclaration","name":"ColorPalette","weight":1.5,"headline":"color set int palette class constructor return","preContext":[],"postContext":["constructor() {","    this.data = new Uint32Array(16); //- 16 colors","    this.data.fill(0);","  }"]},{"id":250,"file":"js\\GameResult.js","start":76,"end":406,"kind":"MethodDefinition","name":"GameResult.constructor","weight":1.2,"headline":"constructor game get state survivor percentage victory","preContext":["    this.survivors = game.getVictoryCondition().getSurvivorsCount();\r","    this.duration = game.getGameTimer().getGameTicks();\r","  }\r","}"],"postContext":[]},{"id":251,"file":"js\\GameFactory.js","start":74,"end":333,"kind":"MethodDefinition","name":"GameFactory.constructor","weight":1.2,"headline":"constructor conf root reader provider new lemmings","preContext":["    await game.loadLevel(groupIndex, levelIndex);","    return game;","  }","}"],"postContext":["getGame(gameType, gameResources = null) {","    return new Promise((resolve, reject) => {","      if (gameResources) {","        resolve(new Lemmings.Game(gameResources));"]},{"id":252,"file":"js\\EventHandler.js","start":78,"end":131,"kind":"MethodDefinition","name":"EventHandler.constructor","weight":1.2,"headline":"constructor handlers new set","preContext":["      handler(arg);\r","    }\r","  }\r","}"],"postContext":["on (handler) {\r","    if (typeof handler === 'function' && !this.handlers.has(handler)) {\r","      this.handlers.add(handler);\r","    }\r"]},{"id":253,"file":"test\\gameview.dispose.test.js","start":432,"end":545,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose called","preContext":["    addEventListener(type, handler) { this.addCalls.push([type, handler]); },","    removeEventListener(type, handler) { this.removeCalls.push([type, handler]); }","  };","}"],"postContext":["constructor() { this.disposeCalled = 0; }"]},{"id":254,"file":"test\\gameview.canvas-reset.test.js","start":432,"end":493,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":["    addEventListener(type, handler) { this.addCalls.push([type, handler]); },","    removeEventListener(type, handler) { this.removeCalls.push([type, handler]); }","  };","}"],"postContext":["constructor() {}"]},{"id":255,"file":"test\\gameview.applyquery.test.js","start":163,"end":179,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":256,"file":"js\\xbrz\\xbrz.js","start":269,"end":340,"kind":"MethodDefinition","name":"IntPtr.constructor","weight":1.2,"headline":"constructor int arr pt","preContext":["  set (val) {","    this.arr[this.ptr] = val;","  }","}"],"postContext":["position (pos) {","    this.ptr = pos;","  }"]},{"id":257,"file":"test\\gamegui.test.js","start":381,"end":785,"kind":"MethodDefinition","name":"DisplayImageStub.constructor","weight":0.5,"headline":"constructor new lemmings event handler mouse move","preContext":["  setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }","  redraw() { this.redrawCalled = true; }","  setScreenPosition(x, y) { this.pos = [x, y]; }","}"],"postContext":["initSize(w, h) { this.initArgs = [w, h]; }"]},{"id":258,"file":"js\\LevelReader.js","start":152,"end":747,"kind":"MethodDefinition","name":"LevelReader.constructor","weight":1.2,"headline":"constructor level fr read super properties graphic","preContext":["    this.levelProperties.levelName = fr.readString(32, 0x07E0);\r","    this.log.debug('Level Name: ' + this.levelProperties.levelName);\r","  }\r","}"],"postContext":["readLevelInfo(fr) {\r","    fr.setOffset(0);\r","    this.levelProperties.releaseRate = fr.readWord();\r","    this.levelProperties.releaseCount = fr.readWord();\r"]},{"id":259,"file":"js\\LemmingsSprite.js","start":633,"end":3340,"kind":"MethodDefinition","name":"LemmingsSprite.constructor","weight":1.2,"headline":"constructor lemmings types sprite palette cache color","preContext":["\r","  /** @returns {Lemmings.Animation[]} The flat animation table (read-only) */\r","  get lemmingAnimation() { return this.#lemmingAnimation.slice(); }\r","}"],"postContext":["getAnimation(state, right) {\r","    return this.#lemmingAnimation[this.#typeToIndex(state, right)];\r","  }"]},{"id":260,"file":"test\\colorpalette.test.js","start":0,"end":804,"kind":"Module","name":"root","weight":0.5,"headline":"color expect palette pal equal js get","preContext":[],"postContext":[]},{"id":261,"file":"test\\commandmanager.test.js","start":0,"end":2553,"kind":"Module","name":"root","weight":0.5,"headline":"command timer game new const expect manager","preContext":[],"postContext":[]},{"id":262,"file":"js\\ActionMineSystem.js","start":166,"end":421,"kind":"MethodDefinition","name":"ActionMineSystem.constructor","weight":1.2,"headline":"constructor types lemmings mask sprites masks sprite","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["process(level, lem) {\r","    lem.frameIndex = (lem.frameIndex + 1) % 24;\r","    switch (lem.frameIndex) {\r","    case 1:\r"]},{"id":263,"file":"js\\L2ssSpriteDecoder.js","start":106,"end":247,"kind":"FunctionDeclaration","name":"readU32BE","weight":2,"headline":"bu function read return","preContext":["function readU16BE(buf, off) {","  return (buf[off] << 8) | buf[off + 1];","}"],"postContext":["function decodeFrame(data, base, index, palette) {","  let off = base;","  const width = readU16BE(data, off);","  off += 2;"]},{"id":264,"file":"js\\GameVictoryCondition.js","start":83,"end":397,"kind":"MethodDefinition","name":"GameVictoryCondition.constructor","weight":1.2,"headline":"constructor release level rate need finalize false","preContext":["    }","    this.isFinalize = true;","  }","}"],"postContext":["getNeedCount() {","    return this.needCount;","  }"]},{"id":265,"file":"js\\Lemming.js","start":124,"end":480,"kind":"MethodDefinition","name":"Lemming.constructor","weight":1.2,"headline":"constructor false super look true frame climb","preContext":["","  isDisabled() { return this.disabled; }","  isRemoved() { return (this.action == null); }","}"],"postContext":["getDirection() {","    return this.lookRight ? 'right' : 'left';","  }"]},{"id":266,"file":"js\\GameView.js","start":219,"end":1665,"kind":"MethodDefinition","name":"GameView.constructor","weight":1.2,"headline":"constructor null bench game level false lemmings","preContext":["      this.stage = null;","    }","  }","}"],"postContext":["set gameCanvas(el) {","    if (this.stage && this.stage.dispose) {","      window.removeEventListener('resize', this._stageResize);","      window.removeEventListener('orientationchange', this._stageResize);"]},{"id":267,"file":"js\\GroundRenderer.js","start":80,"end":97,"kind":"MethodDefinition","name":"GroundRenderer.constructor","weight":1.2,"headline":"constructor","preContext":["      }\r","    }\r","  }\r","}"],"postContext":["createVgaspecMap (levelReader, vgaRenderer) {\r","    this.img = vgaRenderer.img;\r","  }"]},{"id":268,"file":"test\\displayimage.primitives.test.js","start":106,"end":140,"kind":"MethodDefinition","name":"StubStage.constructor","weight":0.5,"headline":"constructor calls","preContext":["  }","  setGameViewPointPosition() {}","  redraw() {}","}"],"postContext":["createImage(owner, width, height) {","    this.calls.push({ width, height });","    return { width, height, data: new Uint8ClampedArray(width * height * 4) };","  }"]},{"id":269,"file":"test\\bitwriter.test.js","start":304,"end":363,"kind":"MethodDefinition","name":"StubReader.constructor","weight":0.5,"headline":"constructor values slice","preContext":["  read(bits) {","    return this.values.shift();","  }","}"],"postContext":["read(bits) {","    return this.values.shift();","  }"]},{"id":270,"file":"test\\bench-tps.test.js","start":315,"end":762,"kind":"MethodDefinition","name":"DisplayImageStub.constructor","weight":0.5,"headline":"constructor new lemmings event handler mouse stage","preContext":["  setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }","  redraw() { this.redrawCalled = true; }","  setScreenPosition(x, y) { this.pos = [x, y]; }","}"],"postContext":["initSize(w, h) { this.initArgs = [w, h]; }"]},{"id":271,"file":"test\\bench-start.test.js","start":344,"end":495,"kind":"MethodDefinition","name":"LevelStub.constructor","weight":0.5,"headline":"constructor objects entrances triggers","preContext":["  }","  getGroundMaskLayer() { return { hasGroundAt() { return false; } }; }","  render() {}","}"],"postContext":["getGroundMaskLayer() { return { hasGroundAt() { return false; } }; }"]},{"id":272,"file":"test\\bench-sequence.test.js","start":244,"end":260,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":273,"file":"test\\bench-entrance-placement.test.js","start":405,"end":435,"kind":"MethodDefinition","name":"GameFactoryStub.getGame","weight":0.5,"headline":"async get game return","preContext":["class GameFactoryStub { async getGame() { return {}; } async getGameResources() { return {}; } get configReader() { return { configs: Promise.resolve([]) }; } }"],"postContext":["async getGameResources() { return {}; }"]},{"id":274,"file":"test\\action-systems.test.js","start":1841,"end":2085,"kind":"MethodDefinition","name":"StubLemming.constructor","weight":0.5,"headline":"constructor false look true frame state climb","preContext":["  disable() { this.disabled = true; }","  setCountDown(act) { this.countdownAction = act; if (this.countdown > 0) return false; this.countdown = 80; return true; }","  getCountDownTime() { return 8 - (this.countdown >> 4); }","}"],"postContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"]},{"id":275,"file":"test\\action-systems-extra.test.js","start":510,"end":544,"kind":"MethodDefinition","name":"StubDisplay.constructor","weight":0.5,"headline":"constructor calls","preContext":["class StubDisplay {","  constructor() { this.calls = []; }","  drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }","}"],"postContext":["drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }"]},{"id":276,"file":"test\\action-mine-system.test.js","start":234,"end":320,"kind":"MethodDefinition","name":"DummyMask.constructor","weight":0.5,"headline":"constructor offset","preContext":["class DummyMask {","  constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; }","  at() { return false; }","}"],"postContext":["at() { return false; }"]},{"id":277,"file":"test\\action-drown-explode.test.js","start":390,"end":552,"kind":"MethodDefinition","name":"StubLemming.constructor","weight":0.5,"headline":"constructor look true frame state disabled false","preContext":["  }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","  disable() { this.disabled = true; }","}"],"postContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"]},{"id":278,"file":"test\\action-base-system.test.js","start":330,"end":372,"kind":"MethodDefinition","name":"StubAnimation.constructor","weight":0.5,"headline":"constructor label","preContext":["class StubAnimation {","  constructor(label) { this.label = label; }","  getFrame(idx) { return `${this.label}-${idx}`; }","}"],"postContext":["getFrame(idx) { return `${this.label}-${idx}`; }"]},{"id":279,"file":"js\\xbrz\\scalers\\Blender.js","start":288,"end":864,"kind":"FunctionDeclaration","name":"alphaBlend","weight":2,"headline":"component ds blend red mask const pt","preContext":["  const setChan = setPixel & mask;","  const blend = setChan * n + inChan * (m - n);","  return mask & (blend / m);","}"],"postContext":[]},{"id":280,"file":"js\\ActionFloatingSystem.js","start":315,"end":434,"kind":"MethodDefinition","name":"ActionFloatingSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["    lem.y += speed;\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    if (lem.hasParachute) {\r","      return false;\r","    }\r"]},{"id":281,"file":"js\\BinaryReader.js","start":1108,"end":4081,"kind":"MethodDefinition","name":"BinaryReader.constructor","weight":1.2,"headline":"constructor length offset log reader ui nt","preContext":["  readAll() {","    return this.readString(this.#length, 0);","  }","}"],"postContext":["get data() {","    return this.#data;","  }"]},{"id":282,"file":"js\\ActionFallSystem.js","start":162,"end":277,"kind":"MethodDefinition","name":"ActionFallSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["      return Lemmings.LemmingStateType.WALKING;","    }","  }","}"],"postContext":["draw(gameDisplay, lem) {","    super.draw(gameDisplay, lem);","  }"]},{"id":283,"file":"js\\ActionExitingSystem.js","start":169,"end":383,"kind":"MethodDefinition","name":"ActionExitingSystem.constructor","weight":1.2,"headline":"constructor game victory condition sprite sprites super","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":284,"file":"js\\ActionDrowningSystem.js","start":170,"end":309,"kind":"MethodDefinition","name":"ActionDrowningSystem.constructor","weight":1.2,"headline":"constructor sprite sprites super lemmings types single","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return false;\r","  }"]},{"id":285,"file":"js\\ActionDiggSystem.js","start":174,"end":291,"kind":"MethodDefinition","name":"ActionDiggSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["    }\r","    return (removeCount > 0);\r","  }\r","}"],"postContext":["process(level, lem) {\r","    if (level.isSteelGround(lem.x, lem.y) || \r","                level.isSteelGround(lem.x, lem.y - 1) || \r","                level.isSteelGround(lem.x, lem.y - 2)) {\r"]},{"id":286,"file":"js\\ActionCountdownSystem.js","start":206,"end":435,"kind":"MethodDefinition","name":"ActionCountdownSystem.constructor","weight":1.2,"headline":"constructor masks action countdown system number mask","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    return lem.setCountDown(this);\r","  }"]},{"id":287,"file":"js\\ActionClimbSystem.js","start":173,"end":292,"kind":"MethodDefinition","name":"ActionClimbSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["      return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","    }\r","  }\r","}"],"postContext":["triggerLemAction(lem) {\r","    if (lem.canClimb) {\r","      return false;\r","    }\r"]},{"id":288,"file":"js\\ActionBuildSystem.js","start":167,"end":286,"kind":"MethodDefinition","name":"ActionBuildSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }\r","}"],"postContext":["process(level, lem) {\r","    lem.frameIndex = (lem.frameIndex + 1) % 16;\r","    if (lem.frameIndex == 9) {\r","      /// lay brick\r"]},{"id":289,"file":"js\\ActionBlockerSystem.js","start":166,"end":361,"kind":"MethodDefinition","name":"ActionBlockerSystem.constructor","weight":1.2,"headline":"constructor trigger manager sprite sprites super lemmings","preContext":["    }","    return Lemmings.LemmingStateType.NO_STATE_TYPE;","  }","}"],"postContext":["process(level, lem) {","    if (lem.state == 0) {","      const trigger1 = new Lemmings.Trigger(Lemmings.TriggerTypes.BLOCKER_LEFT, lem.x - 6, lem.y + 4, lem.x - 3, lem.y - 10, 0, 0, lem);","      const trigger2 = new Lemmings.Trigger(Lemmings.TriggerTypes.BLOCKER_RIGHT, lem.x + 7, lem.y + 4, lem.x + 4, lem.y - 10, 0, 0, lem);"]},{"id":290,"file":"test\\gamedisplay.extra.test.js","start":495,"end":1097,"kind":"FunctionDeclaration","name":"createManagers","weight":0.5,"headline":"render called debug const return le lm","preContext":["    drawCornerRect(...args) { this.drawCornerRectCalls.push(args); },","    drawDashedRect(...args) { this.drawDashedRectCalls.push(args); }","  };","}"],"postContext":[]},{"id":291,"file":"test\\filecontainer-errors.test.js","start":233,"end":268,"kind":"MethodDefinition","name":"MockLogHandler.constructor","weight":0.5,"headline":"constructor logged","preContext":["  constructor() { this.logged = []; }","  log(msg) { this.logged.push(msg); }","  debug() {}","}"],"postContext":["log(msg) { this.logged.push(msg); }"]},{"id":292,"file":"test\\filecontainer.test.js","start":845,"end":1037,"kind":"FunctionDeclaration","name":"computeChecksum","weight":0.5,"headline":"part cs source const offset function compute","preContext":["  buffer.set(header, 0);\r","  buffer.set(compressed, 10);\r","  return { buffer, checksum, compressed };\r","}"],"postContext":["function runTest(bad) {\r","  const { buffer, checksum, compressed } = buildBuffer(bad);\r","  const br = new Lemmings.BinaryReader(buffer, 0, buffer.length, 'buf');\r","  const fc = new FileContainer(br);\r"]},{"id":293,"file":"test\\exportPanelSprite.defaultPack.test.js","start":960,"end":1600,"kind":"FunctionDeclaration","name":"runScript","weight":0.5,"headline":"arg process wd script options const orig","preContext":["  class LemmingsSprite {}","  class GameResources { async getSkillPanelSprite(){ return new SkillPanelSprites(); } }","  Object.assign(Lemmings, { Frame, ColorPalette, SkillPanelSprites, LemmingsSprite, GameResources });","}"],"postContext":[]},{"id":294,"file":"test\\processHtmlFile.test.js","start":0,"end":1065,"kind":"Module","name":"root","weight":0.5,"headline":"const ht ml assert inline process snippets","preContext":[],"postContext":[]},{"id":295,"file":"test\\patchSprites.test.js","start":615,"end":1255,"kind":"FunctionDeclaration","name":"runScript","weight":0.5,"headline":"arg process wd script options const orig","preContext":[],"postContext":[]},{"id":296,"file":"test\\packLevels.test.js","start":666,"end":1318,"kind":"FunctionDeclaration","name":"runScript","weight":0.5,"headline":"arg process wd script options const orig","preContext":[],"postContext":[]},{"id":297,"file":"test\\exportLemmingsSprites.test.js","start":1251,"end":2005,"kind":"FunctionDeclaration","name":"patchScript","weight":0.5,"headline":"js const export lemmings stub script sprites","preContext":["    GameResources,","    SpriteTypes: { WALK: 0, DIG: 1 }","  });","}"],"postContext":["async function runScript(script, args, options = {}) {","  const origArgv = process.argv;","  const origCwd = process.cwd();","  let error;"]},{"id":298,"file":"test\\fileprovider.test.js","start":165,"end":349,"kind":"ClassDeclaration","name":"MockLogHandler","weight":0.5,"headline":"msg log logged debugged push class mock","preContext":["class MockBinaryReader {}"],"postContext":["constructor() {","    this.logged = [];","    this.debugged = [];","  }"]},{"id":299,"file":"test\\stage.utils.test.js","start":626,"end":1067,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":300,"file":"test\\stage.utilities.test.js","start":673,"end":1114,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":301,"file":"test\\stage.setGameViewPointPosition.test.js","start":626,"end":1067,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":302,"file":"test\\skillpanelsprites.test.js","start":365,"end":407,"kind":"MethodDefinition","name":"FakeAnimation.constructor","weight":0.5,"headline":"constructor label","preContext":["class FakeAnimation {","  constructor(label) { this.label = label; }","  getFrame() { return this.label; }","}"],"postContext":["getFrame() { return this.label; }"]},{"id":303,"file":"test\\skillpanelsprites.helpers.test.js","start":383,"end":397,"kind":"MethodDefinition","name":"FakeReader.setOffset","weight":0.5,"headline":"set offset","preContext":["class FakeReader {","  setOffset() {}","  readByte() { return 0; }","}"],"postContext":["readByte() { return 0; }"]},{"id":304,"file":"test\\overlay-ants.test.js","start":730,"end":1227,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return image create ct canvas new ui","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":305,"file":"test\\mask.test.js","start":247,"end":313,"kind":"MethodDefinition","name":"StubReader.constructor","weight":0.5,"headline":"constructor bytes","preContext":["  readByte() {","    return this.bytes[this.idx++] || 0;","  }","}"],"postContext":["readByte() {","    return this.bytes[this.idx++] || 0;","  }"]},{"id":306,"file":"test\\loghandler.test.js","start":208,"end":295,"kind":"MethodDefinition","name":"RecordingHandler.constructor","weight":0.5,"headline":"constructor recording handler messages push","preContext":["  }","  log() {}","  debug() {}","}"],"postContext":["log() {}"]},{"id":307,"file":"js\\ViewPoint.js","start":72,"end":158,"kind":"MethodDefinition","name":"ViewPoint.constructor","weight":1.2,"headline":"constructor scale","preContext":["  getSceneY(y) {","    return Math.trunc(y / this.scale) + Math.trunc(this.y);","  }","}"],"postContext":["setX(value, bounds) {","    if (bounds) {","      const [min, max] = bounds;","      this.x = Math.min(Math.max(value, min), max);"]},{"id":308,"file":"js\\VGASpecReader.js","start":620,"end":919,"kind":"MethodDefinition","name":"VGASpecReader.constructor","weight":1.2,"headline":"constructor vg asp ec log palette new","preContext":["      this.#log.log(`readPalettes(): unexpected end of file!: ${fr.filename}`);\r","    }\r","  }\r","}"],"postContext":["get width() { return this.#width; }"]},{"id":309,"file":"js\\vendor\\hqx\\index.js","start":345,"end":482,"kind":"ExportedFunction","name":"initHqx","weight":1.2,"headline":"init initialized bytes base function hq const","preContext":["  const bytes = new Uint8Array(len);","  for (let i = 0; i < len; i++) bytes[i] = binary.charCodeAt(i);","  return bytes;","}"],"postContext":["function hqxScale(buffer32, width, height, factor) {","  initHqx();","  return resize(buffer32, width, height, factor);","}"]},{"id":310,"file":"test\\frame.test.js","start":0,"end":2298,"kind":"Module","name":"root","weight":0.5,"headline":"color frame palette expect const eq pixel","preContext":[],"postContext":[]},{"id":311,"file":"js\\UserInputManager.js","start":115,"end":331,"kind":"MethodDefinition","name":"MouseMoveEventArguements.constructor","weight":1.2,"headline":"constructor delta button mouse false super","preContext":["    this.deltaY = deltaY;","    this.button = button;","  }","}"],"postContext":["class ZoomEventArgs extends Lemmings.Position2D {","  constructor(x = 0, y = 0, deltaZoom = 0) {","    super(x, y);","    this.mouseDownX = 0;"]},{"id":312,"file":"test\\groundrenderer.test.js","start":289,"end":458,"kind":"ClassDeclaration","name":"SimpleImageData","weight":0.5,"headline":"class simple image constructor new ui nt","preContext":[],"postContext":["constructor(width, height) {","    this.width = width;","    this.height = height;","    this.data = new Uint8ClampedArray(width * height * 4);"]},{"id":313,"file":"js\\UnpackFilePart.js","start":1154,"end":1234,"kind":"MethodDefinition","name":"UnpackFilePart.constructor","weight":1.2,"headline":"constructor reader super","preContext":["        return outBuffer.getFileReader(`${fileReader.filename}[${this.#index}]`);\r","      }).call(this);\r","  }\r","}"],"postContext":["get offset() { return this.#offset; }"]},{"id":314,"file":"js\\TriggerManager.js","start":878,"end":1787,"kind":"MethodDefinition","name":"TriggerManager.constructor","weight":1.2,"headline":"constructor level cell size shift slots new","preContext":["    this._triggers = null;\r","    this._debugFrame = null;\r","  }\r","}"],"postContext":["add (trigger) {\r","    if (this._triggers.has(trigger)) return;\r","    this._triggers.add(trigger);\r","    this.#insert(trigger);\r"]},{"id":315,"file":"js\\vendor\\hqx\\squooshhqx.js","start":278,"end":455,"kind":"FunctionDeclaration","name":"passArray32ToWasm0","weight":2,"headline":"arg pt mall oc length function pass","preContext":["    cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);","  }","  return cachedUint32Memory0;","}"],"postContext":["function getInt32Memory0() {","  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {","    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);","  }"]},{"id":316,"file":"test\\displayimage.test.js","start":146,"end":233,"kind":"MethodDefinition","name":"StubStage.createImage","weight":0.5,"headline":"create image return new ui nt clamped","preContext":["  }","  setGameViewPointPosition() {}","  redraw() {}","}"],"postContext":["setGameViewPointPosition() {}"]},{"id":317,"file":"test\\keyboardshortcuts.loop.test.js","start":313,"end":710,"kind":"MethodDefinition","name":"StageStub.constructor","weight":0.5,"headline":"constructor get return scale raw redraw update","preContext":["  clear(img) { this.clears.push(img); }","  snapScale(s) { return s; }","  limitValue(min, val, max) { return Math.min(Math.max(val, min), max); }","}"],"postContext":["applyViewport(img, x, y, s) {","    this.updateCalls.push({ x, y, s });","    this.gameImgProps.viewPoint.x = x;","    this.gameImgProps.viewPoint.y = y;"]},{"id":318,"file":"test\\gameview.sound.test.js","start":80,"end":96,"kind":"MethodDefinition","name":"GameFactoryStub.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryStub { constructor() {} }"],"postContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"]},{"id":319,"file":"test\\gameview.setup.test.js","start":290,"end":470,"kind":"FunctionDeclaration","name":"createSelect","weight":0.5,"headline":"options el function create select return selected","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":320,"file":"test\\gameview.onGameEnd.test.js","start":230,"end":246,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":321,"file":"test\\gameview.loadReplay.test.js","start":195,"end":211,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":322,"file":"test\\gameview.loadlevel.test.js","start":256,"end":272,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsStub { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":323,"file":"test\\gameview.loadlevel-missing.test.js","start":211,"end":227,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsStub {","  constructor() {}","  dispose() {}","}"],"postContext":["dispose() {}"]},{"id":324,"file":"test\\gameview.menu-selects.test.js","start":284,"end":449,"kind":"FunctionDeclaration","name":"createDocument","weight":0.5,"headline":"create return event listener function document element","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":["function createSelect() {","  return {","    options: [],","    selectedIndex: 0,"]},{"id":325,"file":"test\\gameview.helperExtras.test.js","start":158,"end":174,"kind":"MethodDefinition","name":"GameFactoryStub.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryStub {","  constructor() {}","}"],"postContext":["function setupEnv() {","  global.window = { location: { search: '' }, setTimeout, clearTimeout, addEventListener() {}, removeEventListener() {} };","  global.history = { replaceState() {} };","  Lemmings.GameFactory = GameFactoryStub;"]},{"id":326,"file":"test\\gameview.enableDebug.test.js","start":149,"end":165,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsStub { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":327,"file":"test\\gameview.helpers.test.js","start":157,"end":173,"kind":"MethodDefinition","name":"GameFactoryStub.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryStub {","  constructor() {}","}"],"postContext":["function createWindow() {","  return {","    location: { search: '' },","    setTimeout,"]},{"id":328,"file":"js\\MaskList.js","start":263,"end":314,"kind":"MethodDefinition","name":"MaskList.length","weight":1.2,"headline":"length get return frames","preContext":["    if (fr != null) {\r","      this.loadFromFile(fr, width, height, count, offsetX, offsetY);\r","    }\r","  }"],"postContext":["GetMask(index) {\r","    return this.frames[index];\r","  }"]},{"id":329,"file":"js\\Mask.js","start":564,"end":603,"kind":"MethodDefinition","name":"Mask.getMask","weight":1.2,"headline":"get mask return","preContext":["    if (fr != null) {\r","      this.loadFromFile(fr, width, height);\r","    }\r","  }"],"postContext":["at(x, y) {\r","    if (!this.data || x < 0 || x >= this.width || y < 0 || y >= this.height) return false;\r","    return this.data[y * this.width + x] === 0;\r","  }"]},{"id":330,"file":"js\\MaskProvider.js","start":712,"end":775,"kind":"MethodDefinition","name":"MaskProvider.GetMask","weight":1.2,"headline":"mask types get return list","preContext":["    this.maskList[Lemmings.MaskTypes.MINING_L] = new Lemmings.MaskList(fr, 16, 13, 2, -8, -12);\r","    this.maskList[Lemmings.MaskTypes.EXPLODING] = new Lemmings.MaskList(fr, 16, 22, 1, -8, -14);\r","    this.maskList[Lemmings.MaskTypes.NUMBERS] = new Lemmings.MaskList(fr, 8, 8, 10, -1, -19);\r","  }"],"postContext":[]},{"id":331,"file":"js\\ObjectManager.js","start":217,"end":499,"kind":"MethodDefinition","name":"ObjectManager.render","weight":1.2,"headline":"obj game let display tick get draw","preContext":["constructor(gameTimer) {\r","    this.gameTimer = gameTimer;\r","    this.objects = [];\r","  }"],"postContext":["addRange(mapObjects) {\r","    for (let i = 0; i < mapObjects.length; i++) {\r","      this.objects.push(mapObjects[i]);\r","    }\r"]},{"id":332,"file":"js\\Stage.js","start":413,"end":1558,"kind":"MethodDefinition","name":"Stage.constructor","weight":1.2,"headline":"constructor overlay handle mouse canvas stage im","preContext":["  limitValue(minLimit, value, maxLimit) {","    return Math.min(Math.max(minLimit, value), maxLimit);","  }","}"],"postContext":["setCursorSprite(frame) {","    if (!frame) {","      this.cursorCanvas = null;","      return;"]},{"id":333,"file":"js\\OddTableReader.js","start":437,"end":618,"kind":"MethodDefinition","name":"OddTableReader.getLevelProperties","weight":1.2,"headline":"level number properties return get length null","preContext":["    super();\r","    this.levelProperties = [];\r","    this.read(oddfile);\r","  }"],"postContext":["read(fr) {\r","    fr.setOffset(0);\r","    /// count of levels definitions\r","    let count = Math.trunc(fr.length / 56);\r"]},{"id":334,"file":"js\\SkillPanelSprites.js","start":1928,"end":1981,"kind":"MethodDefinition","name":"SkillPanelSprites.getPanelSprite","weight":1.2,"headline":"panel sprite get return","preContext":["    /// add space\r","    this.emptyNumberSprite = new Lemmings.Frame(9, 8);\r","    this.emptyNumberSprite.fill(255, 255, 255);\r","  }"],"postContext":["getLetterSprite(letter) {\r","    return this.letterSprite[letter.toUpperCase()];\r","  }"]},{"id":335,"file":"js\\PaletteImage.js","start":220,"end":260,"kind":"MethodDefinition","name":"PaletteImage.getImageBuffer","weight":1.2,"headline":"get image return pix bu","preContext":["    this.width = width;\r","    this.height = height;\r","    this.pixBuf = new Uint8Array(width * height);\r","  }"],"postContext":["createFrame(palette, offsetX = 0, offsetY = 0) {\r","    const frame = new Lemmings.Frame(this.width, this.height, offsetX, offsetY);\r","    if (palette) frame.drawPaletteImage(this.pixBuf, this.width, this.height, palette, 0, 0);\r","    return frame;\r"]},{"id":336,"file":"js\\ParticleTable.js","start":988,"end":1027,"kind":"MethodDefinition","name":"ParticleTable.palette","weight":1.2,"headline":"palette get return","preContext":["      ParticleTable._sharedParticleData = ParticleTable.#decodeBase64Frames(ParticleTable.particleDataBase64);","    }","    this.#particleData = ParticleTable._sharedParticleData;","  }"],"postContext":["get colorIndexTable() { return this.#colorIndexTable.slice(); }"]},{"id":337,"file":"js\\StageImageProperties.js","start":321,"end":406,"kind":"MethodDefinition","name":"StageImageProperties.canvasViewportSize","weight":1.2,"headline":"get canvas viewport size return","preContext":["    this.height = 0;","    this.display = null;","    this.viewPoint = new Lemmings.ViewPoint(0, 0, 2);","  }"],"postContext":["set canvasViewportSize({ width, height }) {","    this.width = width;","    this.height = height;","  }"]},{"id":338,"file":"js\\Trigger.js","start":510,"end":569,"kind":"MethodDefinition","name":"Trigger.disabledUntilTick","weight":1.2,"headline":"disabled tick get return","preContext":["    this.x2 = Math.max(x1, x2);\r","    this.y2 = Math.max(y1, y2);\r","    this.disableTicksCount = disableTicksCount;\r","  }"],"postContext":["set disabledUntilTick(v) {\r","    if (v >= Lemmings.COUNTER_LIMIT) {\r","      console.warn('disabledUntilTick wrapped, resetting to 0');\r","      this.#disabledUntilTick = 0;\r"]},{"id":339,"file":"js\\ActionBaseSystem.js","start":2091,"end":2148,"kind":"MethodDefinition","name":"ActionBaseSystem.getActionName","weight":1.2,"headline":"action get return","preContext":["      }\r","      this.masks = ActionBaseSystem.maskCache.get(cacheKey);\r","    }\r","  }"],"postContext":["triggerLemAction(lem) {\r","    lem.setAction(this);\r","    return true;\r","  }"]},{"id":340,"file":"test\\lemming.transitions.test.js","start":240,"end":303,"kind":"MethodDefinition","name":"SeqAction.constructor","weight":0.5,"headline":"constructor next","preContext":["  getActionName() { return this.name; }","  triggerLemAction() { return true; }","  process(level, lem) { lem.frameIndex++; if (this.name === 'explode') lem.disable(); return this.next; }","}"],"postContext":["getActionName() { return this.name; }"]},{"id":341,"file":"test\\lemmingmanager.test.js","start":874,"end":913,"kind":"MethodDefinition","name":"DummyAction.constructor","weight":0.5,"headline":"constructor","preContext":["  getActionName() { return this.name; }","  triggerLemAction(lem) { lem.setAction(this); return true; }","  process() { return Lemmings.LemmingStateType.NO_STATE_TYPE; }","}"],"postContext":["getActionName() { return this.name; }"]},{"id":342,"file":"test\\keyboardshortcuts.zoomClear.test.js","start":856,"end":1297,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":["function createWindowStub() {","  let rafCb;","  const win = {","    addEventListener() {},"]},{"id":343,"file":"js\\ActionFryingSystem.js","start":309,"end":356,"kind":"MethodDefinition","name":"ActionFryingSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.FRYING, singleSprite: true, actionName: 'frying' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"]},{"id":344,"file":"js\\ActionHoistSystem.js","start":293,"end":340,"kind":"MethodDefinition","name":"ActionHoistSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.POSTCLIMBING, actionName: 'hoist' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"]},{"id":345,"file":"js\\ActionOhNoSystem.js","start":308,"end":355,"kind":"MethodDefinition","name":"ActionOhNoSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.OHNO, singleSprite: true, actionName: 'oh-no' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r"]},{"id":346,"file":"js\\ActionJumpSystem.js","start":286,"end":333,"kind":"MethodDefinition","name":"ActionJumpSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.JUMPING, actionName: 'jump' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"]},{"id":347,"file":"js\\ActionShrugSystem.js","start":294,"end":341,"kind":"MethodDefinition","name":"ActionShrugSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.SHRUGGING, actionName: 'shrugging' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"]},{"id":348,"file":"js\\Animation.js","start":1850,"end":1951,"kind":"MethodDefinition","name":"Animation.restart","weight":1.2,"headline":"tick restart first frame finished false","preContext":["      enumerable: true,","      get: () => this.frames.length,","    });","  }"],"postContext":["getFrame (globalTick) {","    const count = this.frames.length;","    if (count === 0) return null;",""]},{"id":349,"file":"js\\ActionSplatterSystem.js","start":322,"end":369,"kind":"MethodDefinition","name":"ActionSplatterSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.SPLATTING, singleSprite: true, actionName: 'splatter' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r"]},{"id":350,"file":"js\\BitReader.js","start":2102,"end":2157,"kind":"MethodDefinition","name":"BitReader.getCurrentChecksum","weight":1.2,"headline":"checksum get current return","preContext":["    this.#buffer = this.#binReader.readByte(this.#pos);\r","    this.#bufferLen = initBufferLength;\r","    this.#checksum = this.#buffer;\r","  }"],"postContext":["read(bitCount) {\r","    if (!Number.isInteger(bitCount) || bitCount < 1 || bitCount > 32)\r","      throw new RangeError('bitCount must be an integer between 1 and 32');\r","\r"]},{"id":351,"file":"js\\CommandLemmingsAction.js","start":155,"end":704,"kind":"MethodDefinition","name":"CommandLemmingsAction.execute","weight":1.2,"headline":"game lemming skill skills manager return selected","preContext":["constructor(lemmingId) {\r","    this.lemmingId = lemmingId;\r","  }"],"postContext":["load(values) {\r","    this.lemmingId = values[0];\r","  }"]},{"id":352,"file":"js\\BitWriter.js","start":1242,"end":1289,"kind":"MethodDefinition","name":"BitWriter.outData","weight":1.2,"headline":"get return","preContext":["    this.#outData = new Uint8Array(outLength);\r","    this.#outPos = outLength; // Write head walks *backwards*\r","    this.#bitReader = bitReader;\r","  }"],"postContext":["get outPos() {\r","    return this.#outPos;\r","  }"]},{"id":353,"file":"js\\Game.js","start":962,"end":1176,"kind":"MethodDefinition","name":"Game.setGameDisplay","weight":1.2,"headline":"display set game screen position gu level","preContext":["    this.showDebug      = false;","","    this._boundTick = this.onGameTimerTick.bind(this);","  }"],"postContext":["setGuiDisplay (display) {","    this.guiDisplay = display;","    if (this.gameGui) {","      this.gameGui.setGuiDisplay(display);"]},{"id":354,"file":"js\\CommandReleaseRateDecrease.js","start":151,"end":345,"kind":"MethodDefinition","name":"CommandReleaseRateDecrease.execute","weight":1.2,"headline":"game victory condition return execute const get","preContext":["constructor(number) {\r","    this.number = number;\r","  }"],"postContext":["load() {}"]},{"id":355,"file":"js\\CommandNuke.js","start":99,"end":445,"kind":"MethodDefinition","name":"CommandNuke.execute","weight":1.2,"headline":"game lemming manager victory condition return const","preContext":["constructor() {}"],"postContext":["load() {}"]},{"id":356,"file":"js\\GameGui.js","start":2729,"end":2836,"kind":"MethodDefinition","name":"GameGui.setMiniMap","weight":1.2,"headline":"mini map set game lemming manager","preContext":["      this.backgroundChanged = true;","      this._selectionOffset  = 0;","    });","  }"],"postContext":["_applyReleaseRateAuto() {","    if (!this.deltaReleaseRate) return;","    if (this.gameTimer.isRunning()) {","      const min = this.gameVictoryCondition.getMinReleaseRate?.() ?? 0;"]},{"id":357,"file":"js\\CommandReleaseRateIncrease.js","start":151,"end":344,"kind":"MethodDefinition","name":"CommandReleaseRateIncrease.execute","weight":1.2,"headline":"game victory condition return execute const get","preContext":["constructor(number) {\r","    this.number = number;\r","  }"],"postContext":["load() {}"]},{"id":358,"file":"js\\FileProvider.js","start":544,"end":587,"kind":"MethodDefinition","name":"FileProvider.clearCache","weight":1.2,"headline":"clear cache","preContext":["     * @type {Map<string, Promise<any>>}","     */","    this._cache = new Map();","  }"],"postContext":["loadBinary(path, filename = null, opts = {}) {","    const url = this._buildUrl(path, filename);","    if (!opts.forceReload && this._cache.has(url)) {","      return this._cache.get(url);"]},{"id":359,"file":"js\\GameTimer.js","start":1699,"end":1736,"kind":"MethodDefinition","name":"GameTimer.isRunning","weight":1.2,"headline":"running return","preContext":["    this.#updateFrameTime();","    this.benchStartupFrames = 0;","    this.benchStableFactor = 1;","  }"],"postContext":["get tickIndex() { return this.#tickIndex; }"]},{"id":360,"file":"js\\FileContainer.js","start":680,"end":724,"kind":"MethodDefinition","name":"FileContainer.count","weight":1.2,"headline":"return parts length","preContext":["    super();","    this.#parts = [];","    this.read(content);","  }"],"postContext":["getPart(index) {","    if (index < 0 || index >= this.#parts.length) {","      this.log.log(`getPart(${index}) Out of index!`);","      return new Lemmings.BinaryReader();"]},{"id":361,"file":"test\\minimap.extra.test.js","start":706,"end":1599,"kind":"FunctionDeclaration","name":"createLevel","weight":0.5,"headline":"const mask return sub ground new ui","preContext":["    drawFrame(frame, x, y) { this.drawFrameCalls.push({ frame, x, y }); },","    setScreenPosition(x, y) { this.lastScreenPosition = [x, y]; }","  };","}"],"postContext":["function makeStage(level, display) {","  return {","    getGameViewRect() {","      return { x: level.screenPositionX, y: 0, w: display.worldDataSize.width, h: display.worldDataSize.height };"]},{"id":362,"file":"test\\gamegui.behavior.test.js","start":489,"end":608,"kind":"MethodDefinition","name":"TimerStub.constructor","weight":0.5,"headline":"constructor running true speed factor game second","preContext":["  toggle() { this.running = !this.running; }","  getGameTime() { return 0; }","  getGameLeftTimeString() { return '0'; }","}"],"postContext":["isRunning() { return this.running; }"]},{"id":363,"file":"test\\action-drown-explode.test.js","start":555,"end":615,"kind":"MethodDefinition","name":"StubLemming.getDirection","weight":0.5,"headline":"get direction return look","preContext":["    this.frameIndex = 0;","    this.state = 0;","    this.disabled = false;","  }"],"postContext":["disable() { this.disabled = true; }"]},{"id":364,"file":"test\\action-mine-system.test.js","start":323,"end":345,"kind":"MethodDefinition","name":"DummyMask.at","weight":0.5,"headline":"return false","preContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; }"],"postContext":["function stubMasks() {","  return new Map([","    ['left', { GetMask() { return new DummyMask(); } }],","    ['right', { GetMask() { return new DummyMask(); } }]"]},{"id":365,"file":"test\\action-systems-extra.test.js","start":547,"end":607,"kind":"MethodDefinition","name":"StubDisplay.drawFrame","weight":0.5,"headline":"frame draw calls push","preContext":["constructor() { this.calls = []; }"],"postContext":["class StubLemming {","  constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; this.disabled = false; }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","  disable() { this.disabled = true; }"]},{"id":366,"file":"test\\action-systems.test.js","start":2088,"end":2148,"kind":"MethodDefinition","name":"StubLemming.getDirection","weight":0.5,"headline":"get direction return look","preContext":["    this.hasParachute = false;","    this.disabled = false;","    this.countdown = 0;","  }"],"postContext":["disable() { this.disabled = true; }"]},{"id":367,"file":"test\\bench-entrance-placement.test.js","start":436,"end":475,"kind":"MethodDefinition","name":"GameFactoryStub.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":368,"file":"test\\bench-sequence.test.js","start":261,"end":273,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() { this.guiImgProps = { x:0, y:0, viewPoint:{ scale:1 }}; }","  getGameDisplay() { return { clear() {}, setScreenPosition() {}, redraw() {} }; }","  getGuiDisplay() { return {}; }"]},{"id":369,"file":"test\\bench-start.test.js","start":498,"end":566,"kind":"MethodDefinition","name":"LevelStub.getGroundMaskLayer","weight":0.5,"headline":"ground return get mask layer false","preContext":["    this.objects = [];","    this.entrances = [{ x: 10, y: 10 }];","    this.triggers = [];","  }"],"postContext":["render() {}"]},{"id":370,"file":"test\\bench-tps.test.js","start":765,"end":807,"kind":"MethodDefinition","name":"DisplayImageStub.initSize","weight":0.5,"headline":"init size arg","preContext":["    this.onDoubleClick = new Lemmings.EventHandler();","    this.calls = [];","    this.stage = { updateStageSize() {} };","  }"],"postContext":["setBackground(bg) { this.background = bg; }"]},{"id":371,"file":"test\\bitwriter.test.js","start":366,"end":414,"kind":"MethodDefinition","name":"StubReader.read","weight":0.5,"headline":"read bits return values shift","preContext":["constructor(values) {","    this.values = values.slice();","  }"],"postContext":[]},{"id":372,"file":"test\\displayimage.primitives.test.js","start":143,"end":301,"kind":"MethodDefinition","name":"StubStage.createImage","weight":0.5,"headline":"create image owner calls push return new","preContext":["constructor() { this.calls = []; }"],"postContext":["setGameViewPointPosition() {}"]},{"id":373,"file":"js\\GroundRenderer.js","start":157,"end":240,"kind":"MethodDefinition","name":"GroundRenderer.createVgaspecMap","weight":1.2,"headline":"vg renderer im create asp ec map","preContext":["constructor () {}"],"postContext":["createGroundMap (levelReader, terrainImages) {\r","    const { levelWidth, levelHeight, terrains } = levelReader;\r","    this.img = new Lemmings.Frame(levelWidth, levelHeight);\r","\r"]},{"id":374,"file":"js\\GameView.js","start":1669,"end":2161,"kind":"MethodDefinition","name":"GameView.gameCanvas","weight":1.2,"headline":"stage resize window event listener el dispose","preContext":["    this.shortcuts = new Lemmings.KeyboardShortcuts(this);","","    this.log.log('selected level: ' + Lemmings.GameTypes.toString(this.gameType) + ' : ' + this.levelIndex + ' / ' + this.levelGroupIndex);","  }"],"postContext":["async start(replayString) {","    if (!this.gameFactory) return;","    if (this.game != null) {","      this.continue();"]},{"id":375,"file":"js\\Lemming.js","start":484,"end":550,"kind":"MethodDefinition","name":"Lemming.getDirection","weight":1.2,"headline":"get direction return look","preContext":["    this.x = x;","    this.y = y;","    this.id = id;","  }"],"postContext":["getCountDownTime() {","    return (8 - (this.countdown >> 4));","  }"]},{"id":376,"file":"js\\GameVictoryCondition.js","start":400,"end":447,"kind":"MethodDefinition","name":"GameVictoryCondition.getNeedCount","weight":1.2,"headline":"need get return","preContext":["    this.releaseRate = level.releaseRate;","    this.survivorCount = 0;","    this.outCount = 0;","  }"],"postContext":["getReleaseCount() {","    return this.releaseCount;","  }"]},{"id":377,"file":"js\\L2ssSpriteDecoder.js","start":256,"end":2329,"kind":"ExportedFunction","name":"decodeFrame","weight":1.2,"headline":"byte let remind plane const else read","preContext":["    (buf[off + 2] << 8) |","    buf[off + 3]","  );","}"],"postContext":[]},{"id":378,"file":"js\\ActionMineSystem.js","start":425,"end":1314,"kind":"MethodDefinition","name":"ActionMineSystem.process","weight":1.2,"headline":"le mask level frame case sub return","preContext":["      maskTypes: { left: Lemmings.MaskTypes.MINING_L, right: Lemmings.MaskTypes.MINING_R },\r","      actionName: 'mining'\r","    });\r","  }"],"postContext":[]},{"id":379,"file":"js\\LemmingsSprite.js","start":3608,"end":3710,"kind":"MethodDefinition","name":"LemmingsSprite.getAnimation","weight":1.2,"headline":"animation state get return lemming","preContext":["    for (const [state, dir, bits, w, h, offX, offY, frames] of ANIM_LIST) {\r","      this.#registerAnimation(state, dir, fr, bits, w, h, offX, offY, frames, paletteCache);\r","    }\r","  }"],"postContext":["#typeToIndex(state, right) {\r","    return state * 2 + (right ? 0 : 1);\r","  }"]},{"id":380,"file":"js\\LevelReader.js","start":792,"end":1925,"kind":"MethodDefinition","name":"LevelReader.readLevelInfo","weight":1.2,"headline":"read fr word level properties skills lemmings","preContext":["    this.readSteelArea(fr);\r","    this.readLevelName(fr);\r","    this.log.debug(this);\r","  }"],"postContext":["readLevelObjects(fr) {\r","    /// reset array\r","    this.objects = [];\r","    fr.setOffset(0x0020);\r"]},{"id":381,"file":"js\\xbrz\\xbrz.js","start":344,"end":384,"kind":"MethodDefinition","name":"IntPtr.position","weight":1.2,"headline":"pos position pt","preContext":["constructor (intArray) {","    this.arr = intArray;","    this.ptr = 0;","  }"],"postContext":["get () {","    return this.arr[this.ptr];","  }"]},{"id":382,"file":"test\\gamegui.test.js","start":788,"end":830,"kind":"MethodDefinition","name":"DisplayImageStub.initSize","weight":0.5,"headline":"init size arg","preContext":["    this.onMouseMove = new Lemmings.EventHandler();","    this.onDoubleClick = new Lemmings.EventHandler();","    this.calls = [];","  }"],"postContext":["setBackground(bg) { this.background = bg; }"]},{"id":383,"file":"test\\gameview.applyquery.test.js","start":180,"end":192,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["function createWindow(search = '') {","  return {","    location: { search },","    setTimeout,"]},{"id":384,"file":"test\\gameview.canvas-reset.test.js","start":462,"end":478,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":385,"file":"test\\gameview.dispose.test.js","start":464,"end":505,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor dispose called","preContext":["class KeyboardShortcutsMock {","  constructor() { this.disposeCalled = 0; }","  dispose() { this.disposeCalled++; }","}"],"postContext":["dispose() { this.disposeCalled++; }"]},{"id":386,"file":"js\\EventHandler.js","start":176,"end":310,"kind":"MethodDefinition","name":"EventHandler.on","weight":1.2,"headline":"handler handlers function add","preContext":["constructor () {\r","    this.handlers = new Set();\r","  }"],"postContext":["off (handler) {\r","    this.handlers.delete(handler);\r","  }"]},{"id":387,"file":"js\\GameFactory.js","start":390,"end":709,"kind":"MethodDefinition","name":"GameFactory.getGame","weight":1.2,"headline":"game resources new resolve get return reject","preContext":["    this.fileProvider = new Lemmings.FileProvider(rootPath);","    let configFileReader = this.fileProvider.loadString('config.json');","    this.configReader = new Lemmings.ConfigReader(configFileReader);","  }"],"postContext":["getConfig(gameType) {","    return this.configReader.getConfig(gameType);","  }"]},{"id":388,"file":"js\\vendor\\hqx\\squooshhqx_bg.js","start":0,"end":180133,"kind":"Module","name":"root","weight":1.2,"headline":"ag ng ak ai gog ay mg","preContext":[],"postContext":[]},{"id":389,"file":"js\\ColorPalette.js","start":75,"end":168,"kind":"MethodDefinition","name":"ColorPalette.constructor","weight":1.2,"headline":"constructor new ui nt colors fill","preContext":["  static get debugColor() {","    return 0xFFFF00FF;","  }","}"],"postContext":["setColorInt(index, colorValue) {","    this.data[index] = colorValue;","  }"]},{"id":390,"file":"test\\xbrz-scaler2x.test.js","start":312,"end":497,"kind":"FunctionDeclaration","name":"makeOut","weight":0.5,"headline":"bu return function make ref const get","preContext":["function color32(r, g, b) {","  return (0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF)) >>> 0;","}"],"postContext":[]},{"id":391,"file":"test\\xbrz-scaler4x.test.js","start":312,"end":497,"kind":"FunctionDeclaration","name":"makeOut","weight":0.5,"headline":"bu return function make ref const get","preContext":["function color32(r, g, b) {","  return (0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF)) >>> 0;","}"],"postContext":[]},{"id":392,"file":"js\\CommandManager.js","start":131,"end":837,"kind":"MethodDefinition","name":"CommandManager.constructor","weight":1.2,"headline":"constructor game tick timer listener command null","preContext":["    this.runCommands = {};","    this.loggedCommads = {};","  }","}"],"postContext":["setGame(game) {","    if (game == null) return;","    this.game = game;","    this.runCommands = {};"]},{"id":393,"file":"test\\userinput.test.js","start":860,"end":1301,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":394,"file":"test\\userinput.events.test.js","start":253,"end":360,"kind":"MethodDefinition","name":"StubElement.constructor","weight":0.5,"headline":"constructor super","preContext":["  getBoundingClientRect() {","    return { left: 0, top: 0, width: this.width, height: this.height };","  }","}"],"postContext":["getBoundingClientRect() {","    return { left: 0, top: 0, width: this.width, height: this.height };","  }"]},{"id":395,"file":"test\\unpackfilepart.test.js","start":333,"end":388,"kind":"MethodDefinition","name":"MockLogHandler.constructor","weight":0.5,"headline":"constructor logged debugged","preContext":["  constructor() { this.logged = []; this.debugged = []; }","  log(msg) { this.logged.push(msg); }","  debug(msg) { this.debugged.push(msg); }","}"],"postContext":["log(msg) { this.logged.push(msg); }"]},{"id":396,"file":"js\\LevelIndexResolve.js","start":140,"end":1007,"kind":"MethodDefinition","name":"LevelIndexResolve.resolve","weight":1.2,"headline":"level order let li mode conf return","preContext":["constructor(config) {\r","    this.config = config;\r","  }"],"postContext":[]},{"id":397,"file":"js\\LevelConfig.js","start":613,"end":779,"kind":"MethodDefinition","name":"LevelConfig.getGroupLength","weight":1.2,"headline":"group length order return get","preContext":["             *   where a negative value means the odd table should be used\r","             */\r","    this.order = [];\r","  }"],"postContext":[]},{"id":398,"file":"js\\LogHandler.js","start":137,"end":262,"kind":"MethodDefinition","name":"Logger._enabled","weight":1.2,"headline":"lemmings game enabled return undefined show debug","preContext":["constructor(moduleName) {","    this._moduleName = moduleName;","  }"],"postContext":["info(msg) {","    if (this._enabled()) {","      console.info(`${this._moduleName}\\t${msg}`);","    }"]},{"id":399,"file":"js\\MapObject.js","start":1470,"end":1686,"kind":"MethodDefinition","name":"MapObject.onTrigger","weight":1.2,"headline":"animation global tick restart trigger lemming null","preContext":["    this.animation.firstFrameIndex = objectImg.firstFrameIndex;\r","    this.animation.objectImg       = objectImg;\r","    this.animation.frames          = frames;\r","  }"],"postContext":[]},{"id":400,"file":"test\\action-base-system.test.js","start":375,"end":423,"kind":"MethodDefinition","name":"StubAnimation.getFrame","weight":0.5,"headline":"get frame return label","preContext":["constructor(label) { this.label = label; }"],"postContext":["class StubSprites {","  getAnimation(type, right) { return new StubAnimation(`sprite-${type}-${right}`); }","}"]},{"id":401,"file":"test\\gameview.menu-selects.test.js","start":451,"end":624,"kind":"FunctionDeclaration","name":"createSelect","weight":0.5,"headline":"options function create select return selected append","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"]},{"id":402,"file":"test\\gameview.loadlevel-missing.test.js","start":230,"end":242,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageStub {","  constructor() {","    this.gameDisplay = {","      clearCalled: 0,"]},{"id":403,"file":"test\\gameview.loadlevel.test.js","start":273,"end":285,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageStub {","  constructor() {","    this.gameDisplay = {","      clearCalled: 0,"]},{"id":404,"file":"test\\gameview.loadReplay.test.js","start":212,"end":224,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class GameFactoryMock { constructor() {} }"]},{"id":405,"file":"test\\gameview.onGameEnd.test.js","start":247,"end":259,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() {","    this.fadeCalls = 0;","    this.guiImgProps = { x: 0, y: 0, viewPoint: { scale: 1 } };"]},{"id":406,"file":"test\\gameview.sound.test.js","start":100,"end":161,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":["constructor() {}"],"postContext":["constructor() {}"]},{"id":407,"file":"test\\keyboardshortcuts.loop.test.js","start":713,"end":907,"kind":"MethodDefinition","name":"StageStub.applyViewport","weight":0.5,"headline":"im game props view point apply viewport","preContext":["      },","      viewPoint: { x: 0, y: 0, scale: 1 }","    };","  }"],"postContext":["clampViewPoint() {}"]},{"id":408,"file":"test\\displayimage.test.js","start":236,"end":265,"kind":"MethodDefinition","name":"StubStage.setGameViewPointPosition","weight":0.5,"headline":"set game view point position","preContext":["createImage() {","    return { width: 0, height: 0, data: new Uint8ClampedArray(0) };","  }"],"postContext":["redraw() {}"]},{"id":409,"file":"js\\vendor\\hqx\\squooshhqx.js","start":489,"end":689,"kind":"FunctionDeclaration","name":"getInt32Memory0","weight":2,"headline":"int memory cached function get null byte","preContext":["  getUint32Memory0().set(arg, ptr / 4);","  WASM_VECTOR_LEN = arg.length;","  return ptr;","}"],"postContext":["function getArrayU32FromWasm0(ptr, len) {","  ptr = ptr >>> 0;","  return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);","}"]},{"id":410,"file":"js\\TriggerManager.js","start":1903,"end":2061,"kind":"MethodDefinition","name":"TriggerManager.add","weight":1.2,"headline":"trigger add triggers return insert debug frame","preContext":["\r","    /** @type {Lemmings.Frame|null} prebuilt debug overlay */\r","    this._debugFrame = null;\r","  }"],"postContext":["addRange (arr) {\r","    for (let i = 0; i < arr.length; ++i) this.add(arr[i]);\r","    if (arr.length) this._debugFrame = null;\r","  }"]},{"id":411,"file":"js\\UnpackFilePart.js","start":1293,"end":1330,"kind":"MethodDefinition","name":"UnpackFilePart.offset","weight":1.2,"headline":"offset get return","preContext":["constructor(fileReader) {\r","    super();\r","    this.#fileReader = fileReader;\r","  }"],"postContext":["set offset(val) { this.#offset = val; }"]},{"id":412,"file":"test\\groundrenderer.test.js","start":315,"end":456,"kind":"MethodDefinition","name":"SimpleImageData.constructor","weight":0.5,"headline":"constructor new ui nt clamped","preContext":["    this.height = height;","    this.data = new Uint8ClampedArray(width * height * 4);","  }","}"],"postContext":["class MockStage {","  constructor() { this.display = null; }","  createImage(display, w, h) { return new SimpleImageData(w, h); }","  getGameDisplay() {"]},{"id":413,"file":"js\\UserInputManager.js","start":335,"end":597,"kind":"ClassDeclaration","name":"ZoomEventArgs","weight":1.5,"headline":"delta zoom mouse class event arg extends","preContext":["    this.deltaX = deltaX;","    this.deltaY = deltaY;","    this.button = button;","  }"],"postContext":["constructor(x = 0, y = 0, deltaZoom = 0) {","    super(x, y);","    this.mouseDownX = 0;","    this.mouseDownY = 0;"]},{"id":414,"file":"js\\vendor\\hqx\\index.js","start":491,"end":608,"kind":"ExportedFunction","name":"hqxScale","weight":1.2,"headline":"hq factor function scale init return resize","preContext":["    initSync(bytes);","    initialized = true;","  }","}"],"postContext":[]},{"id":415,"file":"js\\VGASpecReader.js","start":953,"end":988,"kind":"MethodDefinition","name":"VGASpecReader.width","weight":1.2,"headline":"get return","preContext":["    this.#groundPalette = new Lemmings.ColorPalette();\r","    this.#img = new Lemmings.Frame(this.#width, this.#height);\r","    this.#read(vgaspecFile);\r","  }"],"postContext":["get height() { return this.#height; }"]},{"id":416,"file":"js\\ViewPoint.js","start":350,"end":519,"kind":"MethodDefinition","name":"ViewPoint.setX","weight":1.2,"headline":"bounds min max math set const else","preContext":["    this.x = x;","    this.y = y;","    this.scale = scale;","  }"],"postContext":["setY(value, bounds) {","    if (bounds) {","      const [min, max] = bounds;","      this.y = Math.min(Math.max(value, min), max);"]},{"id":417,"file":"test\\loghandler.test.js","start":298,"end":306,"kind":"MethodDefinition","name":"RecordingHandler.log","weight":0.5,"headline":"log","preContext":["constructor(name) {","    this.name = name;","    RecordingHandler.messages.push(name);","  }"],"postContext":["debug() {}"]},{"id":418,"file":"test\\fileprovider.test.js","start":190,"end":255,"kind":"MethodDefinition","name":"MockLogHandler.constructor","weight":0.5,"headline":"constructor logged debugged","preContext":["  debug(msg) {","    this.debugged.push(msg);","  }","}"],"postContext":["log(msg) {","    this.logged.push(msg);","  }"]},{"id":419,"file":"test\\mask.test.js","start":316,"end":372,"kind":"MethodDefinition","name":"StubReader.readByte","weight":0.5,"headline":"read byte return bytes","preContext":["constructor(bytes) {","    this.bytes = bytes;","    this.idx = 0;","  }"],"postContext":[]},{"id":420,"file":"test\\skillpanelsprites.helpers.test.js","start":400,"end":424,"kind":"MethodDefinition","name":"FakeReader.readByte","weight":0.5,"headline":"read byte return","preContext":["setOffset() {}"],"postContext":[]},{"id":421,"file":"test\\skillpanelsprites.test.js","start":410,"end":443,"kind":"MethodDefinition","name":"FakeAnimation.getFrame","weight":0.5,"headline":"get frame return label","preContext":["constructor(label) { this.label = label; }"],"postContext":["class FakeSprites {","  getAnimation(type, right) {","    return new FakeAnimation(`anim-${type}-${right}`);","  }"]},{"id":422,"file":"test\\exportLemmingsSprites.test.js","start":2007,"end":2647,"kind":"FunctionDeclaration","name":"runScript","weight":0.5,"headline":"arg process wd script options const orig","preContext":["  const stub = path.join(dir, 'exportLemmingsSprites.stub.js');","  fs.writeFileSync(stub, 'export class NodeFileProvider {}\\n');","  return { script, stub };","}"],"postContext":[]},{"id":423,"file":"test\\filecontainer.test.js","start":1041,"end":1860,"kind":"FunctionDeclaration","name":"runTest","weight":0.5,"headline":"part assert strict equal const checksum length","preContext":["  const data = source.data.subarray(part.offset, part.offset + part.compressedSize);\r","  for (const b of data) cs ^= b;\r","  return cs;\r","}"],"postContext":[]},{"id":424,"file":"test\\filecontainer-errors.test.js","start":271,"end":306,"kind":"MethodDefinition","name":"MockLogHandler.log","weight":0.5,"headline":"msg log logged push","preContext":["constructor() { this.logged = []; }"],"postContext":["debug() {}"]},{"id":425,"file":"js\\ActionBlockerSystem.js","start":365,"end":1022,"kind":"MethodDefinition","name":"ActionBlockerSystem.process","weight":1.2,"headline":"le trigger lemmings state manager level const","preContext":["constructor(sprites, triggerManager) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.BLOCKING, singleSprite: true, actionName: 'blocking' });","    this.triggerManager = triggerManager;","  }"],"postContext":[]},{"id":426,"file":"js\\ActionBuildSystem.js","start":290,"end":1241,"kind":"MethodDefinition","name":"ActionBuildSystem.process","weight":1.2,"headline":"le look state return lemmings lemming level","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.BUILDING, actionName: 'building' });\r","  }"],"postContext":[]},{"id":427,"file":"js\\ActionClimbSystem.js","start":298,"end":423,"kind":"MethodDefinition","name":"ActionClimbSystem.triggerLemAction","weight":1.2,"headline":"le climb return true trigger action false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.CLIMBING, actionName: 'climbing' });\r","  }"],"postContext":["process(level, lem) {\r","    lem.frameIndex = (lem.frameIndex + 1) % 8;\r","    if (lem.frameIndex < 4) {\r","      // check for top\r"]},{"id":428,"file":"js\\ActionCountdownSystem.js","start":441,"end":505,"kind":"MethodDefinition","name":"ActionCountdownSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return set","preContext":["    if (ActionCountdownSystem.numberMasks.size == 0) {\r","      ActionCountdownSystem.numberMasks.set('numbers', masks.GetMask(Lemmings.MaskTypes.NUMBERS));\r","    }\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    let count = lem.getCountDownTime();\r","    if (count <= 0) {\r","      return;\r"]},{"id":429,"file":"js\\ActionDiggSystem.js","start":295,"end":1069,"kind":"MethodDefinition","name":"ActionDiggSystem.process","weight":1.2,"headline":"le level state return lemmings lemming steel","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.DIGGING, actionName: 'digging' });\r","  }"],"postContext":["digRow(level, lem, y) {\r","    let removeCount = 0;\r","    for (let x = lem.x - 4; x < lem.x + 5; x++) {\r","      if (level.hasGroundAt(x, y)) {\r"]},{"id":430,"file":"js\\ActionDrowningSystem.js","start":313,"end":360,"kind":"MethodDefinition","name":"ActionDrowningSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.DROWNING, singleSprite: true, actionName: 'drowning' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r"]},{"id":431,"file":"js\\ActionExitingSystem.js","start":387,"end":434,"kind":"MethodDefinition","name":"ActionExitingSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites, gameVictoryCondition) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.EXITING, singleSprite: true, actionName: 'exiting' });\r","    this.gameVictoryCondition = gameVictoryCondition;\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"]},{"id":432,"file":"js\\ActionFallSystem.js","start":281,"end":343,"kind":"MethodDefinition","name":"ActionFallSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["constructor(sprites) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.FALLING, actionName: 'falling' });","  }"],"postContext":["process(level, lem) {","    lem.frameIndex++;","    if (lem.state > 16 && (lem.hasParachute)) {","      return Lemmings.LemmingStateType.FLOATING;"]},{"id":433,"file":"js\\BinaryReader.js","start":4135,"end":4174,"kind":"MethodDefinition","name":"BinaryReader.data","weight":1.2,"headline":"get return","preContext":["    this.#length = length;","    this.#pos = this.#hiddenOffset;","    this.ready = Promise.resolve(this.#data);","  }"],"postContext":["get hiddenOffset() {","    return this.#hiddenOffset;","  }"]},{"id":434,"file":"js\\ActionFloatingSystem.js","start":438,"end":571,"kind":"MethodDefinition","name":"ActionFloatingSystem.triggerLemAction","weight":1.2,"headline":"le parachute return true trigger action false","preContext":["constructor(sprites) {\r","    super({ sprites, spriteType: Lemmings.SpriteTypes.UMBRELLA, actionName: 'floating' });\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    const ani = this.sprites.get(lem.getDirection());\r","    const frame = ani.getFrame(FLOAT_FRAME[lem.frameIndex]);\r","    gameDisplay.drawFrame(frame, lem.x, lem.y);\r"]},{"id":435,"file":"js\\Game.js","start":1180,"end":1313,"kind":"MethodDefinition","name":"Game.setGuiDisplay","weight":1.2,"headline":"display gu set game","preContext":["      this.gameDisplay.setGuiDisplay(display);","      this.display.setScreenPosition(this.level?.screenPositionX ?? 0, 0);","    }","  }"],"postContext":["_disposeCurrentLevel () {","    if (this.gameTimer)            { this.gameTimer.stop(); this.gameTimer = null; }","    if (this.commandManager?.dispose)    this.commandManager.dispose();","    if (this.objectManager?.dispose)     this.objectManager.dispose();"]},{"id":436,"file":"js\\BitWriter.js","start":1360,"end":1405,"kind":"MethodDefinition","name":"BitWriter.outPos","weight":1.2,"headline":"pos get return","preContext":["get outData() {\r","    return this.#outData;\r","  }"],"postContext":["get bitReader() {\r","    return this.#bitReader;\r","  }"]},{"id":437,"file":"js\\CommandLemmingsAction.js","start":710,"end":762,"kind":"MethodDefinition","name":"CommandLemmingsAction.load","weight":1.2,"headline":"values load lemming","preContext":["      return false;\r","    }\r","    return gameSkills.reuseSkill(selectedSkill);\r","  }"],"postContext":["save() {\r","    return [this.lemmingId, this.skillType];\r","  }"]},{"id":438,"file":"js\\BitReader.js","start":2446,"end":3366,"kind":"MethodDefinition","name":"BitReader.read","weight":1.2,"headline":"bit let pos checksum result read integer","preContext":["getCurrentChecksum() {\r","    return this.#checksum;\r","  }"],"postContext":["eof() {\r","    return this.#bufferLen === 0 && this.#pos <= 0;\r","  }"]},{"id":439,"file":"js\\ActionSplatterSystem.js","start":373,"end":545,"kind":"MethodDefinition","name":"ActionSplatterSystem.draw","weight":1.2,"headline":"le game draw display super frame lemmings","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.disable();\r","    if (++lem.frameIndex >= 16) return Lemmings.LemmingStateType.OUT_OF_LEVEL;\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r"]},{"id":440,"file":"js\\Animation.js","start":1955,"end":2644,"kind":"MethodDefinition","name":"Animation.getFrame","weight":1.2,"headline":"frame last local return frames else global","preContext":["restart (startTick = 0) {","    this.firstFrameIndex = startTick;","    this.isFinished      = false;","  }"],"postContext":["loadFromFile (fr, bitsPerPixel, width, height, frames, palette,","    offsetX = null, offsetY = null) {","    const frameArray = new Array(frames);","    for (let i = 0; i < frames; ++i) {"]},{"id":441,"file":"js\\ActionShrugSystem.js","start":347,"end":411,"kind":"MethodDefinition","name":"ActionShrugSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.frameIndex++;\r","    if (lem.frameIndex >= 8) {\r","      return Lemmings.LemmingStateType.WALKING;\r"]},{"id":442,"file":"js\\ActionJumpSystem.js","start":339,"end":403,"kind":"MethodDefinition","name":"ActionJumpSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.frameIndex++;\r","    lem.x += (lem.lookRight ? 1 : -1);\r","\r"]},{"id":443,"file":"js\\ActionOhNoSystem.js","start":361,"end":533,"kind":"MethodDefinition","name":"ActionOhNoSystem.draw","weight":1.2,"headline":"le game draw display super frame lemmings","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    if (++lem.frameIndex == 16) {\r","      return Lemmings.LemmingStateType.EXPLODING;\r","    }\r"]},{"id":444,"file":"js\\ActionHoistSystem.js","start":346,"end":410,"kind":"MethodDefinition","name":"ActionHoistSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.frameIndex++;\r","    // if (!level.hasGroundAt(x + 1, y - 1) &&   // above wall, just ahead\r","    //     !level.hasGroundAt(x + 2, y - 1) &&   // further ahead, still above\r"]},{"id":445,"file":"js\\ActionFryingSystem.js","start":362,"end":426,"kind":"MethodDefinition","name":"ActionFryingSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.disable();\r","    lem.frameIndex++;\r","    if (lem.frameIndex >= 13) {\r"]},{"id":446,"file":"test\\keyboardshortcuts.zoomClear.test.js","start":1299,"end":1564,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"cb ra return win event listener animation","preContext":["      };","    }","  };","}"],"postContext":[]},{"id":447,"file":"test\\lemmingmanager.test.js","start":916,"end":953,"kind":"MethodDefinition","name":"DummyAction.getActionName","weight":0.5,"headline":"get action return","preContext":["constructor(name) { this.name = name; }"],"postContext":["triggerLemAction(lem) { lem.setAction(this); return true; }"]},{"id":448,"file":"test\\lemming.transitions.test.js","start":306,"end":343,"kind":"MethodDefinition","name":"SeqAction.getActionName","weight":0.5,"headline":"get action return","preContext":["constructor(name, next) { this.name = name; this.next = next; }"],"postContext":["triggerLemAction() { return true; }"]},{"id":449,"file":"js\\ActionBaseSystem.js","start":2243,"end":2315,"kind":"MethodDefinition","name":"ActionBaseSystem.triggerLemAction","weight":1.2,"headline":"le action trigger set return true","preContext":["getActionName() {\r","    return this.actionName || '';\r","  }"],"postContext":["draw(gameDisplay, lem) {\r","    if (!this.sprites) return;\r","    const key = this.sprites.has('both') ? 'both' : lem.getDirection();\r","    const ani = this.sprites.get(key);\r"]},{"id":450,"file":"js\\Trigger.js","start":573,"end":803,"kind":"MethodDefinition","name":"Trigger.disabledUntilTick","weight":1.2,"headline":"disabled tick set lemmings console warn wrapped","preContext":["get disabledUntilTick() { return this.#disabledUntilTick; }"],"postContext":["trigger(x, y, tick) {\r","    if (this.disabledUntilTick <= tick) {\r","      if ((x >= this.x1) && (y >= this.y1) && (x <= this.x2) && (y <= this.y2)) {\r","        this.disabledUntilTick = tick + this.disableTicksCount;\r"]},{"id":451,"file":"js\\StageImageProperties.js","start":409,"end":506,"kind":"MethodDefinition","name":"StageImageProperties.canvasViewportSize","weight":1.2,"headline":"set canvas viewport size","preContext":["get canvasViewportSize() {","    return { width: this.width, height: this.height };","  }"],"postContext":["createImage(width, height) {","    this.cav = document.createElement('canvas');","    this.cav.width = width;","    this.cav.height = height;"]},{"id":452,"file":"js\\ParticleTable.js","start":1094,"end":1157,"kind":"MethodDefinition","name":"ParticleTable.colorIndexTable","weight":1.2,"headline":"color table get return slice","preContext":["get palette() { return this.#palette; }"],"postContext":["get particleData() { return this.#particleData; }"]},{"id":453,"file":"js\\PaletteImage.js","start":266,"end":515,"kind":"MethodDefinition","name":"PaletteImage.createFrame","weight":1.2,"headline":"frame palette offset create const new lemmings","preContext":["getImageBuffer() { return this.pixBuf; }"],"postContext":["processImage(src, bpp = 3, startPos) {\r","    if (startPos != null) src.setOffset(startPos);\r","    const pixCount = this.pixBuf.length;\r","    let bitBuf = 0, bitLen = 0;\r"]},{"id":454,"file":"js\\SkillPanelSprites.js","start":2017,"end":2100,"kind":"MethodDefinition","name":"SkillPanelSprites.getLetterSprite","weight":1.2,"headline":"letter sprite get return upper case","preContext":["getPanelSprite() {\r","    return this.panelSprite;\r","  }"],"postContext":["getNumberSpriteLeft(number) {\r","    return this.numberSpriteLeft[number];\r","  }"]},{"id":455,"file":"js\\OddTableReader.js","start":650,"end":1843,"kind":"MethodDefinition","name":"OddTableReader.read","weight":1.2,"headline":"prop fr read word lemmings skills skill","preContext":["    if ((levelNumber >= this.levelProperties.length) || (levelNumber < 0))\r","      return null;\r","    return this.levelProperties[levelNumber];\r","  }"],"postContext":[]},{"id":456,"file":"js\\Stage.js","start":1562,"end":1982,"kind":"MethodDefinition","name":"Stage.setCursorSprite","weight":1.2,"headline":"frame cursor canvas const ic tx get","preContext":["","    this.updateStageSize();","    this.clear();","  }"],"postContext":["calcPosition2D(stageImage, e) {","    const localX = e.x - stageImage.x;","    const localY = e.y - stageImage.y;","    const worldX = stageImage.viewPoint.getSceneX(localX);"]},{"id":457,"file":"js\\ObjectManager.js","start":540,"end":666,"kind":"MethodDefinition","name":"ObjectManager.addRange","weight":1.2,"headline":"objects map add range let length push","preContext":["      let obj = objs[i];\r","      gameDisplay.drawFrameFlags(obj.animation.getFrame(tick+1), obj.x, obj.y, obj.drawProperties);\r","    }\r","  }"],"postContext":[]},{"id":458,"file":"test\\gameview.helpers.test.js","start":232,"end":395,"kind":"FunctionDeclaration","name":"createWindow","weight":0.5,"headline":"timeout event listener function create window return","preContext":["constructor() {}"],"postContext":[]},{"id":459,"file":"js\\Mask.js","start":686,"end":842,"kind":"MethodDefinition","name":"Mask.at","weight":1.2,"headline":"return false","preContext":["getMask() {\r","    return this.data;\r","  }"],"postContext":["loadFromFile(fr, width, height) {\r","    this.width = width;\r","    this.height = height;\r","    const pixCount = width * height;\r"]},{"id":460,"file":"js\\MaskList.js","start":318,"end":371,"kind":"MethodDefinition","name":"MaskList.GetMask","weight":1.2,"headline":"get mask return frames","preContext":["get length() {\r","    return this.frames.length;\r","  }"],"postContext":["loadFromFile(fr, width, height, count, offsetX, offsetY) {\r","    this.frames.length = 0;\r","    for (let i = 0; i < count; i++) {\r","      const mask = new Lemmings.Mask(fr, width, height, offsetX, offsetY);\r"]},{"id":461,"file":"test\\gameview.enableDebug.test.js","start":166,"end":178,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class GameFactoryMock { async getGame() { return {}; } }"]},{"id":462,"file":"test\\gameview.helperExtras.test.js","start":210,"end":440,"kind":"FunctionDeclaration","name":"setupEnv","weight":0.5,"headline":"global timeout event listener game factory function","preContext":["constructor() {}"],"postContext":["function cleanupEnv() {","  delete global.window;","  delete global.history;","}"]},{"id":463,"file":"test\\gameview.canvas-reset.test.js","start":479,"end":491,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() { this.disposeCalled = 0; }","  updateStageSize() {}","  dispose() { this.disposeCalled++; }"]},{"id":464,"file":"js\\xbrz\\xbrz.js","start":388,"end":431,"kind":"MethodDefinition","name":"IntPtr.get","weight":1.2,"headline":"get return arr pt","preContext":["position (pos) {","    this.ptr = pos;","  }"],"postContext":["set (val) {","    this.arr[this.ptr] = val;","  }"]},{"id":465,"file":"test\\gameview.applyquery.test.js","start":196,"end":366,"kind":"FunctionDeclaration","name":"createWindow","weight":0.5,"headline":"search timeout event listener function create window","preContext":["dispose() {}"],"postContext":[]},{"id":466,"file":"test\\gamegui.test.js","start":833,"end":876,"kind":"MethodDefinition","name":"DisplayImageStub.setBackground","weight":0.5,"headline":"background bg set","preContext":["initSize(w, h) { this.initArgs = [w, h]; }"],"postContext":["getWidth() { return this.width; }"]},{"id":467,"file":"js\\LevelReader.js","start":1962,"end":2669,"kind":"MethodDefinition","name":"LevelReader.readLevelObjects","weight":1.2,"headline":"new fr ob read const flags objects","preContext":["    this.graphicSet1 = fr.readWord();\r","    this.graphicSet2 = fr.readWord();\r","    this.isSuperLemming = (fr.readWord() != 0);\r","  }"],"postContext":["readLevelTerrain(fr) {\r","    /// reset array\r","    this.terrains = [];\r","    fr.setOffset(0x0120);\r"]},{"id":468,"file":"js\\LemmingsSprite.js","start":3880,"end":3954,"kind":"MethodDefinition","name":"LemmingsSprite.typeToIndex","weight":1.2,"headline":"state return","preContext":["getAnimation(state, right) {\r","    return this.#lemmingAnimation[this.#typeToIndex(state, right)];\r","  }"],"postContext":["#registerAnimation(state, dir, fr, bitsPerPixel, width, height, offsetX, offsetY, frames, paletteCache) {\r","    // Get/create per-state cache\r","    let stateCache = paletteCache.get(state);\r","    if (!stateCache) {\r"]},{"id":469,"file":"js\\GameVictoryCondition.js","start":450,"end":503,"kind":"MethodDefinition","name":"GameVictoryCondition.getReleaseCount","weight":1.2,"headline":"release get return","preContext":["getNeedCount() {","    return this.needCount;","  }"],"postContext":["changeReleaseRate(count) {","    if (this.isFinalize) {","      return false;","    }"]},{"id":470,"file":"js\\Lemming.js","start":554,"end":618,"kind":"MethodDefinition","name":"Lemming.getCountDownTime","weight":1.2,"headline":"get time return countdown","preContext":["getDirection() {","    return this.lookRight ? 'right' : 'left';","  }"],"postContext":["setAction(action) {","    this.action = action;","    this.frameIndex = 0;","    this.state = 0;"]},{"id":471,"file":"js\\GameView.js","start":2201,"end":3293,"kind":"MethodDefinition","name":"GameView.start","weight":1.2,"headline":"game get display state replay string level","preContext":["    window.addEventListener('resize', this._stageResize);","    window.addEventListener('orientationchange', this._stageResize);","    this._stageResize();","  }"],"postContext":["onGameEnd(gameResult) {","    this.changeHtmlText(this.elementGameState, Lemmings.GameStateTypes.toString(gameResult.state));","    this.stage.startFadeOut();","    console.dir(gameResult);"]},{"id":472,"file":"js\\GroundRenderer.js","start":291,"end":618,"kind":"MethodDefinition","name":"GroundRenderer.createGroundMap","weight":1.2,"headline":"level terrains obj reader terrain images const","preContext":["createVgaspecMap (levelReader, vgaRenderer) {\r","    this.img = vgaRenderer.img;\r","  }"],"postContext":["_blit (srcImg, cfg, frameIdx = 0) {\r","    if (!srcImg) return;\r","\r","    const pix  = srcImg.frames[frameIdx];\r"]},{"id":473,"file":"test\\displayimage.primitives.test.js","start":304,"end":333,"kind":"MethodDefinition","name":"StubStage.setGameViewPointPosition","weight":0.5,"headline":"set game view point position","preContext":["createImage(owner, width, height) {","    this.calls.push({ width, height });","    return { width, height, data: new Uint8ClampedArray(width * height * 4) };","  }"],"postContext":["redraw() {}"]},{"id":474,"file":"test\\bench-tps.test.js","start":810,"end":853,"kind":"MethodDefinition","name":"DisplayImageStub.setBackground","weight":0.5,"headline":"background bg set","preContext":["initSize(w, h) { this.initArgs = [w, h]; }"],"postContext":["getWidth() { return this.width; }"]},{"id":475,"file":"test\\bench-start.test.js","start":569,"end":580,"kind":"MethodDefinition","name":"LevelStub.render","weight":0.5,"headline":"render","preContext":["getGroundMaskLayer() { return { hasGroundAt() { return false; } }; }"],"postContext":["class LMStub {","  constructor() { this.spawnCount = 0; }","}"]},{"id":476,"file":"test\\bench-sequence.test.js","start":276,"end":606,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"stage gu get display class mock constructor","preContext":["dispose() {}"],"postContext":["constructor() { this.guiImgProps = { x:0, y:0, viewPoint:{ scale:1 }}; }"]},{"id":477,"file":"test\\bench-entrance-placement.test.js","start":476,"end":539,"kind":"MethodDefinition","name":"GameFactoryStub.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":["class StageStub { constructor() {} getGameDisplay() { return {}; } getGuiDisplay() { return {}; } updateStageSize() {} setCursorSprite() {} clear() {} startFadeOut() {} startOverlayFade() {} }"]},{"id":478,"file":"test\\action-systems.test.js","start":2151,"end":2186,"kind":"MethodDefinition","name":"StubLemming.disable","weight":0.5,"headline":"disable disabled true","preContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"],"postContext":["setCountDown(act) { this.countdownAction = act; if (this.countdown > 0) return false; this.countdown = 80; return true; }"]},{"id":479,"file":"test\\action-systems-extra.test.js","start":611,"end":844,"kind":"ClassDeclaration","name":"StubLemming","weight":0.5,"headline":"class stub lemming constructor look true disabled","preContext":["drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }"],"postContext":["constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; this.disabled = false; }"]},{"id":480,"file":"test\\action-mine-system.test.js","start":348,"end":511,"kind":"FunctionDeclaration","name":"stubMasks","weight":0.5,"headline":"mask return new get dummy function stub","preContext":["at() { return false; }"],"postContext":["class StubLemming {","  constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","}"]},{"id":481,"file":"test\\action-drown-explode.test.js","start":618,"end":653,"kind":"MethodDefinition","name":"StubLemming.disable","weight":0.5,"headline":"disable disabled true","preContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"],"postContext":["class StubLevel {","  constructor() { this.ground = new Set(); this.clearedMasks = []; }","  key(x, y) { return `${x},${y}`; }","  hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"]},{"id":482,"file":"test\\gamegui.behavior.test.js","start":611,"end":647,"kind":"MethodDefinition","name":"TimerStub.isRunning","weight":0.5,"headline":"running return","preContext":["    this.running = true;","    this.speedFactor = 1;","    this.eachGameSecond = { on() {}, off() {} };","  }"],"postContext":["toggle() { this.running = !this.running; }"]},{"id":483,"file":"test\\minimap.extra.test.js","start":1601,"end":1799,"kind":"FunctionDeclaration","name":"makeStage","weight":0.5,"headline":"display level return world size function make","preContext":["    objects: [],","    getGroundMaskLayer() { return mask; }","  };","}"],"postContext":[]},{"id":484,"file":"js\\FileContainer.js","start":956,"end":1171,"kind":"MethodDefinition","name":"FileContainer.getPart","weight":1.2,"headline":"get part parts log return length new","preContext":["count() {","    return this.#parts.length;","  }"],"postContext":["read(fileReader) {","    Lemmings.withPerformance(","      'FileContainer.read',","      {"]},{"id":485,"file":"js\\GameTimer.js","start":1740,"end":1783,"kind":"MethodDefinition","name":"GameTimer.tickIndex","weight":1.2,"headline":"tick get return","preContext":["isRunning() { return this.#running; }"],"postContext":["set tickIndex(v) {","    if (v >= Lemmings.COUNTER_LIMIT) {","      console.warn('tickIndex wrapped, resetting to 0');","      this.#tickIndex = 0;"]},{"id":486,"file":"js\\FileProvider.js","start":960,"end":1559,"kind":"MethodDefinition","name":"FileProvider.loadBinary","weight":1.2,"headline":"ur promise opts binary force reload cache","preContext":["clearCache() {","    this._cache.clear();","  }"],"postContext":["loadString(url, opts = {}) {","    if (!opts.forceReload && this._cache.has(url)) {","      return this._cache.get(url);","    }"]},{"id":487,"file":"js\\CommandReleaseRateIncrease.js","start":350,"end":359,"kind":"MethodDefinition","name":"CommandReleaseRateIncrease.load","weight":1.2,"headline":"load","preContext":["    const gameVictoryCondition = game.getVictoryCondition();\r","    if (!gameVictoryCondition) return false;\r","    return gameVictoryCondition.changeReleaseRate(this.number);\r","  }"],"postContext":["save() { return []; }"]},{"id":488,"file":"js\\GameGui.js","start":2840,"end":3683,"kind":"MethodDefinition","name":"GameGui._applyReleaseRateAuto","weight":1.2,"headline":"release rate game ne delta victory condition","preContext":["setMiniMap(miniMap) {","    this.miniMap = miniMap;","    this.game?.lemmingManager?.setMiniMap?.(miniMap);","  }"],"postContext":["handleSkillMouseDown(e) {","    const panelIndex = Math.trunc(e.x / 16);","    if (panelIndex !== 11) {","      this.nukePrepared = false;"]},{"id":489,"file":"js\\CommandNuke.js","start":451,"end":460,"kind":"MethodDefinition","name":"CommandNuke.load","weight":1.2,"headline":"load","preContext":["    lemmingManager.doNukeAllLemmings();\r","    gameVictoryCondition.doNuke();\r","    return true;\r","  }"],"postContext":["save() { return []; }"]},{"id":490,"file":"js\\CommandReleaseRateDecrease.js","start":351,"end":360,"kind":"MethodDefinition","name":"CommandReleaseRateDecrease.load","weight":1.2,"headline":"load","preContext":["    const gameVictoryCondition = game.getVictoryCondition();\r","    if (!gameVictoryCondition) return false;\r","    return gameVictoryCondition.changeReleaseRate(-this.number);\r","  }"],"postContext":["save() { return []; }"]},{"id":491,"file":"test\\gameview.dispose.test.js","start":508,"end":543,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose called","preContext":["constructor() { this.disposeCalled = 0; }"],"postContext":["class StageMock {","  constructor() { this.disposeCalled = 0; }","  updateStageSize() {}","  dispose() { this.disposeCalled++; }"]},{"id":492,"file":"js\\ActionClimbSystem.js","start":429,"end":1101,"kind":"MethodDefinition","name":"ActionClimbSystem.process","weight":1.2,"headline":"le frame return lemmings lemming state look","preContext":["    }\r","    lem.canClimb = true;\r","    return true;\r","  }"],"postContext":[]},{"id":493,"file":"test\\filecontainer-errors.test.js","start":309,"end":319,"kind":"MethodDefinition","name":"MockLogHandler.debug","weight":0.5,"headline":"debug","preContext":["log(msg) { this.logged.push(msg); }"],"postContext":[]},{"id":494,"file":"test\\skillpanelsprites.test.js","start":447,"end":557,"kind":"ClassDeclaration","name":"FakeSprites","weight":0.5,"headline":"fake animation class sprites get return new","preContext":["getFrame() { return this.label; }"],"postContext":["getAnimation(type, right) {","    return new FakeAnimation(`anim-${type}-${right}`);","  }"]},{"id":495,"file":"test\\fileprovider.test.js","start":258,"end":299,"kind":"MethodDefinition","name":"MockLogHandler.log","weight":0.5,"headline":"msg log logged push","preContext":["constructor() {","    this.logged = [];","    this.debugged = [];","  }"],"postContext":["debug(msg) {","    this.debugged.push(msg);","  }"]},{"id":496,"file":"test\\loghandler.test.js","start":309,"end":319,"kind":"MethodDefinition","name":"RecordingHandler.debug","weight":0.5,"headline":"debug","preContext":["log() {}"],"postContext":["class Dummy extends Lemmings.BaseLogger {","  constructor() { super(); }","}"]},{"id":497,"file":"js\\ViewPoint.js","start":711,"end":880,"kind":"MethodDefinition","name":"ViewPoint.setY","weight":1.2,"headline":"bounds min max math set const else","preContext":["    } else {","      this.x = value;","    }","  }"],"postContext":["getSceneX(x) {","    return Math.trunc(x / this.scale) + Math.trunc(this.x);","  }"]},{"id":498,"file":"js\\VGASpecReader.js","start":1020,"end":1057,"kind":"MethodDefinition","name":"VGASpecReader.height","weight":1.2,"headline":"get return","preContext":["get width() { return this.#width; }"],"postContext":["get groundPalette() { return this.#groundPalette; }"]},{"id":499,"file":"js\\UserInputManager.js","start":387,"end":595,"kind":"MethodDefinition","name":"ZoomEventArgs.constructor","weight":1.2,"headline":"constructor delta zoom mouse super md null","preContext":["    this.deltaZoom = deltaZoom;","    this.mda = null;","  }","}"],"postContext":["class UserInputManager {","  constructor(listenElement) {","    this.mouseDownX = 0;","    this.mouseDownY = 0;"]},{"id":500,"file":"test\\groundrenderer.test.js","start":460,"end":699,"kind":"ClassDeclaration","name":"MockStage","weight":0.5,"headline":"class mock stage constructor display image return","preContext":["    this.width = width;","    this.height = height;","    this.data = new Uint8ClampedArray(width * height * 4);","  }"],"postContext":["constructor() { this.display = null; }"]},{"id":501,"file":"js\\UnpackFilePart.js","start":1334,"end":1373,"kind":"MethodDefinition","name":"UnpackFilePart.offset","weight":1.2,"headline":"offset set","preContext":["get offset() { return this.#offset; }"],"postContext":["get initialBufferLen() { return this.#initialBufferLen; }"]},{"id":502,"file":"js\\TriggerManager.js","start":2110,"end":2237,"kind":"MethodDefinition","name":"TriggerManager.addRange","weight":1.2,"headline":"arr add length range let debug frame","preContext":["    this._triggers.add(trigger);\r","    this.#insert(trigger);\r","    this._debugFrame = null;\r","  }"],"postContext":["removeByOwner (owner) {\r","    if (!this._triggers) return;\r","    for (const tr of this._triggers) {\r","      if (tr.owner === owner) this.#remove(tr);\r"]},{"id":503,"file":"js\\vendor\\hqx\\squooshhqx.js","start":691,"end":815,"kind":"FunctionDeclaration","name":"getArrayU32FromWasm0","weight":2,"headline":"pt get function return ui nt memory","preContext":["    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);","  }","  return cachedInt32Memory0;","}"],"postContext":["function resize(input_image, input_width, input_height, factor) {","  try {","    const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);","    const ptr0 = passArray32ToWasm0(input_image, wasm.__wbindgen_malloc);"]},{"id":504,"file":"test\\displayimage.test.js","start":268,"end":279,"kind":"MethodDefinition","name":"StubStage.redraw","weight":0.5,"headline":"redraw","preContext":["setGameViewPointPosition() {}"],"postContext":[]},{"id":505,"file":"test\\keyboardshortcuts.loop.test.js","start":910,"end":929,"kind":"MethodDefinition","name":"StageStub.clampViewPoint","weight":0.5,"headline":"clamp view point","preContext":["    this.gameImgProps.viewPoint.x = x;","    this.gameImgProps.viewPoint.y = y;","    this.gameImgProps.viewPoint.scale = s;","  }"],"postContext":["redraw() { this.redrawCount++; }"]},{"id":506,"file":"test\\gameview.sound.test.js","start":130,"end":146,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":507,"file":"test\\gameview.onGameEnd.test.js","start":262,"end":570,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"fade stage calls gu class mock constructor","preContext":["dispose() {}"],"postContext":["constructor() {","    this.fadeCalls = 0;","    this.guiImgProps = { x: 0, y: 0, viewPoint: { scale: 1 } };","    this.startFadeOut = () => { this.fadeCalls++; };"]},{"id":508,"file":"test\\gameview.loadReplay.test.js","start":227,"end":269,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"class game factory mock constructor","preContext":["dispose() {}"],"postContext":["constructor() {}"]},{"id":509,"file":"test\\gameview.loadlevel.test.js","start":289,"end":786,"kind":"ClassDeclaration","name":"StageStub","weight":0.5,"headline":"called display set game clear redraw screen","preContext":["dispose() {}"],"postContext":["constructor() {","    this.gameDisplay = {","      clearCalled: 0,","      redrawCalled: 0,"]},{"id":510,"file":"test\\gameview.loadlevel-missing.test.js","start":246,"end":743,"kind":"ClassDeclaration","name":"StageStub","weight":0.5,"headline":"called display set game clear redraw screen","preContext":["dispose() {}"],"postContext":["constructor() {","    this.gameDisplay = {","      clearCalled: 0,","      redrawCalled: 0,"]},{"id":511,"file":"test\\gameview.menu-selects.test.js","start":626,"end":687,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":["    appendChild(o) { this.options.push(o); },","    remove(i) { this.options.splice(i, 1); }","  };","}"],"postContext":["constructor() {}"]},{"id":512,"file":"test\\action-base-system.test.js","start":427,"end":533,"kind":"ClassDeclaration","name":"StubSprites","weight":0.5,"headline":"stub animation class sprites get return new","preContext":["getFrame(idx) { return `${this.label}-${idx}`; }"],"postContext":["getAnimation(type, right) { return new StubAnimation(`sprite-${type}-${right}`); }"]},{"id":513,"file":"js\\LogHandler.js","start":295,"end":394,"kind":"MethodDefinition","name":"Logger.info","weight":1.2,"headline":"info msg enabled console module","preContext":["_enabled() {","    return typeof lemmings !== 'undefined' &&","            lemmings.game && lemmings.game.showDebug === true;","  }"],"postContext":["warn(msg) {","    if (this._enabled()) {","      console.warn(`${this._moduleName}\\t${msg}`);","    }"]},{"id":514,"file":"test\\unpackfilepart.test.js","start":391,"end":426,"kind":"MethodDefinition","name":"MockLogHandler.log","weight":0.5,"headline":"msg log logged push","preContext":["constructor() { this.logged = []; this.debugged = []; }"],"postContext":["debug(msg) { this.debugged.push(msg); }"]},{"id":515,"file":"test\\userinput.events.test.js","start":363,"end":464,"kind":"MethodDefinition","name":"StubElement.getBoundingClientRect","weight":0.5,"headline":"get bounding client rect return","preContext":["    super();","    this.width = width;","    this.height = height;","  }"],"postContext":["function mouseEvent(type, opts = {}) {","  const e = new Event(type);","  Object.assign(e, opts);","  return e;"]},{"id":516,"file":"js\\CommandManager.js","start":841,"end":968,"kind":"MethodDefinition","name":"CommandManager.setGame","weight":1.2,"headline":"game set null return run commands logged","preContext":["      this.queueCommand(command);","    };","    this.gameTimer.onBeforeGameTick.on(this._tickListener);","  }"],"postContext":["loadReplay(replayString) {","    let parts = replayString.split('&');","    for (let i = 0; i < parts.length; i++) {","      let commandStr = parts[i].split('=', 2);"]},{"id":517,"file":"js\\ColorPalette.js","start":221,"end":292,"kind":"MethodDefinition","name":"ColorPalette.setColorInt","weight":1.2,"headline":"color set int","preContext":["constructor() {","    this.data = new Uint32Array(16); //- 16 colors","    this.data.fill(0);","  }"],"postContext":["getColor(index) {","    return this.data[index];","  }"]},{"id":518,"file":"js\\GameFactory.js","start":754,"end":829,"kind":"MethodDefinition","name":"GameFactory.getConfig","weight":1.2,"headline":"conf get game return reader","preContext":["        .then((res) => resolve(new Lemmings.Game(res)))","        .catch(reject);","    });","  }"],"postContext":["getGameResources(gameType) {","    return new Promise((resolve, reject) => {","      this.configReader.getConfig(gameType).then((config) => {","        if (config == null) {"]},{"id":519,"file":"js\\EventHandler.js","start":344,"end":400,"kind":"MethodDefinition","name":"EventHandler.off","weight":1.2,"headline":"handler handlers delete","preContext":["    if (typeof handler === 'function' && !this.handlers.has(handler)) {\r","      this.handlers.add(handler);\r","    }\r","  }"],"postContext":["dispose () {\r","    this.handlers.clear();\r","  }"]},{"id":520,"file":"js\\SolidLayer.js","start":78,"end":4383,"kind":"ClassDeclaration","name":"SolidLayer","weight":1.5,"headline":"mask param ground clear number const solid","preContext":[],"postContext":["constructor(width, height, mask = null) {","    super();","    this.width = width;","    this.height = height;"]},{"id":521,"file":"js\\ActionBashSystem.js","start":109,"end":1917,"kind":"ClassDeclaration","name":"ActionBashSystem","weight":1.5,"headline":"mask le ground state return lemmings look","preContext":[],"postContext":["constructor(sprites, masks) {","    super({","      sprites,","      spriteType: Lemmings.SpriteTypes.BASHING,"]},{"id":522,"file":"js\\GameDisplay.js","start":52,"end":4264,"kind":"ClassDeclaration","name":"GameDisplay","weight":1.5,"headline":"display lemming mouse manager null game handler","preContext":[],"postContext":["constructor(game, level, lemmingManager, objectManager, triggerManager) {","    this.game = game;","    this.level = level;","    this.lemmingManager = lemmingManager;"]},{"id":523,"file":"js\\ActionWalkSystem.js","start":110,"end":2014,"kind":"ClassDeclaration","name":"ActionWalkSystem","weight":1.5,"headline":"le return ground slice lemmings const delta","preContext":[],"postContext":["constructor(sprites) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.WALKING, actionName: 'walk' });","  }"]},{"id":524,"file":"js\\MiniMap.js","start":54,"end":10643,"kind":"ClassDeclaration","name":"MiniMap","weight":1.5,"headline":"display scale level dead new gu terrain","preContext":[],"postContext":["constructor(gameDisplay, level, guiDisplay) {","    this.gameDisplay = gameDisplay;","    this.level = level;","    this.guiDisplay = guiDisplay;"]},{"id":525,"file":"test\\gameview.helperExtras.test.js","start":442,"end":516,"kind":"FunctionDeclaration","name":"cleanupEnv","weight":0.5,"headline":"delete global function cleanup env window history","preContext":["  global.window = { location: { search: '' }, setTimeout, clearTimeout, addEventListener() {}, removeEventListener() {} };","  global.history = { replaceState() {} };","  Lemmings.GameFactory = GameFactoryStub;","}"],"postContext":[]},{"id":526,"file":"js\\packMechanics.js","start":0,"end":687,"kind":"Module","name":"root","weight":1.2,"headline":"classic builder true bomber assist false lemmings","preContext":[],"postContext":[]},{"id":527,"file":"js\\GroundReader.js","start":166,"end":657,"kind":"FunctionDeclaration","name":"loadSteelSprites","weight":2,"headline":"steel sprites ur const await js import","preContext":[],"postContext":["class GroundReader extends Lemmings.BaseLogger {","  /**","   * @param {Lemmings.FileReader} groundFile  – GROUNDxO.DAT (1056 bytes)","   * @param {Lemmings.FileReader} vgaTerrain  – slice of VGAGx.DAT (terrain)"]},{"id":528,"file":"js\\CommandSelectSkill.js","start":78,"end":1015,"kind":"ClassDeclaration","name":"CommandSelectSkill","weight":1.5,"headline":"skill game apply skills lemming const get","preContext":[],"postContext":["constructor(skill = Lemmings.SkillTypes.UNKNOWN, apply = true) {","    super();","    this.skill = skill;","    this.apply = apply;"]},{"id":529,"file":"js\\Frame.js","start":449,"end":4143,"kind":"ClassDeclaration","name":"Frame","weight":1.5,"headline":"color const mask set offset palette return","preContext":[],"postContext":["constructor (width, height, offsetX = 0, offsetY = 0) {","    this.width   = width   | 0;","    this.height  = height  | 0;","    this.offsetX = offsetX | 0;"]},{"id":530,"file":"test\\gameview.enableDebug.test.js","start":181,"end":237,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game class factory mock async get return","preContext":["dispose() {}"],"postContext":["async getGame() { return {}; }"]},{"id":531,"file":"js\\MaskList.js","start":375,"end":620,"kind":"MethodDefinition","name":"MaskList.loadFromFile","weight":1.2,"headline":"offset mask fr frames load length let","preContext":["GetMask(index) {\r","    return this.frames[index];\r","  }"],"postContext":[]},{"id":532,"file":"js\\Mask.js","start":889,"end":1387,"kind":"MethodDefinition","name":"Mask.loadFromFile","weight":1.2,"headline":"bit pix bu let fr const load","preContext":["at(x, y) {\r","    if (!this.data || x < 0 || x >= this.width || y < 0 || y >= this.height) return false;\r","    return this.data[y * this.width + x] === 0;\r","  }"],"postContext":[]},{"id":533,"file":"js\\Stage.js","start":1986,"end":2269,"kind":"MethodDefinition","name":"Stage.calcPosition2D","weight":1.2,"headline":"stage image const local world position view","preContext":["      0","    );","    this.cursorCanvas = c;","  }"],"postContext":["handleOnDoubleClick() {","    this.controller.onDoubleClick.on((e) => {","      const stageImage = this.getStageImageAt(e.x, e.y);","      if (!stageImage || !stageImage.display) return;"]},{"id":534,"file":"js\\SkillPanelSprites.js","start":2137,"end":2214,"kind":"MethodDefinition","name":"SkillPanelSprites.getNumberSpriteLeft","weight":1.2,"headline":"number sprite get return","preContext":["getLetterSprite(letter) {\r","    return this.letterSprite[letter.toUpperCase()];\r","  }"],"postContext":["getNumberSpriteRight(number) {\r","    return this.numberSpriteRight[number];\r","  }"]},{"id":535,"file":"js\\PaletteImage.js","start":573,"end":1096,"kind":"MethodDefinition","name":"PaletteImage.processImage","weight":1.2,"headline":"bit bu pix plane sr pos let","preContext":["    const frame = new Lemmings.Frame(this.width, this.height, offsetX, offsetY);\r","    if (palette) frame.drawPaletteImage(this.pixBuf, this.width, this.height, palette, 0, 0);\r","    return frame;\r","  }"],"postContext":["processTransparentByColorIndex(transIdx) {\r","    const buf = this.pixBuf;\r","    for (let i = 0, n = buf.length; i < n; i++) if (buf[i] === transIdx) buf[i] |= 0x80;\r","  }"]},{"id":536,"file":"js\\ParticleTable.js","start":1240,"end":1289,"kind":"MethodDefinition","name":"ParticleTable.particleData","weight":1.2,"headline":"particle get return","preContext":["get colorIndexTable() { return this.#colorIndexTable.slice(); }"],"postContext":["draw(gameDisplay, frameIndex, x, y) {","    const frameData = this.#particleData[frameIndex];","    if (!frameData || !gameDisplay) return;","    const table = this.#colorIndexTable;"]},{"id":537,"file":"js\\StageImageProperties.js","start":509,"end":807,"kind":"MethodDefinition","name":"StageImageProperties.createImage","weight":1.2,"headline":"cav create true image ct document element","preContext":["set canvasViewportSize({ width, height }) {","    this.width = width;","    this.height = height;","  }"],"postContext":[]},{"id":538,"file":"js\\Trigger.js","start":807,"end":1260,"kind":"MethodDefinition","name":"Trigger.trigger","weight":1.2,"headline":"tick trigger return disabled owner lemmings types","preContext":["    } else {\r","      this.#disabledUntilTick = v;\r","    }\r","  }"],"postContext":["draw(gameDisplay) {\r","\r","    if (this.type == 7 || this.type == 8) {\r","      return; // don't render arrow triggers to debug display, that is handled in level\r"]},{"id":539,"file":"js\\ActionBaseSystem.js","start":2395,"end":2667,"kind":"MethodDefinition","name":"ActionBaseSystem.draw","weight":1.2,"headline":"le frame sprites const get draw game","preContext":["triggerLemAction(lem) {\r","    lem.setAction(this);\r","    return true;\r","  }"],"postContext":[]},{"id":540,"file":"test\\lemming.transitions.test.js","start":346,"end":381,"kind":"MethodDefinition","name":"SeqAction.triggerLemAction","weight":0.5,"headline":"trigger le action return true","preContext":["getActionName() { return this.name; }"],"postContext":["process(level, lem) { lem.frameIndex++; if (this.name === 'explode') lem.disable(); return this.next; }"]},{"id":541,"file":"test\\lemmingmanager.test.js","start":956,"end":1015,"kind":"MethodDefinition","name":"DummyAction.triggerLemAction","weight":0.5,"headline":"le action trigger set return true","preContext":["getActionName() { return this.name; }"],"postContext":["process() { return Lemmings.LemmingStateType.NO_STATE_TYPE; }"]},{"id":542,"file":"js\\ActionFryingSystem.js","start":432,"end":930,"kind":"MethodDefinition","name":"ActionFryingSystem.process","weight":1.2,"headline":"le look frame lemmings lemming level return","preContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"],"postContext":[]},{"id":543,"file":"js\\ActionHoistSystem.js","start":449,"end":1128,"kind":"MethodDefinition","name":"ActionHoistSystem.process","weight":1.2,"headline":"le frame level return lemmings lemming state","preContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"],"postContext":[]},{"id":544,"file":"js\\ActionOhNoSystem.js","start":543,"end":880,"kind":"MethodDefinition","name":"ActionOhNoSystem.process","weight":1.2,"headline":"le level return lemmings lemming state process","preContext":["    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r","    }\r","  }"],"postContext":[]},{"id":545,"file":"js\\ActionJumpSystem.js","start":409,"end":1049,"kind":"MethodDefinition","name":"ActionJumpSystem.process","weight":1.2,"headline":"le state lemmings lemming level moved far","preContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"],"postContext":[]},{"id":546,"file":"js\\ActionShrugSystem.js","start":417,"end":607,"kind":"MethodDefinition","name":"ActionShrugSystem.process","weight":1.2,"headline":"le frame return lemmings lemming state process","preContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"],"postContext":[]},{"id":547,"file":"js\\Animation.js","start":2648,"end":3188,"kind":"MethodDefinition","name":"Animation.loadFromFile","weight":1.2,"headline":"palette frame frames offset im fr bits","preContext":["      }","    }","    return this.frames[idx];","  }"],"postContext":["loadFromFileWithPaletteSwap (fr, bitsPerPixel, width, height, frames, palette,","    offsetX = null, offsetY = null) {","    const newPal = new Lemmings.ColorPalette();","    // Copy existing palette colours"]},{"id":548,"file":"js\\ActionSplatterSystem.js","start":549,"end":728,"kind":"MethodDefinition","name":"ActionSplatterSystem.process","weight":1.2,"headline":"le return lemmings lemming state process level","preContext":["    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r","    }\r","  }"],"postContext":[]},{"id":549,"file":"js\\BitReader.js","start":3468,"end":3533,"kind":"MethodDefinition","name":"BitReader.eof","weight":1.2,"headline":"eof return pos","preContext":["    this.#checksum = checksum;\r","\r","    return result;\r","  }"],"postContext":[]},{"id":550,"file":"js\\CommandLemmingsAction.js","start":768,"end":827,"kind":"MethodDefinition","name":"CommandLemmingsAction.save","weight":1.2,"headline":"save return lemming skill","preContext":["load(values) {\r","    this.lemmingId = values[0];\r","  }"],"postContext":["getCommandKey() {\r","    return 'l';\r","  }"]},{"id":551,"file":"js\\BitWriter.js","start":1472,"end":1523,"kind":"MethodDefinition","name":"BitWriter.bitReader","weight":1.2,"headline":"bit reader get return","preContext":["get outPos() {\r","    return this.#outPos;\r","  }"],"postContext":["copyRawData(length) {\r","    let outPos = this.#outPos;\r","    const outData = this.#outData;\r","    const reader = this.#bitReader;\r"]},{"id":552,"file":"js\\Game.js","start":1317,"end":2112,"kind":"MethodDefinition","name":"Game._disposeCurrentLevel","weight":1.2,"headline":"dispose manager game null timer command lemming","preContext":["    if (this.gameGui) {","      this.gameGui.setGuiDisplay(display);","    }","  }"],"postContext":["async loadLevel (levelGroupIndex, levelIndex) {","    this._disposeCurrentLevel();","","    // Record indices for HUD etc."]},{"id":553,"file":"js\\ActionFloatingSystem.js","start":615,"end":810,"kind":"MethodDefinition","name":"ActionFloatingSystem.draw","weight":1.2,"headline":"le frame get draw game display const","preContext":["    }\r","    lem.hasParachute = true;\r","    return true;\r","  }"],"postContext":["process(level, lem) {\r","    lem.frameIndex++;\r","    if (lem.frameIndex >= FLOAT_FRAME.length) {\r","      /// first 8 are the opening of the umbrella\r"]},{"id":554,"file":"js\\BinaryReader.js","start":4226,"end":4281,"kind":"MethodDefinition","name":"BinaryReader.hiddenOffset","weight":1.2,"headline":"hidden offset get return","preContext":["get data() {","    return this.#data;","  }"],"postContext":["get length() {","    return this.#length;","  }"]},{"id":555,"file":"js\\ActionFallSystem.js","start":347,"end":945,"kind":"MethodDefinition","name":"ActionFallSystem.process","weight":1.2,"headline":"le state lemmings lemming return level process","preContext":["draw(gameDisplay, lem) {","    super.draw(gameDisplay, lem);","  }"],"postContext":[]},{"id":556,"file":"js\\ActionExitingSystem.js","start":438,"end":502,"kind":"MethodDefinition","name":"ActionExitingSystem.draw","weight":1.2,"headline":"draw game display le super","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.disable();\r","    lem.frameIndex++;\r","    if (lem.frameIndex >= 8) {\r"]},{"id":557,"file":"js\\ActionDrowningSystem.js","start":364,"end":536,"kind":"MethodDefinition","name":"ActionDrowningSystem.draw","weight":1.2,"headline":"le game draw display super frame lemmings","preContext":["triggerLemAction(lem) {\r","    return false;\r","  }"],"postContext":["process(level, lem) {\r","    lem.disable();\r","    lem.frameIndex++;\r","    if (lem.frameIndex >= 16) {\r"]},{"id":558,"file":"js\\ActionDiggSystem.js","start":1073,"end":1323,"kind":"MethodDefinition","name":"ActionDiggSystem.digRow","weight":1.2,"headline":"level le remove let ground dig clear","preContext":["      }\r","    }\r","    return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","  }"],"postContext":[]},{"id":559,"file":"js\\ActionCountdownSystem.js","start":511,"end":768,"kind":"MethodDefinition","name":"ActionCountdownSystem.draw","weight":1.2,"headline":"le get number draw game display let","preContext":["triggerLemAction(lem) {\r","    return lem.setCountDown(this);\r","  }"],"postContext":["process(level, lem) {\r","    if (lem.countdown <= 0) {\r","      return Lemmings.LemmingStateType.NO_STATE_TYPE;\r","    }\r"]},{"id":560,"file":"js\\LevelLoader.js","start":52,"end":4851,"kind":"ClassDeclaration","name":"LevelLoader","weight":1.5,"headline":"level reader const ground conf odd bu","preContext":[],"postContext":["constructor(fileProvider, config) {","    this.fileProvider = fileProvider;","    this.config = config;","    this.levelIndexResolve = new Lemmings.LevelIndexResolve(config);"]},{"id":561,"file":"js\\FileProvider.js","start":1644,"end":2169,"kind":"MethodDefinition","name":"FileProvider.loadString","weight":1.2,"headline":"ur promise opts force reload cache cached","preContext":["      this._cache.set(url, promise);","    }","    return promise;","  }"],"postContext":["_buildUrl(path, filename) {","    return (","      this.rootPath +","      path +"]},{"id":562,"file":"js\\GameTimer.js","start":1786,"end":1977,"kind":"MethodDefinition","name":"GameTimer.tickIndex","weight":1.2,"headline":"tick set lemmings console warn wrapped resetting","preContext":["get tickIndex() { return this.#tickIndex; }"],"postContext":["get speedFactor() { return this.#speedFactor; }"]},{"id":563,"file":"js\\FileContainer.js","start":1350,"end":2720,"kind":"MethodDefinition","name":"FileContainer.read","weight":1.2,"headline":"reader part read size parts pos length","preContext":["      return new Lemmings.BinaryReader();","    }","    return this.#parts[index].unpack();","  }"],"postContext":["get parts() {","    return this.#parts.slice();","  }"]},{"id":564,"file":"test\\configreader.test.js","start":0,"end":1974,"kind":"Module","name":"root","weight":0.5,"headline":"js conf level lemmings mechanics const game","preContext":[],"postContext":[]},{"id":565,"file":"test\\game.queuecommand.test.js","start":0,"end":590,"kind":"Module","name":"root","weight":0.5,"headline":"game js command cmd import manager lemmings","preContext":[],"postContext":[]},{"id":566,"file":"test\\groundreader.test.js","start":0,"end":2315,"kind":"Module","name":"root","weight":0.5,"headline":"bu js import reader const palette ground","preContext":[],"postContext":[]},{"id":567,"file":"test\\commandselectskill.test.js","start":0,"end":1604,"kind":"Module","name":"root","weight":0.5,"headline":"skill return game lemming const js lemmings","preContext":[],"postContext":[]},{"id":568,"file":"test\\gametimer.test.js","start":0,"end":6292,"kind":"Module","name":"root","weight":0.5,"headline":"timer expect ra clock equal tick game","preContext":[],"postContext":[]},{"id":569,"file":"test\\gameview.start-existing.test.js","start":165,"end":226,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":570,"file":"test\\gameview.suspendWithColor.test.js","start":166,"end":227,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":571,"file":"test\\gameresult.test.js","start":0,"end":877,"kind":"Module","name":"root","weight":0.5,"headline":"game result return get expect state equal","preContext":[],"postContext":[]},{"id":572,"file":"test\\getNearestLemming.test.js","start":825,"end":987,"kind":"ClassDeclaration","name":"DummyAction","weight":0.5,"headline":"action return dummy class get trigger le","preContext":[],"postContext":["getActionName() { return 'dummy'; }"]},{"id":573,"file":"test\\exportScripts.test.js","start":271,"end":2008,"kind":"FunctionDeclaration","name":"setupStubs","weight":0.5,"headline":"sprite lemmings new frame get return palette","preContext":[],"postContext":["function createPack() {","  const dir = fs.mkdtempSync(path.join(os.tmpdir(), 'pack-'));","  fs.writeFileSync(path.join(dir, 'MAIN.DAT'), Buffer.from([0]));","  fs.writeFileSync(path.join(dir, 'GROUND0O.DAT'), Buffer.from([0]));"]},{"id":574,"file":"test\\gameskills.test.js","start":234,"end":756,"kind":"FunctionDeclaration","name":"createGameSkills","weight":0.5,"headline":"gs skills lemmings skill const level new","preContext":[],"postContext":[]},{"id":575,"file":"test\\gameview.controls.test.js","start":119,"end":180,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":[],"postContext":["constructor() {}"]},{"id":576,"file":"test\\gamedisplay.test.js","start":364,"end":653,"kind":"ClassDeclaration","name":"MockStage","weight":0.5,"headline":"class mock stage constructor display image return","preContext":[],"postContext":["constructor() {","    this.display = null;","  }"]},{"id":577,"file":"test\\gamegui.behavior.test.js","start":650,"end":692,"kind":"MethodDefinition","name":"TimerStub.toggle","weight":0.5,"headline":"running toggle","preContext":["isRunning() { return this.running; }"],"postContext":["getGameTime() { return 0; }"]},{"id":578,"file":"test\\action-drown-explode.test.js","start":657,"end":936,"kind":"ClassDeclaration","name":"StubLevel","weight":0.5,"headline":"return mask class stub level constructor ground","preContext":["disable() { this.disabled = true; }"],"postContext":["constructor() { this.ground = new Set(); this.clearedMasks = []; }"]},{"id":579,"file":"test\\action-mine-system.test.js","start":513,"end":685,"kind":"ClassDeclaration","name":"StubLemming","weight":0.5,"headline":"class stub lemming constructor look true frame","preContext":["    ['left', { GetMask() { return new DummyMask(); } }],","    ['right', { GetMask() { return new DummyMask(); } }]","  ]);","}"],"postContext":["constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; }"]},{"id":580,"file":"test\\action-systems-extra.test.js","start":633,"end":741,"kind":"MethodDefinition","name":"StubLemming.constructor","weight":0.5,"headline":"constructor look true frame disabled false","preContext":["  constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; this.disabled = false; }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","  disable() { this.disabled = true; }","}"],"postContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"]},{"id":581,"file":"test\\action-systems.test.js","start":2189,"end":2310,"kind":"MethodDefinition","name":"StubLemming.setCountDown","weight":0.5,"headline":"countdown act return set action false true","preContext":["disable() { this.disabled = true; }"],"postContext":["getCountDownTime() { return 8 - (this.countdown >> 4); }"]},{"id":582,"file":"test\\bench-entrance-placement.test.js","start":542,"end":734,"kind":"ClassDeclaration","name":"StageStub","weight":0.5,"headline":"stage get display return fade class stub","preContext":["get configReader() { return { configs: Promise.resolve([]) }; }"],"postContext":["constructor() {}"]},{"id":583,"file":"test\\bench-sequence.test.js","start":296,"end":368,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor gu im props view point scale","preContext":["  resetFade() {}","  startFadeOut() {}","  startOverlayFade() {}","}"],"postContext":["getGameDisplay() { return { clear() {}, setScreenPosition() {}, redraw() {} }; }"]},{"id":584,"file":"test\\bench-start.test.js","start":608,"end":665,"kind":"ClassDeclaration","name":"LMStub","weight":0.5,"headline":"class stub constructor spawn","preContext":["render() {}"],"postContext":["constructor() { this.spawnCount = 0; }"]},{"id":585,"file":"test\\bench-tps.test.js","start":856,"end":889,"kind":"MethodDefinition","name":"DisplayImageStub.getWidth","weight":0.5,"headline":"get return","preContext":["setBackground(bg) { this.background = bg; }"],"postContext":["getHeight() { return this.height; }"]},{"id":586,"file":"test\\displayimage.primitives.test.js","start":336,"end":347,"kind":"MethodDefinition","name":"StubStage.redraw","weight":0.5,"headline":"redraw","preContext":["setGameViewPointPosition() {}"],"postContext":[]},{"id":587,"file":"js\\GroundRenderer.js","start":624,"end":2026,"kind":"MethodDefinition","name":"GroundRenderer._blit","weight":1.2,"headline":"const im sr des overwrite cf let","preContext":["      const tObj = terrains[i];\r","      this._blit(terrainImages[tObj.id], tObj);\r","    }\r","  }"],"postContext":[]},{"id":588,"file":"js\\GameView.js","start":3297,"end":3789,"kind":"MethodDefinition","name":"GameView.onGameEnd","weight":1.2,"headline":"game state move result level lemmings types","preContext":["    } catch (e) {","      this.log.log('Error starting game:', e);","    }","  }"],"postContext":["async loadReplay(replayString) {","    await this.start(replayString);","  }"]},{"id":589,"file":"js\\Lemming.js","start":622,"end":716,"kind":"MethodDefinition","name":"Lemming.setAction","weight":1.2,"headline":"action set frame state","preContext":["getCountDownTime() {","    return (8 - (this.countdown >> 4));","  }"],"postContext":["setCountDown(action) {","    this.countdownAction = action;","    if (this.countdown > 0) return false;","    this.countdown = 80;"]},{"id":590,"file":"js\\GameVictoryCondition.js","start":506,"end":886,"kind":"MethodDefinition","name":"GameVictoryCondition.changeReleaseRate","weight":1.2,"headline":"release rate return new false let old","preContext":["getReleaseCount() {","    return this.releaseCount;","  }"],"postContext":["boundToRange(min, value, max) {","    return Math.min(max, Math.max(min, value | 0)) | 0;","  }"]},{"id":591,"file":"js\\LemmingsSprite.js","start":4504,"end":5415,"kind":"MethodDefinition","name":"LemmingsSprite.registerAnimation","weight":1.2,"headline":"state animation cache dir offset palette per","preContext":["#typeToIndex(state, right) {\r","    return state * 2 + (right ? 0 : 1);\r","  }"],"postContext":["get colorPalette() { return this.#colorPalette; }"]},{"id":592,"file":"js\\LevelReader.js","start":2673,"end":3410,"kind":"MethodDefinition","name":"LevelReader.readLevelTerrain","weight":1.2,"headline":"new const ob flags fr read level","preContext":["        continue;\r","      this.objects.push(newOb);\r","    }\r","  }"],"postContext":["readSteelArea(fr, isLemEdit = false) {\r","    const X_OFFSET = isLemEdit ? 12 : 16;   // originals use −16, LemEdit uses −12\r","    /// reset array\r","    this.steel = [];\r"]},{"id":593,"file":"js\\xbrz\\xbrz.js","start":435,"end":480,"kind":"MethodDefinition","name":"IntPtr.set","weight":1.2,"headline":"set arr pt","preContext":["get () {","    return this.arr[this.ptr];","  }"],"postContext":["class BlendResult {","  constructor () {","    this.f = 0;","    this.g = 0;"]},{"id":594,"file":"test\\gamegui.test.js","start":879,"end":912,"kind":"MethodDefinition","name":"DisplayImageStub.getWidth","weight":0.5,"headline":"get return","preContext":["setBackground(bg) { this.background = bg; }"],"postContext":["getHeight() { return this.height; }"]},{"id":595,"file":"index.html","start":0,"end":800,"kind":"Blob","name":"blob","weight":1,"headline":"meta icon content apple ng lemmings mobile","preContext":[],"postContext":["ef=\"img/touch-icon-152.png\" />","  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"img/touch-icon-180.png\" />","  <link rel=\"manifest\" href=\"site.webmanifest\" />","  <link type=\"text/css\" rel=\"stylesheet\" href=\"css/game.css\">"]},{"id":596,"file":"js\\DisplayImage.js","start":332,"end":825,"kind":"ArrowFunction","name":"cyrb53","weight":1.2,"headline":"math imu ch str seed let cy","preContext":[],"postContext":["class DisplayImage extends Lemmings.BaseLogger {","  constructor(stage) {","    super();","    this.stage = stage;"]},{"id":597,"file":"test\\gameview.canvas-reset.test.js","start":494,"end":618,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"dispose stage called class mock constructor update","preContext":["dispose() {}"],"postContext":["constructor() { this.disposeCalled = 0; }"]},{"id":598,"file":"js\\GameSkills.js","start":52,"end":2086,"kind":"ClassDeclaration","name":"GameSkills","weight":1.5,"headline":"skill return skills selected lemmings types true","preContext":[],"postContext":["constructor(level) {","    this.selectedSkill = Lemmings.SkillTypes.CLIMBER;","    this.onCountChanged = new Lemmings.EventHandler();","    this.onSelectionChanged = new Lemmings.EventHandler();"]},{"id":599,"file":"js\\KeyboardShortcuts.js","start":52,"end":11968,"kind":"ClassDeclaration","name":"KeyboardShortcuts","weight":1.5,"headline":"game pan case const view key shift","preContext":[],"postContext":["constructor(view) {","    this.view = view;","    this._down = this._onKeyDown.bind(this);","    this._up = this._onKeyUp.bind(this);"]},{"id":600,"file":"js\\ActionExplodingSystem.js","start":110,"end":1573,"kind":"ClassDeclaration","name":"ActionExplodingSystem","weight":1.5,"headline":"le mask frame manager lemmings trigger game","preContext":[],"postContext":["constructor(sprites, masks, triggerManager, particleTable) {","    super({","      sprites,","      spriteType: Lemmings.SpriteTypes.EXPLODING,"]},{"id":601,"file":"js\\GameConfig.js","start":52,"end":393,"kind":"ClassDeclaration","name":"GameConfig","weight":1.5,"headline":"game lemmings conf class constructor level mechanics","preContext":[],"postContext":["constructor() {","    /** Name of the Lemmings Game */","    this.name = '';","    /** Path/Url to the resources */"]},{"id":602,"file":"js\\ColorPalette.js","start":345,"end":395,"kind":"MethodDefinition","name":"ColorPalette.getColor","weight":1.2,"headline":"get color return","preContext":["setColorInt(index, colorValue) {","    this.data[index] = colorValue;","  }"],"postContext":["getR(index) {","    return this.data[index] & 0xFF;","  }"]},{"id":603,"file":"test\\levelloader.test.js","start":0,"end":4829,"kind":"Module","name":"root","weight":0.5,"headline":"level lemmings reader new const ground fake","preContext":[],"postContext":[]},{"id":604,"file":"js\\CommandManager.js","start":972,"end":1296,"kind":"MethodDefinition","name":"CommandManager.loadReplay","weight":1.2,"headline":"command let str replay parts string split","preContext":["    this.game = game;","    this.runCommands = {};","    this.loggedCommads = {};","  }"],"postContext":["commandFactory(type) {","    switch (type.toLowerCase()) {","    case 'l': return new Lemmings.CommandLemmingsAction();","    case 'n': return new Lemmings.CommandNuke();"]},{"id":605,"file":"test\\listSprites.test.js","start":0,"end":1258,"kind":"Module","name":"root","weight":0.5,"headline":"import fs sync const pack js dir","preContext":[],"postContext":[]},{"id":606,"file":"test\\rectangle.test.js","start":0,"end":441,"kind":"Module","name":"root","weight":0.5,"headline":"expect rect lemmings js rectangle equal import","preContext":[],"postContext":[]},{"id":607,"file":"test\\solidlayer.test.js","start":0,"end":3563,"kind":"Module","name":"root","weight":0.5,"headline":"layer ground expect equal mask new false","preContext":[],"postContext":[]},{"id":608,"file":"test\\userinput.events.test.js","start":468,"end":575,"kind":"FunctionDeclaration","name":"mouseEvent","weight":0.5,"headline":"event opts function mouse const new assign","preContext":["getBoundingClientRect() {","    return { left: 0, top: 0, width: this.width, height: this.height };","  }"],"postContext":["function touchEvent(type, touches = [], changed = null) {","  const mk = (arr) => arr.map(([x, y]) => ({ clientX: x, clientY: y }));","  const e = new Event(type);","  e.touches = mk(touches);"]},{"id":609,"file":"test\\range.test.js","start":0,"end":438,"kind":"Module","name":"root","weight":0.5,"headline":"expect equal lemmings js range import function","preContext":[],"postContext":[]},{"id":610,"file":"test\\listSprites.stdout.test.js","start":0,"end":1116,"kind":"Module","name":"root","weight":0.5,"headline":"import fs sync js const pack dir","preContext":[],"postContext":[]},{"id":611,"file":"test\\vgaspecreader.test.js","start":0,"end":1773,"kind":"Module","name":"root","weight":0.5,"headline":"js reader part import const palette expect","preContext":[],"postContext":[]},{"id":612,"file":"test\\stage.updateviewpoint.test.js","start":326,"end":624,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":613,"file":"test\\stageimageprops.test.js","start":186,"end":697,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"opts return create doc ct image const","preContext":[],"postContext":[]},{"id":614,"file":"test\\stage.updateStageSize.test.js","start":326,"end":624,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":615,"file":"test\\unpackfilepart.test.js","start":429,"end":468,"kind":"MethodDefinition","name":"MockLogHandler.debug","weight":0.5,"headline":"msg debug debugged push","preContext":["log(msg) { this.logged.push(msg); }"],"postContext":[]},{"id":616,"file":"test\\stage.test.js","start":405,"end":703,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":617,"file":"test\\stage.overlayfade.test.js","start":373,"end":671,"kind":"FunctionDeclaration","name":"createStubCanvas","weight":0.5,"headline":"canvas ct image return event listener function","preContext":[],"postContext":["function createDocumentStub() {","  return {","    createElement() {","      const ctx = {"]},{"id":618,"file":"test\\minimap.test.js","start":163,"end":704,"kind":"FunctionDeclaration","name":"createDisplay","weight":0.5,"headline":"frame return draw mouse new lemmings event","preContext":[],"postContext":["function createLevel(width, height) {","  const mask = {","    width,","    height,"]},{"id":619,"file":"js\\LogHandler.js","start":421,"end":520,"kind":"MethodDefinition","name":"Logger.warn","weight":1.2,"headline":"warn msg enabled console module","preContext":["    if (this._enabled()) {","      console.info(`${this._moduleName}\\t${msg}`);","    }","  }"],"postContext":["error(msg, exception) {","    if (this._enabled()) {","      console.error(`${this._moduleName}\\t${msg}`);","      if (exception) {"]},{"id":620,"file":"test\\action-base-system.test.js","start":449,"end":531,"kind":"MethodDefinition","name":"StubSprites.getAnimation","weight":0.5,"headline":"animation get return new stub sprite","preContext":["class StubSprites {","  getAnimation(type, right) { return new StubAnimation(`sprite-${type}-${right}`); }","}"],"postContext":["class StubMasks {","  GetMask(type) { return `mask-${type}`; }","}"]},{"id":621,"file":"test\\gameview.menu-selects.test.js","start":656,"end":672,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":622,"file":"test\\gameview.loadlevel-missing.test.js","start":266,"end":548,"kind":"MethodDefinition","name":"StageStub.constructor","weight":0.5,"headline":"constructor called clear redraw set screen position","preContext":["  setCursorSprite() {}","  updateStageSize() {}","  resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }","}"],"postContext":["getGameDisplay() { return this.gameDisplay; }"]},{"id":623,"file":"test\\gameview.loadlevel.test.js","start":309,"end":591,"kind":"MethodDefinition","name":"StageStub.constructor","weight":0.5,"headline":"constructor called clear redraw set screen position","preContext":["  setCursorSprite() {}","  updateStageSize() {}","  resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }","}"],"postContext":["getGameDisplay() { return this.gameDisplay; }"]},{"id":624,"file":"test\\gameview.loadReplay.test.js","start":251,"end":267,"kind":"MethodDefinition","name":"GameFactoryMock.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryMock { constructor() {} }"],"postContext":[]},{"id":625,"file":"test\\gameview.onGameEnd.test.js","start":282,"end":442,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor fade calls gu im props view","preContext":["  setCursorSprite() {}","  updateStageSize() {}","  clear() {}","}"],"postContext":["getGameDisplay() { return {}; }"]},{"id":626,"file":"test\\gameview.sound.test.js","start":147,"end":159,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["function createWindow() {","  return {","    location: { search: '' },","    setTimeout,"]},{"id":627,"file":"test\\keyboardshortcuts.loop.test.js","start":932,"end":964,"kind":"MethodDefinition","name":"StageStub.redraw","weight":0.5,"headline":"redraw","preContext":["clampViewPoint() {}"],"postContext":["clear(img) { this.clears.push(img); }"]},{"id":628,"file":"js\\vendor\\hqx\\squooshhqx.js","start":976,"end":1560,"kind":"ExportedFunction","name":"resize","weight":1.2,"headline":"pt ret wb ind gen const var","preContext":["function getArrayU32FromWasm0(ptr, len) {","  ptr = ptr >>> 0;","  return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);","}"],"postContext":["async function __wbg_load(module, imports) {","  if (typeof Response === 'function' && module instanceof Response) {","    if (typeof WebAssembly.instantiateStreaming === 'function') {","      try {"]},{"id":629,"file":"js\\TriggerManager.js","start":2298,"end":2486,"kind":"MethodDefinition","name":"TriggerManager.removeByOwner","weight":1.2,"headline":"owner tr remove triggers return const debug","preContext":["addRange (arr) {\r","    for (let i = 0; i < arr.length; ++i) this.add(arr[i]);\r","    if (arr.length) this._debugFrame = null;\r","  }"],"postContext":["trigger (x, y) {\r","    if (x < 0 || y < 0 || x > this._maxX || y > this._maxY) {\r","      return Lemmings.TriggerTypes.NO_TRIGGER;\r","    }\r"]},{"id":630,"file":"js\\UnpackFilePart.js","start":1443,"end":1500,"kind":"MethodDefinition","name":"UnpackFilePart.initialBufferLen","weight":1.2,"headline":"initial get return","preContext":["set offset(val) { this.#offset = val; }"],"postContext":["set initialBufferLen(val) { this.#initialBufferLen = val; }"]},{"id":631,"file":"test\\groundrenderer.test.js","start":480,"end":518,"kind":"MethodDefinition","name":"MockStage.constructor","weight":0.5,"headline":"constructor display null","preContext":["    if (!this.display) this.display = new DisplayImage(this);","    return this.display;","  }","}"],"postContext":["createImage(display, w, h) { return new SimpleImageData(w, h); }"]},{"id":632,"file":"js\\UserInputManager.js","start":599,"end":9969,"kind":"ClassDeclaration","name":"UserInputManager","weight":1.5,"headline":"mouse position relative handle client false touch","preContext":["    this.deltaY = 0;","    this.deltaZoom = deltaZoom;","    this.mda = null;","  }"],"postContext":["constructor(listenElement) {","    this.mouseDownX = 0;","    this.mouseDownY = 0;","    this.lastMouseX = 0;"]},{"id":633,"file":"js\\VGASpecReader.js","start":1104,"end":1155,"kind":"MethodDefinition","name":"VGASpecReader.groundPalette","weight":1.2,"headline":"ground palette get return","preContext":["get height() { return this.#height; }"],"postContext":["get img() { return this.#img; }"]},{"id":634,"file":"js\\ViewPoint.js","start":958,"end":1036,"kind":"MethodDefinition","name":"ViewPoint.getSceneX","weight":1.2,"headline":"math trun get scene return scale","preContext":["    } else {","      this.y = value;","    }","  }"],"postContext":["getSceneY(y) {","    return Math.trunc(y / this.scale) + Math.trunc(this.y);","  }"]},{"id":635,"file":"test\\loghandler.test.js","start":355,"end":427,"kind":"ClassDeclaration","name":"Dummy","weight":0.5,"headline":"class dummy extends lemmings base logger constructor","preContext":["debug() {}"],"postContext":["constructor() { super(); }"]},{"id":636,"file":"test\\fileprovider.test.js","start":302,"end":347,"kind":"MethodDefinition","name":"MockLogHandler.debug","weight":0.5,"headline":"msg debug debugged push","preContext":["log(msg) {","    this.logged.push(msg);","  }"],"postContext":[]},{"id":637,"file":"test\\skillpanelsprites.test.js","start":469,"end":555,"kind":"MethodDefinition","name":"FakeSprites.getAnimation","weight":0.5,"headline":"animation get return new fake anim","preContext":["  getAnimation(type, right) {","    return new FakeAnimation(`anim-${type}-${right}`);","  }","}"],"postContext":["class FakeMaskList {","  constructor(label) { this.label = label; }","  GetMask(idx) { return `${this.label}-${idx}`; }","}"]},{"id":638,"file":"test\\gameview.dispose.test.js","start":547,"end":671,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"dispose stage called class mock constructor update","preContext":["dispose() { this.disposeCalled++; }"],"postContext":["constructor() { this.disposeCalled = 0; }"]},{"id":639,"file":"js\\CommandReleaseRateDecrease.js","start":364,"end":385,"kind":"MethodDefinition","name":"CommandReleaseRateDecrease.save","weight":1.2,"headline":"save return","preContext":["load() {}"],"postContext":["getCommandKey() { return 'd'; }"]},{"id":640,"file":"js\\CommandNuke.js","start":464,"end":485,"kind":"MethodDefinition","name":"CommandNuke.save","weight":1.2,"headline":"save return","preContext":["load() {}"],"postContext":["getCommandKey() { return 'n'; }"]},{"id":641,"file":"js\\GameGui.js","start":3687,"end":7301,"kind":"MethodDefinition","name":"GameGui.handleSkillMouseDown","weight":1.2,"headline":"speed game skill true return changed timer","preContext":["      this.game.queueCommand(new Lemmings.CommandReleaseRateIncrease(this.deltaReleaseRate));","    else","      this.game.queueCommand(new Lemmings.CommandReleaseRateDecrease(-this.deltaReleaseRate));","  }"],"postContext":["handleSkillMouseRightDown(e) {","    const panelIndex = Math.trunc(e.x / 16);","","    this.nukePrepared = false; // always cancel nuke confirmation on right click"]},{"id":642,"file":"js\\CommandReleaseRateIncrease.js","start":363,"end":384,"kind":"MethodDefinition","name":"CommandReleaseRateIncrease.save","weight":1.2,"headline":"save return","preContext":["load() {}"],"postContext":["getCommandKey() { return 'i'; }"]},{"id":643,"file":"test\\gameview.controls.test.js","start":149,"end":165,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":644,"file":"test\\exportScripts.test.js","start":2010,"end":2316,"kind":"FunctionDeclaration","name":"createPack","weight":0.5,"headline":"dir fs sync join write pack function","preContext":["    FileContainer,","    SpriteTypes: { WALKING: 0 }","  });","}"],"postContext":["function patchScript(name) {","  return fileURLToPath(new URL(`../tools/${name}`, import.meta.url));","}"]},{"id":645,"file":"test\\getNearestLemming.test.js","start":847,"end":882,"kind":"MethodDefinition","name":"DummyAction.getActionName","weight":0.5,"headline":"get action return dummy","preContext":["  getActionName() { return 'dummy'; }","  triggerLemAction() { return false; }","  process() { return Lemmings.LemmingStateType.NO_STATE_TYPE; }","}"],"postContext":["triggerLemAction() { return false; }"]},{"id":646,"file":"test\\gameview.suspendWithColor.test.js","start":196,"end":212,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":647,"file":"test\\gameview.start-existing.test.js","start":195,"end":211,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":648,"file":"js\\FileContainer.js","start":2812,"end":2861,"kind":"MethodDefinition","name":"FileContainer.parts","weight":1.2,"headline":"parts get return slice","preContext":["        }","        this.log.debug(`${fileReader.filename} has ${this.#parts.length} file-parts.`);","      })();","  }"],"postContext":[]},{"id":649,"file":"js\\LevelLoader.js","start":74,"end":246,"kind":"MethodDefinition","name":"LevelLoader.constructor","weight":1.2,"headline":"constructor conf provider level resolve new lemmings","preContext":["","    return level;  ","  }","}"],"postContext":["async getLevel (levelMode, levelIndex) {","    let level, levelReader;","","    // ----------------------------------------------------------------------- //"]},{"id":650,"file":"js\\GameTimer.js","start":1981,"end":2028,"kind":"MethodDefinition","name":"GameTimer.speedFactor","weight":1.2,"headline":"speed factor get return","preContext":["    } else {","      this.#tickIndex = v;","    }","  }"],"postContext":["get tps() { return 1000 / this.#frameTime; }"]},{"id":651,"file":"js\\FileProvider.js","start":2173,"end":2306,"kind":"MethodDefinition","name":"FileProvider._buildUrl","weight":1.2,"headline":"filename build ur return root null","preContext":["      this._cache.set(url, promise);","    }","    return promise;","  }"],"postContext":["_filenameFromUrl(url) {","    if (!url) return '';","    url = url.split('#')[0].split('?')[0];","    return url.substring(url.lastIndexOf('/') + 1);"]},{"id":652,"file":"js\\ActionCountdownSystem.js","start":774,"end":1083,"kind":"MethodDefinition","name":"ActionCountdownSystem.process","weight":1.2,"headline":"le countdown return lemmings lemming state process","preContext":["    }\r","    let numberFrame = ActionCountdownSystem.numberMasks.get('numbers').GetMask(count);\r","    gameDisplay.drawMask(numberFrame, lem.x, lem.y);\r","  }"],"postContext":[]},{"id":653,"file":"js\\ActionDrowningSystem.js","start":540,"end":930,"kind":"MethodDefinition","name":"ActionDrowningSystem.process","weight":1.2,"headline":"le look level frame return lemmings lemming","preContext":["    if (lem.frameIndex >= 15) {\r","      lemmings.game.lemmingManager.miniMap.addDeath(lem.x, lem.y);\r","    }\r","  }"],"postContext":[]},{"id":654,"file":"test\\walk-wall-collision.test.js","start":0,"end":1135,"kind":"Module","name":"root","weight":0.5,"headline":"js import level action walk lemmings const","preContext":[],"postContext":[]},{"id":655,"file":"js\\ActionExitingSystem.js","start":506,"end":769,"kind":"MethodDefinition","name":"ActionExitingSystem.process","weight":1.2,"headline":"le frame return lemmings lemming state process","preContext":["draw(gameDisplay, lem) {\r","    super.draw(gameDisplay, lem);\r","  }"],"postContext":[]},{"id":656,"file":"js\\BinaryReader.js","start":4327,"end":4370,"kind":"MethodDefinition","name":"BinaryReader.length","weight":1.2,"headline":"length get return","preContext":["get hiddenOffset() {","    return this.#hiddenOffset;","  }"],"postContext":["get pos() {","    return this.#pos;","  }"]},{"id":657,"file":"js\\ActionFloatingSystem.js","start":814,"end":1315,"kind":"MethodDefinition","name":"ActionFloatingSystem.process","weight":1.2,"headline":"le frame speed level return lemmings lemming","preContext":["    const ani = this.sprites.get(lem.getDirection());\r","    const frame = ani.getFrame(FLOAT_FRAME[lem.frameIndex]);\r","    gameDisplay.drawFrame(frame, lem.x, lem.y);\r","  }"],"postContext":[]},{"id":658,"file":"js\\Game.js","start":2116,"end":4040,"kind":"MethodDefinition","name":"Game.loadLevel","weight":1.2,"headline":"level game manager lemmings new display timer","preContext":["    this.gameGui         = null;","","    this.finalGameState  = Lemmings.GameStateTypes.UNKNOWN;","  }"],"postContext":["start () { this.gameTimer?.continue(); }"]},{"id":659,"file":"js\\BitWriter.js","start":1676,"end":2035,"kind":"MethodDefinition","name":"BitWriter.copyRawData","weight":1.2,"headline":"pos length reader copy raw const log","preContext":["get bitReader() {\r","    return this.#bitReader;\r","  }"],"postContext":["copyReferencedData(length, offsetBitCount) {\r","    const outData = this.#outData;\r","    let outPos = this.#outPos;\r","    const offset = this.#bitReader.read(offsetBitCount) + 1;\r"]},{"id":660,"file":"js\\CommandLemmingsAction.js","start":833,"end":872,"kind":"MethodDefinition","name":"CommandLemmingsAction.getCommandKey","weight":1.2,"headline":"get command key return","preContext":["save() {\r","    return [this.lemmingId, this.skillType];\r","  }"],"postContext":[]},{"id":661,"file":"js\\Animation.js","start":3967,"end":4661,"kind":"MethodDefinition","name":"Animation.loadFromFileWithPaletteSwap","weight":1.2,"headline":"palette new offset pal color load fr","preContext":["    this.frames     = frameArray;","    this._lastFrame = frameArray[frames-1];","    this.isFinished = false;","  }"],"postContext":[]},{"id":662,"file":"test\\lemmingmanager.test.js","start":1018,"end":1079,"kind":"MethodDefinition","name":"DummyAction.process","weight":0.5,"headline":"process return lemmings lemming state","preContext":["triggerLemAction(lem) { lem.setAction(this); return true; }"],"postContext":["class BashAction extends DummyAction {}"]},{"id":663,"file":"test\\lemming.transitions.test.js","start":384,"end":487,"kind":"MethodDefinition","name":"SeqAction.process","weight":0.5,"headline":"le process level frame explode disable return","preContext":["triggerLemAction() { return true; }"],"postContext":[]},{"id":664,"file":"js\\Trigger.js","start":1264,"end":1525,"kind":"MethodDefinition","name":"Trigger.draw","weight":1.2,"headline":"display draw game return render arrow triggers","preContext":["      return Lemmings.TriggerTypes.DISABLED;\r","    }\r","    return Lemmings.TriggerTypes.NO_TRIGGER;\r","  }"],"postContext":[]},{"id":665,"file":"js\\ParticleTable.js","start":1598,"end":2223,"kind":"MethodDefinition","name":"ParticleTable.draw","weight":1.2,"headline":"frame const color palette game display table","preContext":["get particleData() { return this.#particleData; }"],"postContext":["static #decodeBase64Frames(b64) {","    // Browsers: window.atob, Node: Buffer.from","    const bin = typeof window !== 'undefined' && window.atob","      ? window.atob(b64)"]},{"id":666,"file":"js\\PaletteImage.js","start":1171,"end":1338,"kind":"MethodDefinition","name":"PaletteImage.processTransparentByColorIndex","weight":1.2,"headline":"bu trans process transparent color const pix","preContext":["        bitBuf <<= 1; bitLen--;\r","      }\r","    }\r","  }"],"postContext":["processTransparentData(src, startPos = 0) {\r","    if (startPos != null) src.setOffset(startPos);\r","    const buf = this.pixBuf;\r","    let bitBuf = 0, bitLen = 0;\r"]},{"id":667,"file":"js\\SkillPanelSprites.js","start":2251,"end":2330,"kind":"MethodDefinition","name":"SkillPanelSprites.getNumberSpriteRight","weight":1.2,"headline":"number sprite get return","preContext":["getNumberSpriteLeft(number) {\r","    return this.numberSpriteLeft[number];\r","  }"],"postContext":["getNumberSpriteEmpty() {\r","    return this.emptyNumberSprite;\r","  }"]},{"id":668,"file":"js\\Stage.js","start":2273,"end":2572,"kind":"MethodDefinition","name":"Stage.handleOnDoubleClick","weight":1.2,"headline":"stage image double click const display pos","preContext":["    const worldX = stageImage.viewPoint.getSceneX(localX);","    const worldY = stageImage.viewPoint.getSceneY(localY);","    return new Lemmings.Position2D(worldX, worldY);","  }"],"postContext":["handleOnMouseDown() {","    this.controller.onMouseDown.on((e) => {","      const stageImage = this.getStageImageAt(e.x, e.y);","      if (!stageImage || !stageImage.display) return;"]},{"id":669,"file":"test\\gameview.enableDebug.test.js","start":205,"end":235,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"async get game return","preContext":["class GameFactoryMock { async getGame() { return {}; } }"],"postContext":["function createWindowStub() {","  return {","    location: { search: '' },","    setTimeout,"]},{"id":670,"file":"js\\Frame.js","start":465,"end":841,"kind":"MethodDefinition","name":"Frame.constructor","weight":1.2,"headline":"constructor offset pix new ui nt const","preContext":["    this.data[idx] = Lemmings.ColorPalette.black;","    this.mask[idx] = 0;","  }","}"],"postContext":["getData   () { return new Uint8ClampedArray(this.data.buffer); }"]},{"id":671,"file":"js\\CommandSelectSkill.js","start":135,"end":264,"kind":"MethodDefinition","name":"CommandSelectSkill.constructor","weight":1.2,"headline":"constructor skill apply lemmings types true super","preContext":["  getCommandKey() {","    return 's';","  }","}"],"postContext":["execute(game) {","    const gameSkills = game.getGameSkills();","    if (!gameSkills) return false;","    const lemmingManager = game.getLemmingManager?.();"]},{"id":672,"file":"js\\GroundReader.js","start":960,"end":8440,"kind":"ClassDeclaration","name":"GroundReader","weight":1.5,"headline":"im fr read palette byte steel const","preContext":["    }","  }","  return steelSprites;","}"],"postContext":["constructor (groundFile, vgaTerrain, vgaObject) {","    super();","    if (groundFile.length !== 1056) {","      this.log.log(`groundFile ${groundFile.filename} has wrong size: ${groundFile.length}`);"]},{"id":673,"file":"js\\MiniMap.js","start":126,"end":1504,"kind":"MethodDefinition","name":"MiniMap.constructor","weight":1.2,"headline":"constructor display new ui nt level frame","preContext":["    this.deadTTLs = null;","    this.frame = null;","  }","}"],"postContext":["#hookPointer() {","    this._displayListeners = [","      ['onMouseDown', e => { this.#handleMouseDown(e); }],","      ['onMouseUp', e => { this.#handleMouseUp(e); }],"]},{"id":674,"file":"js\\GameDisplay.js","start":74,"end":540,"kind":"MethodDefinition","name":"GameDisplay.constructor","weight":1.2,"headline":"constructor manager lemming null mouse game level","preContext":["    this.hoverIndex = -1;","    this.hoverLemming = null;","  }","}"],"postContext":["setGuiDisplay(display) {","    this.display = display;","    this._mouseHandler = (e) => {","      const lem = this.lemmingManager.getNearestLemming(e.x, e.y);"]},{"id":675,"file":"js\\ActionWalkSystem.js","start":162,"end":274,"kind":"MethodDefinition","name":"ActionWalkSystem.constructor","weight":1.2,"headline":"constructor sprites sprite super lemmings types action","preContext":["      }","    }","  }","}"],"postContext":["triggerLemAction(lem) {","    return false;","  }"]},{"id":676,"file":"js\\ActionBashSystem.js","start":161,"end":412,"kind":"MethodDefinition","name":"ActionBashSystem.constructor","weight":1.2,"headline":"constructor types lemmings mask sprites masks sprite","preContext":["    }","    return 4;","  }","}"],"postContext":["process(level, lem) {","    const groundMask = level.getGroundMaskLayer();","    lem.frameIndex++;","    const state = lem.frameIndex % 16;"]},{"id":677,"file":"js\\SolidLayer.js","start":278,"end":464,"kind":"MethodDefinition","name":"SolidLayer.constructor","weight":1.2,"headline":"constructor mask new ui nt null super","preContext":["        }","      })();","  }","}"],"postContext":["hasGroundAt(x, y) {","    return (this.hasMaskAt(x,y));","  }"]},{"id":678,"file":"js\\EventHandler.js","start":433,"end":478,"kind":"MethodDefinition","name":"EventHandler.dispose","weight":1.2,"headline":"dispose handlers clear","preContext":["off (handler) {\r","    this.handlers.delete(handler);\r","  }"],"postContext":["trigger (arg) {\r","    // snapshot length once to tolerate `off` during iteration without skipping\r","    for (const handler of this.handlers) {\r","      handler(arg);\r"]},{"id":679,"file":"js\\GameFactory.js","start":908,"end":1217,"kind":"MethodDefinition","name":"GameFactory.getGameResources","weight":1.2,"headline":"conf game get resources return new resolve","preContext":["getConfig(gameType) {","    return this.configReader.getConfig(gameType);","  }"],"postContext":["async createFromConfig(config, groupIndex = 0, levelIndex = 0) {","    const res = new Lemmings.GameResources(this.fileProvider, config);","    const game = new Lemmings.Game(res);","    await game.loadLevel(groupIndex, levelIndex);"]},{"id":680,"file":"js\\vendor\\hqx\\squooshhqx.js","start":1562,"end":2527,"kind":"FunctionDeclaration","name":"__wbg_load","weight":2,"headline":"module instance web assembly instantiate imports return","preContext":["  } finally {","    wasm.__wbindgen_add_to_stack_pointer(16);","  }","}"],"postContext":["function __wbg_get_imports() {","  const imports = {};","  imports.wbg = {};",""]},{"id":681,"file":"test\\keyboardshortcuts.loop.test.js","start":967,"end":1004,"kind":"MethodDefinition","name":"StageStub.clear","weight":0.5,"headline":"im clear clears push","preContext":["redraw() { this.redrawCount++; }"],"postContext":["snapScale(s) { return s; }"]},{"id":682,"file":"test\\gameview.sound.test.js","start":218,"end":381,"kind":"FunctionDeclaration","name":"createWindow","weight":0.5,"headline":"timeout event listener function create window return","preContext":["dispose() {}"],"postContext":[]},{"id":683,"file":"test\\gameview.onGameEnd.test.js","start":445,"end":476,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"get game display return","preContext":["    this.fadeCalls = 0;","    this.guiImgProps = { x: 0, y: 0, viewPoint: { scale: 1 } };","    this.startFadeOut = () => { this.fadeCalls++; };","  }"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":684,"file":"test\\gameview.loadlevel.test.js","start":594,"end":639,"kind":"MethodDefinition","name":"StageStub.getGameDisplay","weight":0.5,"headline":"game display get return","preContext":["      setScreenPosition(x, y) { this.setScreenPositionArgs = [x, y]; },","      redraw() { this.redrawCalled++; }","    };","  }"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":685,"file":"test\\gameview.loadlevel-missing.test.js","start":551,"end":596,"kind":"MethodDefinition","name":"StageStub.getGameDisplay","weight":0.5,"headline":"game display get return","preContext":["      setScreenPosition(x, y) { this.setScreenPositionArgs = [x, y]; },","      redraw() { this.redrawCalled++; }","    };","  }"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":686,"file":"test\\gameview.menu-selects.test.js","start":673,"end":685,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":[]},{"id":687,"file":"test\\action-base-system.test.js","start":535,"end":597,"kind":"ClassDeclaration","name":"StubMasks","weight":0.5,"headline":"mask class stub masks get return","preContext":["getAnimation(type, right) { return new StubAnimation(`sprite-${type}-${right}`); }"],"postContext":["GetMask(type) { return `mask-${type}`; }"]},{"id":688,"file":"js\\LogHandler.js","start":546,"end":757,"kind":"MethodDefinition","name":"Logger.error","weight":1.2,"headline":"error exception msg console module enabled message","preContext":["    if (this._enabled()) {","      console.warn(`${this._moduleName}\\t${msg}`);","    }","  }"],"postContext":["log(msg, exception) {","    this.error(msg, exception);","  }"]},{"id":689,"file":"test\\minimap.test.js","start":706,"end":1599,"kind":"FunctionDeclaration","name":"createLevel","weight":0.5,"headline":"const mask return sub ground new ui","preContext":["    drawFrame(frame, x, y) { this.drawFrameCalls.push({ frame, x, y }); },","    setScreenPosition(x, y) { this.lastScreenPosition = [x, y]; }","  };","}"],"postContext":["function makeStage(level, display) {","  return {","    getGameViewRect() {","      return { x: level.screenPositionX, y: 0, w: display.worldDataSize.width, h: display.worldDataSize.height };"]},{"id":690,"file":"test\\stage.overlayfade.test.js","start":673,"end":1114,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":691,"file":"test\\stage.test.js","start":747,"end":1188,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":692,"file":"test\\stage.updateStageSize.test.js","start":626,"end":1067,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":693,"file":"test\\stage.updateviewpoint.test.js","start":626,"end":1067,"kind":"FunctionDeclaration","name":"createDocumentStub","weight":0.5,"headline":"return create ct image canvas function document","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":[]},{"id":694,"file":"test\\userinput.events.test.js","start":577,"end":835,"kind":"FunctionDeclaration","name":"touchEvent","weight":0.5,"headline":"touches changed mk event const arr client","preContext":["  const e = new Event(type);","  Object.assign(e, opts);","  return e;","}"],"postContext":[]},{"id":695,"file":"js\\CommandManager.js","start":1300,"end":1684,"kind":"MethodDefinition","name":"CommandManager.commandFactory","weight":1.2,"headline":"command case return lemmings new release rate","preContext":["      let tick = parseInt(commandStr[0], 10);","      this.runCommands[tick] = this.parseCommand(commandStr[1]);","    }","  }"],"postContext":["parseCommand(valuesStr) {","    if (valuesStr.length < 1) return;","    const newCommand = this.commandFactory(valuesStr.substr(0, 1));","    const values = valuesStr.substr(1).split(':');"]},{"id":696,"file":"js\\ColorPalette.js","start":398,"end":451,"kind":"MethodDefinition","name":"ColorPalette.getR","weight":1.2,"headline":"get return","preContext":["getColor(index) {","    return this.data[index];","  }"],"postContext":["getG(index) {","    return (this.data[index] >> 8) & 0xFF;","  }"]},{"id":697,"file":"js\\GameConfig.js","start":73,"end":391,"kind":"MethodDefinition","name":"GameConfig.constructor","weight":1.2,"headline":"constructor game lemmings level mechanics ur resources","preContext":["    /** mechanics customization */","    this.mechanics = {};","  }","}"],"postContext":[]},{"id":698,"file":"js\\KeyboardShortcuts.js","start":80,"end":514,"kind":"MethodDefinition","name":"KeyboardShortcuts.constructor","weight":1.2,"headline":"constructor false key view bind window add","preContext":["    }","    this._startLoop();","  }","}"],"postContext":["dispose() {","    if (this._raf) {","      window.cancelAnimationFrame(this._raf);","      this._raf = null;"]},{"id":699,"file":"js\\ActionExplodingSystem.js","start":168,"end":515,"kind":"MethodDefinition","name":"ActionExplodingSystem.constructor","weight":1.2,"headline":"constructor trigger manager particle table sprite types","preContext":["    }","    return Lemmings.LemmingStateType.NO_STATE_TYPE;","  }","}"],"postContext":["triggerLemAction(lem) {","    return false;","  }"]},{"id":700,"file":"js\\GameSkills.js","start":73,"end":419,"kind":"MethodDefinition","name":"GameSkills.constructor","weight":1.2,"headline":"constructor level skill lemmings changed new event","preContext":["    }","    return false;","  }","}"],"postContext":["selectFirstAvailable() {","    for (let i = Lemmings.SkillTypes.CLIMBER; i <= Lemmings.SkillTypes.DIGGER; i++) {","      if (this.skills[i] > 0) {","        this.selectedSkill = i;"]},{"id":701,"file":"test\\gameview.canvas-reset.test.js","start":514,"end":555,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor dispose called","preContext":["  constructor() { this.disposeCalled = 0; }","  updateStageSize() {}","  dispose() { this.disposeCalled++; }","}"],"postContext":["updateStageSize() {}"]},{"id":702,"file":"js\\DisplayImage.js","start":828,"end":13233,"kind":"ClassDeclaration","name":"DisplayImage","weight":1.5,"headline":"sr im size null image base set","preContext":["  h2 ^= Math.imul(h1 ^ (h1 >>> 13), 3266489909);","  ","  return 4294967296 * (2097151 & h2) + (h1 >>> 0);","}"],"postContext":["constructor(stage) {","    super();","    this.stage = stage;","    this.onMouseUp = new Lemmings.EventHandler();"]},{"id":703,"file":"index.html","start":800,"end":1600,"kind":"Blob","name":"blob","weight":1,"headline":"script js midi ef web text select","preContext":["  <link rel=\"icon\" type=\"image/png\" href=\"img/favicon.png\" />","  <link rel=\"shortcut icon\" type=\"image/png\" href=\"img/touch-icon-152.png\" />","  <link rel=\"apple-touch-icon\" href=\"img/touch-icon-152.png\" />","  <link rel=\"apple-touch-icon\" sizes=\"152x152\" hr"],"postContext":[" {","        $(\"#errorDisplay\").innerHTML+= \"No input device detected. <br />\";","      } else {","        for (let input of WebMidi.inputs.values()) {"]},{"id":704,"file":"js\\xbrz\\xbrz.js","start":484,"end":674,"kind":"ClassDeclaration","name":"BlendResult","weight":1.5,"headline":"class blend result constructor reset","preContext":["set (val) {","    this.arr[this.ptr] = val;","  }"],"postContext":["constructor () {","    this.f = 0;","    this.g = 0;","    this.j = 0;"]},{"id":705,"file":"test\\gamegui.test.js","start":915,"end":950,"kind":"MethodDefinition","name":"DisplayImageStub.getHeight","weight":0.5,"headline":"get return","preContext":["getWidth() { return this.width; }"],"postContext":["get worldDataSize() { return { width: this.width, height: this.height }; }"]},{"id":706,"file":"js\\LevelReader.js","start":3449,"end":4528,"kind":"MethodDefinition","name":"LevelReader.readSteelArea","weight":1.2,"headline":"const new range fr read byte size","preContext":["      newOb.drawProperties = new Lemmings.DrawProperties(isUpsideDown, noOverwrite, false, isErase);\r","      this.terrains.push(newOb);\r","    }\r","  }"],"postContext":["readLevelName(fr) {\r","    /// at the end of the \r","    this.levelProperties.levelName = fr.readString(32, 0x07E0);\r","    this.log.debug('Level Name: ' + this.levelProperties.levelName);\r"]},{"id":707,"file":"js\\LemmingsSprite.js","start":5483,"end":5532,"kind":"MethodDefinition","name":"LemmingsSprite.colorPalette","weight":1.2,"headline":"color palette get return","preContext":["    if (dir <= 0) {\r","      this.#lemmingAnimation[this.#typeToIndex(state, false)] = animation;\r","    }\r","  }"],"postContext":["get lemmingAnimation() { return this.#lemmingAnimation.slice(); }"]},{"id":708,"file":"js\\GameVictoryCondition.js","start":889,"end":980,"kind":"MethodDefinition","name":"GameVictoryCondition.boundToRange","weight":1.2,"headline":"min max math bound range return","preContext":["    }","    this.releaseRate = newReleaseRate;","    return true;","  }"],"postContext":["getMinReleaseRate() {","    return this.minReleaseRate;","  }"]},{"id":709,"file":"js\\Lemming.js","start":720,"end":865,"kind":"MethodDefinition","name":"Lemming.setCountDown","weight":1.2,"headline":"action countdown return set false true","preContext":["    this.action = action;","    this.frameIndex = 0;","    this.state = 0;","  }"],"postContext":["getClickDistance(x, y) {","    let yCenter = this.y - 5;","    let xCenter = this.x;","    let x1 = xCenter - 5;"]},{"id":710,"file":"js\\GameView.js","start":3793,"end":3865,"kind":"MethodDefinition","name":"GameView.loadReplay","weight":1.2,"headline":"replay string async load await","preContext":["      }","      this.autoMoveTimer = null;","    }, 2500);","  }"],"postContext":["cheat() {","    if (this.game == null) {","      return;","    }"]},{"id":711,"file":"test\\bench-tps.test.js","start":892,"end":927,"kind":"MethodDefinition","name":"DisplayImageStub.getHeight","weight":0.5,"headline":"get return","preContext":["getWidth() { return this.width; }"],"postContext":["get worldDataSize() { return { width: this.width, height: this.height }; }"]},{"id":712,"file":"test\\bench-start.test.js","start":625,"end":663,"kind":"MethodDefinition","name":"LMStub.constructor","weight":0.5,"headline":"constructor spawn","preContext":["class LMStub {","  constructor() { this.spawnCount = 0; }","}"],"postContext":[]},{"id":713,"file":"test\\bench-sequence.test.js","start":371,"end":451,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"get game display return clear set screen","preContext":["constructor() { this.guiImgProps = { x:0, y:0, viewPoint:{ scale:1 }}; }"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":714,"file":"test\\bench-entrance-placement.test.js","start":560,"end":576,"kind":"MethodDefinition","name":"StageStub.constructor","weight":0.5,"headline":"constructor","preContext":["class StageStub { constructor() {} getGameDisplay() { return {}; } getGuiDisplay() { return {}; } updateStageSize() {} setCursorSprite() {} clear() {} startFadeOut() {} startOverlayFade() {} }"],"postContext":["getGameDisplay() { return {}; }"]},{"id":715,"file":"test\\action-systems.test.js","start":2313,"end":2369,"kind":"MethodDefinition","name":"StubLemming.getCountDownTime","weight":0.5,"headline":"get time return countdown","preContext":["setCountDown(act) { this.countdownAction = act; if (this.countdown > 0) return false; this.countdown = 80; return true; }"],"postContext":["class StubLevel {","  constructor() {","    this.ground = new Set();","    this.clearedMasks = [];"]},{"id":716,"file":"test\\action-systems-extra.test.js","start":744,"end":804,"kind":"MethodDefinition","name":"StubLemming.getDirection","weight":0.5,"headline":"get direction return look","preContext":["constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; this.disabled = false; }"],"postContext":["disable() { this.disabled = true; }"]},{"id":717,"file":"test\\action-mine-system.test.js","start":535,"end":620,"kind":"MethodDefinition","name":"StubLemming.constructor","weight":0.5,"headline":"constructor look true frame","preContext":["class StubLemming {","  constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","}"],"postContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"]},{"id":718,"file":"test\\action-drown-explode.test.js","start":677,"end":743,"kind":"MethodDefinition","name":"StubLevel.constructor","weight":0.5,"headline":"constructor ground new set cleared masks","preContext":["  key(x, y) { return `${x},${y}`; }","  hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }","  clearGroundWithMask(mask, x, y) { this.clearedMasks.push({ mask, x, y }); return true; }","}"],"postContext":["key(x, y) { return `${x},${y}`; }"]},{"id":719,"file":"test\\gamegui.behavior.test.js","start":695,"end":722,"kind":"MethodDefinition","name":"TimerStub.getGameTime","weight":0.5,"headline":"get game time return","preContext":["toggle() { this.running = !this.running; }"],"postContext":["getGameLeftTimeString() { return '0'; }"]},{"id":720,"file":"test\\gamedisplay.test.js","start":384,"end":428,"kind":"MethodDefinition","name":"MockStage.constructor","weight":0.5,"headline":"constructor display null","preContext":["    if (!this.display) this.display = new DisplayImage(this);","    return this.display;","  }","}"],"postContext":["createImage(display, w, h) {","    return { data: new Uint8ClampedArray(w * h * 4), width: w, height: h };","  }"]},{"id":721,"file":"js\\EventHandler.js","start":562,"end":735,"kind":"MethodDefinition","name":"EventHandler.trigger","weight":1.2,"headline":"arg handler trigger snapshot length tolerate iteration","preContext":["dispose () {\r","    this.handlers.clear();\r","  }"],"postContext":[]},{"id":722,"file":"js\\SolidLayer.js","start":468,"end":525,"kind":"MethodDefinition","name":"SolidLayer.hasGroundAt","weight":1.2,"headline":"ground return mask","preContext":["    this.width = width;","    this.height = height;","    this.mask = mask ? new Uint8Array(mask) : new Uint8Array(width * height);","  }"],"postContext":["hasMaskAt(x, y) {","    if (x < 0 || x >= this.width || y < 0 || y >= this.height) return false;","    return this.mask[x + y * this.width] !== 0;","  }"]},{"id":723,"file":"js\\ActionBashSystem.js","start":416,"end":1535,"kind":"MethodDefinition","name":"ActionBashSystem.process","weight":1.2,"headline":"le mask state level ground lemming const","preContext":["      maskTypes: { left: Lemmings.MaskTypes.BASHING_L, right: Lemmings.MaskTypes.BASHING_R },","      actionName: 'bashing'","    });","  }"],"postContext":["findGapDelta(groundMask, x, y) {","    for (let i = 0; i < 3; i++) {","      if (groundMask.hasGroundAt(x, y + i)) {","        return i;"]},{"id":724,"file":"js\\ActionWalkSystem.js","start":277,"end":322,"kind":"MethodDefinition","name":"ActionWalkSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["constructor(sprites) {","    super({ sprites, spriteType: Lemmings.SpriteTypes.WALKING, actionName: 'walk' });","  }"],"postContext":["getGroundStepHeight(slice) {","    const { height } = slice;","    for (let i = 0; i < height; i++) {","      const y = height - 1 - i;"]},{"id":725,"file":"js\\GameDisplay.js","start":543,"end":1395,"kind":"MethodDefinition","name":"GameDisplay.setGuiDisplay","weight":1.2,"headline":"mouse game lemming display gu handler cand","preContext":["    this._dashOffset = 0;","    this.hoverIndex = -1;","    this.hoverLemming = null;","  }"],"postContext":["render() {","    if (this.display == null)","      return;","    this.level.render(this.display);"]},{"id":726,"file":"js\\MiniMap.js","start":1508,"end":1848,"kind":"MethodDefinition","name":"MiniMap.hookPointer","weight":1.2,"headline":"mouse display handle listeners move event handler","preContext":["    this._viewportCounter = 0;","    this.viewportDashDelay = 100;","    if (this.guiDisplay) this.#hookPointer();","  }"],"postContext":["#handleMouseDown(event){","    if (!this.guiDisplay) return;","    this._mouseDown = true;","    const gd = this.guiDisplay;"]},{"id":727,"file":"js\\GroundReader.js","start":1251,"end":2524,"kind":"MethodDefinition","name":"GroundReader.constructor","weight":1.2,"headline":"constructor ground palette terrain read vg im","preContext":["      cp.setColorRGB(i, fr.readByte() << 2, fr.readByte() << 2, fr.readByte() << 2);","    }","  }","}"],"postContext":["getTerrainImages() { return this.imgTerrain;  }"]},{"id":728,"file":"js\\CommandSelectSkill.js","start":268,"end":760,"kind":"MethodDefinition","name":"CommandSelectSkill.execute","weight":1.2,"headline":"game skill skills lemming const manager get","preContext":["    super();","    this.skill = skill;","    this.apply = apply;","  }"],"postContext":["load(values) {","    this.skill = +(values[0]);","    this.apply = values.length > 1 ? !!(+values[1]) : true;","  }"]},{"id":729,"file":"js\\Frame.js","start":925,"end":989,"kind":"MethodDefinition","name":"Frame.getData","weight":1.2,"headline":"get return new ui nt clamped","preContext":["    this.mask = new Uint8Array(pixCount);    // 0/1 occupancy","","    this.clear();","  }"],"postContext":["getBuffer () { return this.data; }"]},{"id":730,"file":"test\\gameview.enableDebug.test.js","start":239,"end":406,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"timeout event listener function create window stub","preContext":["async getGame() { return {}; }"],"postContext":[]},{"id":731,"file":"js\\Stage.js","start":2576,"end":2869,"kind":"MethodDefinition","name":"Stage.handleOnMouseDown","weight":1.2,"headline":"stage image mouse const display pos handle","preContext":["      const pos = this.calcPosition2D(stageImage, e);","      stageImage.display.onDoubleClick.trigger(pos);","    });","  }"],"postContext":["handleOnMouseUp() {","    this.controller.onMouseUp.on((e) => {","      const stageImage = this.getStageImageAt(e.x, e.y);","      if (!stageImage || !stageImage.display) return;"]},{"id":732,"file":"js\\SkillPanelSprites.js","start":2334,"end":2399,"kind":"MethodDefinition","name":"SkillPanelSprites.getNumberSpriteEmpty","weight":1.2,"headline":"number sprite empty get return","preContext":["getNumberSpriteRight(number) {\r","    return this.numberSpriteRight[number];\r","  }"],"postContext":["getBackgroundPatch(x, y, w, h) {\r","    const src = this.panelSprite;\r","    const out = new Lemmings.Frame(w, h);\r","    for (let yy = 0; yy < h; yy++) {\r"]},{"id":733,"file":"js\\PaletteImage.js","start":1404,"end":1772,"kind":"MethodDefinition","name":"PaletteImage.processTransparentData","weight":1.2,"headline":"bu bit sr pos let process transparent","preContext":["processTransparentByColorIndex(transIdx) {\r","    const buf = this.pixBuf;\r","    for (let i = 0, n = buf.length; i < n; i++) if (buf[i] === transIdx) buf[i] |= 0x80;\r","  }"],"postContext":[]},{"id":734,"file":"js\\ParticleTable.js","start":2498,"end":3055,"kind":"MethodDefinition","name":"ParticleTable.decodeBase64Frames","weight":1.2,"headline":"frames window frame ob const bin let","preContext":["        a","      );","    }","  }"],"postContext":[]},{"id":735,"file":"test\\lemmingmanager.test.js","start":1661,"end":1700,"kind":"ClassDeclaration","name":"BashAction","weight":0.5,"headline":"action class bash extends dummy","preContext":["process() { return Lemmings.LemmingStateType.NO_STATE_TYPE; }"],"postContext":["class BlockAction extends DummyAction {}"]},{"id":736,"file":"js\\BitWriter.js","start":2310,"end":2930,"kind":"MethodDefinition","name":"BitWriter.copyReferencedData","weight":1.2,"headline":"pos offset length copy log referenced bit","preContext":["      outData[--outPos] = reader.read(8);\r","    }\r","    this.#outPos = outPos;\r","  }"],"postContext":["getFileReader(filename) {\r","    return new Lemmings.BinaryReader(this.#outData, null, null, filename);\r","  }"]},{"id":737,"file":"test\\gameresources.test.js","start":0,"end":3528,"kind":"Module","name":"root","weight":0.5,"headline":"lemmings orig provider palette container part let","preContext":[],"postContext":[]},{"id":738,"file":"test\\gameview.test.js","start":285,"end":452,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"timeout event listener function create window stub","preContext":[],"postContext":["function setupWindow() {","  global.window = {","    location: { search: '' },","    setTimeout,"]},{"id":739,"file":"js\\Game.js","start":4044,"end":4084,"kind":"MethodDefinition","name":"Game.start","weight":1.2,"headline":"game timer continue","preContext":["    if (this.guiDisplay) this.gameGui.setGuiDisplay(this.guiDisplay);","","    return this; // keeps legacy promise signature intact","  }"],"postContext":["stop () {","    this._disposeCurrentLevel();","    this.onGameEnd?.dispose();","    this.onGameEnd = null;"]},{"id":740,"file":"js\\BinaryReader.js","start":4427,"end":4464,"kind":"MethodDefinition","name":"BinaryReader.pos","weight":1.2,"headline":"pos get return","preContext":["get length() {","    return this.#length;","  }"],"postContext":["readByte(offset) {","    if (offset !== undefined && offset !== null) {","      this.#pos = (offset + this.#hiddenOffset);","    }"]},{"id":741,"file":"js\\FileProvider.js","start":2310,"end":2457,"kind":"MethodDefinition","name":"FileProvider._filenameFromUrl","weight":1.2,"headline":"ur return split filename substring last","preContext":["      path +","      (filename == null ? '' : '/' + filename)","    );","  }"],"postContext":["_loadFromLocalStorage(url, type, path = '') {","    try {","      const item = localStorage.getItem('lem-cache:' + url);","      if (!item) return null;"]},{"id":742,"file":"js\\GameTimer.js","start":2031,"end":2075,"kind":"MethodDefinition","name":"GameTimer.tps","weight":1.2,"headline":"get tps return frame time","preContext":["get speedFactor() { return this.#speedFactor; }"],"postContext":["set speedFactor(value) {","    if (value <= 0) return;","    if (this.#speedFactor === value) return;","    this.#speedFactor = value;"]},{"id":743,"file":"js\\LevelLoader.js","start":250,"end":4849,"kind":"MethodDefinition","name":"LevelLoader.getLevel","weight":1.2,"headline":"level reader const ground odd vg bu","preContext":["    this.fileProvider = fileProvider;","    this.config = config;","    this.levelIndexResolve = new Lemmings.LevelIndexResolve(config);","  }"],"postContext":[]},{"id":744,"file":"test\\gameview.start-existing.test.js","start":212,"end":224,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() {}","  getGameDisplay() { return {}; }","  getGuiDisplay() { return {}; }"]},{"id":745,"file":"test\\gameview.suspendWithColor.test.js","start":213,"end":225,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() {","    this.guiImgProps = { x: 10, y: 20, viewPoint: { scale: 2 } };","  }"]},{"id":746,"file":"test\\getNearestLemming.test.js","start":885,"end":921,"kind":"MethodDefinition","name":"DummyAction.triggerLemAction","weight":0.5,"headline":"trigger le action return false","preContext":["getActionName() { return 'dummy'; }"],"postContext":["process() { return Lemmings.LemmingStateType.NO_STATE_TYPE; }"]},{"id":747,"file":"test\\exportScripts.test.js","start":2318,"end":2418,"kind":"FunctionDeclaration","name":"patchScript","weight":0.5,"headline":"function patch script return new tools import","preContext":["  fs.writeFileSync(path.join(dir, 'GROUND0O.DAT'), Buffer.from([0]));","  fs.writeFileSync(path.join(dir, 'VGAGR0.DAT'), Buffer.from([0]));","  return dir;","}"],"postContext":["async function runScript(script, args, options = {}) {","  const origCwd = process.cwd();","  let error;","  const handler = e => { error = e; };"]},{"id":748,"file":"test\\gameview.controls.test.js","start":166,"end":178,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor() {}","  getGameDisplay() { return {}; }","  getGuiDisplay() { return {}; }"]},{"id":749,"file":"js\\CommandReleaseRateIncrease.js","start":388,"end":419,"kind":"MethodDefinition","name":"CommandReleaseRateIncrease.getCommandKey","weight":1.2,"headline":"get command key return","preContext":["save() { return []; }"],"postContext":[]},{"id":750,"file":"js\\GameGui.js","start":7305,"end":8386,"kind":"MethodDefinition","name":"GameGui.handleSkillMouseRightDown","weight":1.2,"headline":"game release rate panel min victory condition","preContext":["    }","    this.skills.setSelectedSkill(newSkill);","    this.game.queueCommand(new Lemmings.CommandSelectSkill(newSkill));","  }"],"postContext":["handleSkillDoubleClick(e) {","    if (Math.trunc(e.x / 16) === 11)","      this.game.queueCommand(new Lemmings.CommandNuke());","  }"]},{"id":751,"file":"js\\CommandNuke.js","start":489,"end":520,"kind":"MethodDefinition","name":"CommandNuke.getCommandKey","weight":1.2,"headline":"get command key return","preContext":["save() { return []; }"],"postContext":[]},{"id":752,"file":"js\\ConfigReader.js","start":130,"end":2268,"kind":"ClassDeclaration","name":"ConfigReader","weight":1.5,"headline":"conf game new level gs js let","preContext":[],"postContext":["constructor(configFile) {","    super();","    this.configs = new Promise((resolve, reject) => {","      configFile.then((jsonString) => {"]},{"id":753,"file":"js\\CommandReleaseRateDecrease.js","start":389,"end":420,"kind":"MethodDefinition","name":"CommandReleaseRateDecrease.getCommandKey","weight":1.2,"headline":"get command key return","preContext":["save() { return []; }"],"postContext":[]},{"id":754,"file":"test\\gameview.dispose.test.js","start":567,"end":608,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor dispose called","preContext":["  constructor() { this.disposeCalled = 0; }","  updateStageSize() {}","  dispose() { this.disposeCalled++; }","}"],"postContext":["updateStageSize() {}"]},{"id":755,"file":"test\\skillpanelsprites.test.js","start":559,"end":676,"kind":"ClassDeclaration","name":"FakeMaskList","weight":0.5,"headline":"label mask class fake list constructor get","preContext":["getAnimation(type, right) {","    return new FakeAnimation(`anim-${type}-${right}`);","  }"],"postContext":["constructor(label) { this.label = label; }"]},{"id":756,"file":"test\\loghandler.test.js","start":399,"end":425,"kind":"MethodDefinition","name":"Dummy.constructor","weight":0.5,"headline":"constructor super","preContext":["class Dummy extends Lemmings.BaseLogger {","  constructor() { super(); }","}"],"postContext":[]},{"id":757,"file":"js\\ViewPoint.js","start":1114,"end":1192,"kind":"MethodDefinition","name":"ViewPoint.getSceneY","weight":1.2,"headline":"math trun get scene return scale","preContext":["getSceneX(x) {","    return Math.trunc(x / this.scale) + Math.trunc(this.x);","  }"],"postContext":[]},{"id":758,"file":"js\\VGASpecReader.js","start":1195,"end":1226,"kind":"MethodDefinition","name":"VGASpecReader.img","weight":1.2,"headline":"im get return","preContext":["get groundPalette() { return this.#groundPalette; }"],"postContext":["#read(fr) {\r","    fr.setOffset(0);\r","    const fc = new Lemmings.FileContainer(fr);\r","    if (fc.count() !== 1) {\r"]},{"id":759,"file":"js\\UserInputManager.js","start":626,"end":6654,"kind":"MethodDefinition","name":"UserInputManager.constructor","weight":1.2,"headline":"constructor mouse relative client false touches touch","preContext":["      this.onZoom.trigger(evt);","    }","  }","}"],"postContext":["_addListener(type, handler) {","    this.listenElement.addEventListener(type, handler);","    this._listeners.push([type, handler]);","  }"]},{"id":760,"file":"test\\groundrenderer.test.js","start":521,"end":585,"kind":"MethodDefinition","name":"MockStage.createImage","weight":0.5,"headline":"image create display return new simple","preContext":["constructor() { this.display = null; }"],"postContext":["getGameDisplay() {","    if (!this.display) this.display = new DisplayImage(this);","    return this.display;","  }"]},{"id":761,"file":"js\\UnpackFilePart.js","start":1504,"end":1563,"kind":"MethodDefinition","name":"UnpackFilePart.initialBufferLen","weight":1.2,"headline":"initial set","preContext":["get initialBufferLen() { return this.#initialBufferLen; }"],"postContext":["get checksum() { return this.#checksum; }"]},{"id":762,"file":"js\\TriggerManager.js","start":2578,"end":3205,"kind":"MethodDefinition","name":"TriggerManager.trigger","weight":1.2,"headline":"tick trigger const bucket return lemmings types","preContext":["      if (tr.owner === owner) this.#remove(tr);\r","    }\r","    this._debugFrame = null;\r","  }"],"postContext":["renderDebug (g) {\r","    const cs   = this._cellSize;\r","    const tick = this.gameTimer.getGameTicks();\r","    for (let r = 0; r < this._rows; ++r) {\r"]},{"id":763,"file":"js\\GameDisplay.js","start":1398,"end":1853,"kind":"MethodDefinition","name":"GameDisplay.render","weight":1.2,"headline":"lemming render display sel hover manager removed","preContext":["      }","    };","    this.display.onMouseMove.on(this._mouseMoveHandler);","  }"],"postContext":["renderDebug() {","    if (this.display == null)","      return;","    this.level.renderDebug(this.display);"]},{"id":764,"file":"js\\ActionWalkSystem.js","start":325,"end":547,"kind":"MethodDefinition","name":"ActionWalkSystem.getGroundStepHeight","weight":1.2,"headline":"slice ground const return get step let","preContext":["triggerLemAction(lem) {","    return false;","  }"],"postContext":["getGroundGapDepth(slice) {","    const { height } = slice;","    for (let i = 0; i < height; i++) {","      if (slice.hasGroundAt(0, i)) {"]},{"id":765,"file":"js\\ActionBashSystem.js","start":1541,"end":1703,"kind":"MethodDefinition","name":"ActionBashSystem.findGapDelta","weight":1.2,"headline":"ground mask return find gap delta let","preContext":["    }","","    return Lemmings.LemmingStateType.NO_STATE_TYPE;","  }"],"postContext":["findHorizontalSpace(groundMask, x, y, lookRight) {","    for (let i = 0; i < 4; i++) {","      if (groundMask.hasGroundAt(x, y)) {","        return i;"]},{"id":766,"file":"js\\SolidLayer.js","start":529,"end":675,"kind":"MethodDefinition","name":"SolidLayer.hasMaskAt","weight":1.2,"headline":"mask return false","preContext":["hasGroundAt(x, y) {","    return (this.hasMaskAt(x,y));","  }"],"postContext":["clearGroundAt(x, y) {","    this.clearMaskAt(x, y);","  }"]},{"id":767,"file":"test\\gamedisplay.test.js","start":431,"end":539,"kind":"MethodDefinition","name":"MockStage.createImage","weight":0.5,"headline":"create image display return new ui nt","preContext":["constructor() {","    this.display = null;","  }"],"postContext":["getGameDisplay() {","    if (!this.display) this.display = new DisplayImage(this);","    return this.display;","  }"]},{"id":768,"file":"test\\gamegui.behavior.test.js","start":725,"end":764,"kind":"MethodDefinition","name":"TimerStub.getGameLeftTimeString","weight":0.5,"headline":"get game time string return","preContext":["getGameTime() { return 0; }"],"postContext":["class VictoryStub {","  constructor() {","    this.min = 0;","    this.max = 99;"]},{"id":769,"file":"test\\action-drown-explode.test.js","start":746,"end":779,"kind":"MethodDefinition","name":"StubLevel.key","weight":0.5,"headline":"key return","preContext":["constructor() { this.ground = new Set(); this.clearedMasks = []; }"],"postContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"]},{"id":770,"file":"test\\action-mine-system.test.js","start":623,"end":683,"kind":"MethodDefinition","name":"StubLemming.getDirection","weight":0.5,"headline":"get direction return look","preContext":["constructor() { this.x = 0; this.y = 0; this.lookRight = true; this.frameIndex = 0; }"],"postContext":["class StubLevel {","  constructor() { this.ground = new Set(); this.cleared = []; this.steel = false; this.arrow = false; }","  key(x, y) { return `${x},${y}`; }","  hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"]},{"id":771,"file":"test\\action-systems-extra.test.js","start":807,"end":842,"kind":"MethodDefinition","name":"StubLemming.disable","weight":0.5,"headline":"disable disabled true","preContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"],"postContext":["class StubLevel { hasGroundAt() { return false; } }"]},{"id":772,"file":"test\\action-systems.test.js","start":2373,"end":3496,"kind":"ClassDeclaration","name":"StubLevel","weight":0.5,"headline":"ground return key steel mask set cleared","preContext":["getCountDownTime() { return 8 - (this.countdown >> 4); }"],"postContext":["constructor() {","    this.ground = new Set();","    this.clearedMasks = [];","    this.setGroundCalls = [];"]},{"id":773,"file":"test\\bench-entrance-placement.test.js","start":577,"end":608,"kind":"MethodDefinition","name":"StageStub.getGameDisplay","weight":0.5,"headline":"get game display return","preContext":["constructor() {}"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":774,"file":"test\\bench-sequence.test.js","start":454,"end":484,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return { clear() {}, setScreenPosition() {}, redraw() {} }; }"],"postContext":["setCursorSprite() {}"]},{"id":775,"file":"test\\bench-tps.test.js","start":930,"end":1004,"kind":"MethodDefinition","name":"DisplayImageStub.worldDataSize","weight":0.5,"headline":"get world size return","preContext":["getHeight() { return this.height; }"],"postContext":["drawFrame(frame, x, y) { this.calls.push({ op: 'drawFrame', frame, x, y }); }"]},{"id":776,"file":"js\\GameView.js","start":3869,"end":3954,"kind":"MethodDefinition","name":"GameView.cheat","weight":1.2,"headline":"cheat game null return","preContext":["async loadReplay(replayString) {","    await this.start(replayString);","  }"],"postContext":["suspend() {","    if (this.game == null) {","      return;","    }"]},{"id":777,"file":"js\\Lemming.js","start":869,"end":1215,"kind":"MethodDefinition","name":"Lemming.getClickDistance","weight":1.2,"headline":"center let return get click distance","preContext":["    if (this.countdown > 0) return false;","    this.countdown = 80;","    return true;","  }"],"postContext":["render(gameDisplay) {","    if (!this.action) return;","    if (this.countdownAction != null) {","      this.countdownAction.draw(gameDisplay, this);"]},{"id":778,"file":"js\\GameVictoryCondition.js","start":983,"end":1040,"kind":"MethodDefinition","name":"GameVictoryCondition.getMinReleaseRate","weight":1.2,"headline":"min release rate get return","preContext":["boundToRange(min, value, max) {","    return Math.min(max, Math.max(min, value | 0)) | 0;","  }"],"postContext":["getCurrentReleaseRate() {","    if (lemmings.bench == true && !lemmings._benchMeasureExtras) {","      return 99;","    }"]},{"id":779,"file":"js\\LemmingsSprite.js","start":5617,"end":5682,"kind":"MethodDefinition","name":"LemmingsSprite.lemmingAnimation","weight":1.2,"headline":"lemming animation get return slice","preContext":["get colorPalette() { return this.#colorPalette; }"],"postContext":[]},{"id":780,"file":"js\\xbrz\\xbrz.js","start":506,"end":590,"kind":"MethodDefinition","name":"BlendResult.constructor","weight":1.2,"headline":"constructor","preContext":["    this.j = 0;","    this.k = 0;","  }","}"],"postContext":["reset () {","    this.f = 0;","    this.g = 0;","    this.j = 0;"]},{"id":781,"file":"js\\LevelReader.js","start":4573,"end":4760,"kind":"MethodDefinition","name":"LevelReader.readLevelName","weight":1.2,"headline":"level read fr properties string log debug","preContext":["\r","      this.steel.push(newRange);\r","    }\r","  }"],"postContext":[]},{"id":782,"file":"test\\gamegui.test.js","start":953,"end":1027,"kind":"MethodDefinition","name":"DisplayImageStub.worldDataSize","weight":0.5,"headline":"get world size return","preContext":["getHeight() { return this.height; }"],"postContext":["drawFrame(frame, x, y) { this.calls.push({ op: 'drawFrame', frame, x, y }); }"]},{"id":783,"file":"index.html","start":1600,"end":2400,"kind":"Blob","name":"blob","weight":1,"headline":"opt let web midi lemmings error display","preContext":["      const inputSelect = document.getElementById(\"midiInSelect\");","      const outputSelect = document.getElementById(\"midiOutSelect\");","      // Display available MIDI input devices","      if (WebMidi.inputs.length < 1)"],"postContext":["   lemmings.elementSelectGameType = document.getElementById(\"gameTypeSelect\");","      lemmings.elementSelectLevelGroup = document.getElementById(\"levelGroupSelect\");","      lemmings.elementSelectLevel = document.getElementById(\"levelIndexSelect\");","      lemmings.gameCanvas = document.getElementById(\"gameCanvas\");"]},{"id":784,"file":"js\\DisplayImage.js","start":879,"end":1456,"kind":"MethodDefinition","name":"DisplayImage.constructor","weight":1.2,"headline":"constructor mouse new lemmings event handler stage","preContext":["    this.imgData = null;","    this.stage = null;","  }","}"],"postContext":["getWidth()  { return this.imgData?.width  ?? 0; }"]},{"id":785,"file":"test\\nodefileprovider.test.js","start":0,"end":6327,"kind":"Module","name":"root","weight":0.5,"headline":"zip provider const dir ra await txt","preContext":[],"postContext":[]},{"id":786,"file":"test\\lemming.test.js","start":0,"end":4196,"kind":"Module","name":"root","weight":0.5,"headline":"action lemmings js import lemming const stub","preContext":[],"postContext":[]},{"id":787,"file":"test\\gameview.canvas-reset.test.js","start":558,"end":578,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["constructor() { this.disposeCalled = 0; }"],"postContext":["dispose() { this.disposeCalled++; }"]},{"id":788,"file":"js\\GameSkills.js","start":423,"end":630,"kind":"MethodDefinition","name":"GameSkills.selectFirstAvailable","weight":1.2,"headline":"skill lemmings types select first available let","preContext":["    this.cheatMode = false;","    // automatically select a valid skill when a level loads","    this.selectFirstAvailable();","  }"],"postContext":["canReuseSkill(type) {","    if (this.cheatMode) return true;","    return (this.skills[type] > 0);","  }"]},{"id":789,"file":"js\\ActionExplodingSystem.js","start":520,"end":565,"kind":"MethodDefinition","name":"ActionExplodingSystem.triggerLemAction","weight":1.2,"headline":"le trigger action return false","preContext":["    });","    this.triggerManager = triggerManager;","    this.particleTable = particleTable;","  }"],"postContext":["draw(gameDisplay, lem) {","    if (lem.frameIndex == 0) {","      const ani = this.sprites.get('both');","      const frame = ani.getFrame(lem.frameIndex);"]},{"id":790,"file":"js\\KeyboardShortcuts.js","start":518,"end":835,"kind":"MethodDefinition","name":"KeyboardShortcuts.dispose","weight":1.2,"headline":"ra window null cancel animation frame remove","preContext":["    this.zoom = { dir:0,v:0,reset:null };","    this._raf = null;","    this._last = 0;","  }"],"postContext":["_startLoop() {","    if (!this._raf) {","      this._last = performance.now();","      this._raf = requestAnimationFrame((t) => this._step(t));"]},{"id":791,"file":"js\\ColorPalette.js","start":454,"end":514,"kind":"MethodDefinition","name":"ColorPalette.getG","weight":1.2,"headline":"get return","preContext":["getR(index) {","    return this.data[index] & 0xFF;","  }"],"postContext":["getB(index) {","    return (this.data[index] >> 16) & 0xFF;","  }"]},{"id":792,"file":"js\\CommandManager.js","start":1688,"end":1938,"kind":"MethodDefinition","name":"CommandManager.parseCommand","weight":1.2,"headline":"values command str new return const subst","preContext":["    case 'd': return new Lemmings.CommandReleaseRateDecrease();","    default: return null;","    }","  }"],"postContext":["queueCommand(newCommand) {","    const currentTick = this.gameTimer?.getGameTicks();","    if (currentTick == null) return;",""]},{"id":793,"file":"test\\minimap.test.js","start":1601,"end":1799,"kind":"FunctionDeclaration","name":"makeStage","weight":0.5,"headline":"display level return world size function make","preContext":["    objects: [],","    getGroundMaskLayer() { return mask; }","  };","}"],"postContext":[]},{"id":794,"file":"js\\LogHandler.js","start":790,"end":847,"kind":"MethodDefinition","name":"Logger.log","weight":1.2,"headline":"msg exception log error","preContext":["        console.error(`${this._moduleName}\\t${exception.message}`);","      }","    }","  }"],"postContext":["debug(msg) {","    if (!this._enabled()) return;","    if (typeof msg === 'string') {","      console.log(`${this._moduleName}\\t${msg}`);"]},{"id":795,"file":"test\\action-base-system.test.js","start":555,"end":595,"kind":"MethodDefinition","name":"StubMasks.GetMask","weight":0.5,"headline":"mask get return","preContext":["class StubMasks {","  GetMask(type) { return `mask-${type}`; }","}"],"postContext":["class StubLemming {","  constructor() {","    this.action = null;","    this.frameIndex = 0;"]},{"id":796,"file":"test\\gameview.loadlevel-missing.test.js","start":599,"end":629,"kind":"MethodDefinition","name":"StageStub.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return this.gameDisplay; }"],"postContext":["setCursorSprite() {}"]},{"id":797,"file":"test\\gameview.loadlevel.test.js","start":642,"end":672,"kind":"MethodDefinition","name":"StageStub.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return this.gameDisplay; }"],"postContext":["setCursorSprite() {}"]},{"id":798,"file":"test\\gameview.onGameEnd.test.js","start":479,"end":509,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return {}; }"],"postContext":["setCursorSprite() {}"]},{"id":799,"file":"test\\keyboardshortcuts.loop.test.js","start":1007,"end":1033,"kind":"MethodDefinition","name":"StageStub.snapScale","weight":0.5,"headline":"snap scale return","preContext":["clear(img) { this.clears.push(img); }"],"postContext":["limitValue(min, val, max) { return Math.min(Math.max(val, min), max); }"]},{"id":800,"file":"js\\vendor\\hqx\\squooshhqx.js","start":2529,"end":2622,"kind":"FunctionDeclaration","name":"__wbg_get_imports","weight":2,"headline":"imports wb function get const return","preContext":["      return instance;","    }","  }","}"],"postContext":["function __wbg_init_memory(imports, maybe_memory) {","","}"]},{"id":801,"file":"js\\LemmingManager.js","start":860,"end":18971,"kind":"ClassDeclaration","name":"LemmingManager","weight":1.5,"headline":"lemmings le lemming state const new tick","preContext":[],"postContext":["constructor(level, lemmingsSprite, triggerManager, gameVictoryCondition, masks, particleTable) {","    super();","    Lemmings.withPerformance(","      'LemmingManager constructor',"]},{"id":802,"file":"js\\Level.js","start":778,"end":11513,"kind":"ClassDeclaration","name":"Level","weight":1.5,"headline":"mask new steel const ground color let","preContext":[],"postContext":["constructor(width, height) {","    super();","    this.width = width | 0;","    this.height = height | 0;"]},{"id":803,"file":"js\\GameResources.js","start":128,"end":2464,"kind":"ClassDeclaration","name":"GameResources","weight":1.5,"headline":"get level main new dat return container","preContext":[],"postContext":["constructor(fileProvider, config) {","    super();","    this.fileProvider = fileProvider;","    this.config = config;"]},{"id":804,"file":"js\\GameFactory.js","start":1276,"end":1523,"kind":"MethodDefinition","name":"GameFactory.createFromConfig","weight":1.2,"headline":"game conf level group const res new","preContext":["        resolve(new Lemmings.GameResources(this.fileProvider, config));","      });","    });","  }"],"postContext":[]},{"id":805,"file":"js\\Lemming.js","start":1219,"end":1413,"kind":"MethodDefinition","name":"Lemming.render","weight":1.2,"headline":"action game display countdown draw render return","preContext":["      return ((yCenter - y) * (yCenter - y) + (xCenter - x) * (xCenter - x));","    }","    return -1;","  }"],"postContext":["renderDebug(gameDisplay) {","    if (!this.action) return;","    gameDisplay.setDebugPixel(this.x, this.y);","  }"]},{"id":806,"file":"js\\GameView.js","start":3958,"end":4062,"kind":"MethodDefinition","name":"GameView.suspend","weight":1.2,"headline":"game suspend null return get timer","preContext":["      return;","    }","    this.game.cheat();","  }"],"postContext":["suspendWithColor(color) {","    if (this.game == null) {","      return;","    }"]},{"id":807,"file":"test\\bench-tps.test.js","start":1007,"end":1084,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrame","weight":0.5,"headline":"frame draw calls push op","preContext":["get worldDataSize() { return { width: this.width, height: this.height }; }"],"postContext":["drawFrameCovered(frame, x, y) { this.calls.push({ op: 'drawFrameCovered', frame, x, y }); }"]},{"id":808,"file":"test\\bench-sequence.test.js","start":487,"end":507,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":809,"file":"test\\bench-entrance-placement.test.js","start":609,"end":639,"kind":"MethodDefinition","name":"StageStub.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":810,"file":"test\\action-systems.test.js","start":2393,"end":2622,"kind":"MethodDefinition","name":"StubLevel.constructor","weight":0.5,"headline":"constructor ground false set cleared steel new","preContext":["  setGroundAt(x, y) { this.setGroundCalls.push(this.key(x, y)); this.ground.add(this.key(x, y)); }","  isSteelGround(x, y) { return this.steelGround(this.key(x, y)); }","  isOutOfLevel(y) { return y < 0 || y >= 50; }","}"],"postContext":["key(x, y) { return `${x},${y}`; }"]},{"id":811,"file":"test\\action-systems-extra.test.js","start":846,"end":897,"kind":"ClassDeclaration","name":"StubLevel","weight":0.5,"headline":"class stub level ground return false","preContext":["disable() { this.disabled = true; }"],"postContext":["hasGroundAt() { return false; }"]},{"id":812,"file":"test\\action-mine-system.test.js","start":687,"end":1067,"kind":"ClassDeclaration","name":"StubLevel","weight":0.5,"headline":"class stub level constructor ground return steel","preContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"],"postContext":["constructor() { this.ground = new Set(); this.cleared = []; this.steel = false; this.arrow = false; }"]},{"id":813,"file":"test\\action-drown-explode.test.js","start":782,"end":843,"kind":"MethodDefinition","name":"StubLevel.hasGroundAt","weight":0.5,"headline":"ground return key","preContext":["key(x, y) { return `${x},${y}`; }"],"postContext":["clearGroundWithMask(mask, x, y) { this.clearedMasks.push({ mask, x, y }); return true; }"]},{"id":814,"file":"test\\gamegui.behavior.test.js","start":768,"end":1127,"kind":"ClassDeclaration","name":"VictoryStub","weight":0.5,"headline":"class victory stub constructor current get return","preContext":["getGameLeftTimeString() { return '0'; }"],"postContext":["constructor() {","    this.min = 0;","    this.max = 99;","    this.current = 10;"]},{"id":815,"file":"test\\gamedisplay.test.js","start":542,"end":651,"kind":"MethodDefinition","name":"MockStage.getGameDisplay","weight":0.5,"headline":"display get game new image return","preContext":["createImage(display, w, h) {","    return { data: new Uint8ClampedArray(w * h * 4), width: w, height: h };","  }"],"postContext":[]},{"id":816,"file":"js\\SolidLayer.js","start":679,"end":732,"kind":"MethodDefinition","name":"SolidLayer.clearGroundAt","weight":1.2,"headline":"clear ground mask","preContext":["hasMaskAt(x, y) {","    if (x < 0 || x >= this.width || y < 0 || y >= this.height) return false;","    return this.mask[x + y * this.width] !== 0;","  }"],"postContext":["clearMaskAt(x, y) {","    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {","      this.mask[x + y * this.width] = 0;","    }"]},{"id":817,"file":"js\\ActionBashSystem.js","start":1706,"end":1915,"kind":"MethodDefinition","name":"ActionBashSystem.findHorizontalSpace","weight":1.2,"headline":"ground mask look return find horizontal space","preContext":["      }","    }","    return 3;","  }"],"postContext":[]},{"id":818,"file":"js\\ActionWalkSystem.js","start":551,"end":746,"kind":"MethodDefinition","name":"ActionWalkSystem.getGroundGapDepth","weight":1.2,"headline":"slice ground return get gap depth const","preContext":["      }","    }","    return height;","  }"],"postContext":["process(level, lem) {","    lem.frameIndex++;","    const prevX = lem.x;","    lem.x += (lem.lookRight ? 1 : -1);"]},{"id":819,"file":"js\\GameDisplay.js","start":1856,"end":2304,"kind":"MethodDefinition","name":"GameDisplay.renderDebug","weight":1.2,"headline":"display render debug lemming hover dash offset","preContext":["        this.#drawHover(this.hoverLemming);","      }","    }","  }"],"postContext":["#drawCorner(x, y, r, g, b) {","    this.display.drawRect(x, y, 2, 2, r, g, b, true);","  }"]},{"id":820,"file":"js\\TriggerManager.js","start":3254,"end":4083,"kind":"MethodDefinition","name":"TriggerManager.renderDebug","weight":1.2,"headline":"cs tick draw debug const rect frame","preContext":["      }\r","    }\r","    return Lemmings.TriggerTypes.NO_TRIGGER;\r","  }"],"postContext":["#buildDebugFrame() {\r","    const frame = new Lemmings.Frame(this._levelW, this._levelH);\r","    const color = Lemmings.ColorPalette.colorFromRGB(255, 0, 0);\r","    for (const tr of this._triggers) {\r"]},{"id":821,"file":"js\\UnpackFilePart.js","start":1615,"end":1656,"kind":"MethodDefinition","name":"UnpackFilePart.checksum","weight":1.2,"headline":"checksum get return","preContext":["set initialBufferLen(val) { this.#initialBufferLen = val; }"],"postContext":["set checksum(val) { this.#checksum = val; }"]},{"id":822,"file":"test\\groundrenderer.test.js","start":588,"end":697,"kind":"MethodDefinition","name":"MockStage.getGameDisplay","weight":0.5,"headline":"display get game new image return","preContext":["createImage(display, w, h) { return new SimpleImageData(w, h); }"],"postContext":["function makePalette(color) {","  const pal = new Lemmings.ColorPalette();","  pal.setColorInt(1, color);","  return pal;"]},{"id":823,"file":"js\\UserInputManager.js","start":6658,"end":6790,"kind":"MethodDefinition","name":"UserInputManager._addListener","weight":1.2,"headline":"handler add listener listen element event listeners","preContext":["      this.handleWheel(relativePos, -e.deltaY);","      return false;","    });","  }"],"postContext":["dispose() {","    for (const [type, handler] of this._listeners) {","      this.listenElement.removeEventListener(type, handler);","    }"]},{"id":824,"file":"js\\VGASpecReader.js","start":1358,"end":1675,"kind":"MethodDefinition","name":"VGASpecReader.read","weight":1.2,"headline":"part read fr fc const container log","preContext":["get img() { return this.#img; }"],"postContext":["#readImage(fr, offset) {\r","    fr.setOffset(offset);\r","    const width = 960, chunkHeight = 40, groundImagePositionX = 304;\r","    let startScanLine = 0;\r"]},{"id":825,"file":"test\\skillpanelsprites.test.js","start":582,"end":624,"kind":"MethodDefinition","name":"FakeMaskList.constructor","weight":0.5,"headline":"constructor label","preContext":["class FakeMaskList {","  constructor(label) { this.label = label; }","  GetMask(idx) { return `${this.label}-${idx}`; }","}"],"postContext":["GetMask(idx) { return `${this.label}-${idx}`; }"]},{"id":826,"file":"test\\gameview.dispose.test.js","start":611,"end":631,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["constructor() { this.disposeCalled = 0; }"],"postContext":["dispose() { this.disposeCalled++; }"]},{"id":827,"file":"js\\ConfigReader.js","start":181,"end":419,"kind":"MethodDefinition","name":"ConfigReader.constructor","weight":1.2,"headline":"constructor conf js resolve string super gs","preContext":["    }","    return gameConfigs;","  }","}"],"postContext":["getConfig(gameType) {","    if (gameType == 0) {","      this.log.log('tried to get gametype 0?');","      return;"]},{"id":828,"file":"js\\GameGui.js","start":8390,"end":8516,"kind":"MethodDefinition","name":"GameGui.handleSkillDoubleClick","weight":1.2,"headline":"command handle skill double click math trun","preContext":["      this.game.showDebug = !this.game.showDebug;","      return;","    }","  }"],"postContext":["handleMouseMove(e) {","    const rawIdx = e.y > 15 ? Math.trunc(e.x / 16) : -1;","    let idx = rawIdx;",""]},{"id":829,"file":"test\\gameview.controls.test.js","start":181,"end":389,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"stage get display return fade class mock","preContext":["dispose() {}"],"postContext":["constructor() {}"]},{"id":830,"file":"test\\exportScripts.test.js","start":2420,"end":2954,"kind":"FunctionDeclaration","name":"runScript","weight":0.5,"headline":"wd process options error script const handler","preContext":["function patchScript(name) {","  return fileURLToPath(new URL(`../tools/${name}`, import.meta.url));","}"],"postContext":[]},{"id":831,"file":"test\\getNearestLemming.test.js","start":924,"end":985,"kind":"MethodDefinition","name":"DummyAction.process","weight":0.5,"headline":"process return lemmings lemming state","preContext":["triggerLemAction() { return false; }"],"postContext":[]},{"id":832,"file":"test\\gameview.suspendWithColor.test.js","start":228,"end":548,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"stage gu get display fade color class","preContext":["dispose() {}"],"postContext":["constructor() {","    this.guiImgProps = { x: 10, y: 20, viewPoint: { scale: 2 } };","  }"]},{"id":833,"file":"test\\gameview.start-existing.test.js","start":227,"end":435,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"stage get display return fade class mock","preContext":["dispose() {}"],"postContext":["constructor() {}"]},{"id":834,"file":"js\\GameTimer.js","start":2078,"end":2318,"kind":"MethodDefinition","name":"GameTimer.speedFactor","weight":1.2,"headline":"speed factor return set update frame time","preContext":["get tps() { return 1000 / this.#frameTime; }"],"postContext":["get frameTime() { return this.#frameTime; }"]},{"id":835,"file":"js\\FileProvider.js","start":2461,"end":3055,"kind":"MethodDefinition","name":"FileProvider._loadFromLocalStorage","weight":1.2,"headline":"ur entry item const cache return null","preContext":["    if (!url) return '';","    url = url.split('#')[0].split('?')[0];","    return url.substring(url.lastIndexOf('/') + 1);","  }"],"postContext":["async _verifyCache(url, entry) {","    const head = await this._fetchHead(url);","    if (!head) return;","    if (entry.etag && head.etag && entry.etag === head.etag) return;"]},{"id":836,"file":"js\\BinaryReader.js","start":4759,"end":5106,"kind":"MethodDefinition","name":"BinaryReader.readByte","weight":1.2,"headline":"offset pos read length log return byte","preContext":["get pos() {","    return this.#pos;","  }"],"postContext":["readInt(length = 4, offset) {","    if (offset == null) offset = this.#pos;","    if (length === 4) {","      // Fast path for 4 bytes, little-endian"]},{"id":837,"file":"js\\Game.js","start":4088,"end":4192,"kind":"MethodDefinition","name":"Game.stop","weight":1.2,"headline":"dispose game stop current level null","preContext":["start () { this.gameTimer?.continue(); }"],"postContext":["getGameTimer        () { return this.gameTimer; }"]},{"id":838,"file":"test\\gameview.test.js","start":523,"end":694,"kind":"FunctionDeclaration","name":"setupWindow","weight":0.5,"headline":"window timeout event listener function setup global","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":["class KeyboardShortcutsMock {","  constructor() {}","  dispose() {}","}"]},{"id":839,"file":"js\\BitWriter.js","start":3128,"end":3234,"kind":"MethodDefinition","name":"BitWriter.getFileReader","weight":1.2,"headline":"reader filename null get return new lemmings","preContext":["      outData[--outPos] = outData[outPos + offset];\r","    }\r","    this.#outPos = outPos;\r","  }"],"postContext":["eof() {\r","    return this.#outPos <= 0;\r","  }"]},{"id":840,"file":"test\\lemmingmanager.test.js","start":1701,"end":1741,"kind":"ClassDeclaration","name":"BlockAction","weight":0.5,"headline":"action class extends dummy","preContext":["class BashAction extends DummyAction {}"],"postContext":["class DigAction extends DummyAction {}"]},{"id":841,"file":"js\\SkillPanelSprites.js","start":2469,"end":2865,"kind":"MethodDefinition","name":"SkillPanelSprites.getBackgroundPatch","weight":1.2,"headline":"xx sr const ds let get background","preContext":["getNumberSpriteEmpty() {\r","    return this.emptyNumberSprite;\r","  }"],"postContext":["createTiledBackground(x, y, w, h, outW, outH) {\r","    const patch = this.getBackgroundPatch(x, y, w, h);\r","    const out = new Lemmings.Frame(outW, outH);\r","    for (let yy = 0; yy < outH; yy++) {\r"]},{"id":842,"file":"js\\Stage.js","start":2873,"end":3160,"kind":"MethodDefinition","name":"Stage.handleOnMouseUp","weight":1.2,"headline":"stage image mouse const display pos handle","preContext":["      const pos = this.calcPosition2D(stageImage, e);","      stageImage.display.onMouseDown.trigger(pos);","    });","  }"],"postContext":["handleOnMouseRightDown() {","    this.controller.onMouseRightDown.on((e) => {","      const stageImage = this.getStageImageAt(e.x, e.y);","      if (!stageImage || !stageImage.display) return;"]},{"id":843,"file":"js\\Frame.js","start":992,"end":1026,"kind":"MethodDefinition","name":"Frame.getBuffer","weight":1.2,"headline":"get return","preContext":["getData   () { return new Uint8ClampedArray(this.data.buffer); }"],"postContext":["getMask   () { return this.mask; }"]},{"id":844,"file":"js\\CommandSelectSkill.js","start":764,"end":873,"kind":"MethodDefinition","name":"CommandSelectSkill.load","weight":1.2,"headline":"values load skill apply length true","preContext":["      }","    }","    return changed;","  }"],"postContext":["save() {","    const out = [+(this.skill)];","    if (!this.apply) out.push(0);","    return out;"]},{"id":845,"file":"js\\GroundReader.js","start":2528,"end":2575,"kind":"MethodDefinition","name":"GroundReader.getTerrainImages","weight":1.2,"headline":"terrain get images return im","preContext":["    // Decode bitmaps – these calls can be parallelised in WebWorkers later.","    this._readImages(this.imgObjects, vgaObject, /*bpp=*/4);","    this._readImages(this.imgTerrain, vgaTerrain, /*bpp=*/3);","  }"],"postContext":["getObjectImages () { return this.imgObjects; }"]},{"id":846,"file":"js\\MiniMap.js","start":1852,"end":2423,"kind":"MethodDefinition","name":"MiniMap.handleMouseDown","weight":1.2,"headline":"const gd des event world size new","preContext":["    for (const [event, handler] of this._displayListeners) {","      this.guiDisplay[event].on(handler);","    }","  }"],"postContext":["#handleMouseUp(event){","    if (!this.guiDisplay) return;","    this._mouseDown = false;","    const gd = this.guiDisplay;"]},{"id":847,"file":"test\\gameview.dispose.test.js","start":634,"end":669,"kind":"MethodDefinition","name":"StageMock.dispose","weight":0.5,"headline":"dispose called","preContext":["updateStageSize() {}"],"postContext":["class GameFactoryStub {","  constructor() {}","}"]},{"id":848,"file":"test\\skillpanelsprites.test.js","start":627,"end":674,"kind":"MethodDefinition","name":"FakeMaskList.GetMask","weight":0.5,"headline":"get mask return label","preContext":["constructor(label) { this.label = label; }"],"postContext":["class FakeMasks {","  GetMask(type) {","    return new FakeMaskList(`mask-${type}`);","  }"]},{"id":849,"file":"js\\VGASpecReader.js","start":1841,"end":3379,"kind":"MethodDefinition","name":"VGASpecReader.readImage","weight":1.2,"headline":"bit byte image fr cur const chunk","preContext":["    const part = fc.getPart(0);\r","    this.#readPalettes(part, 0);\r","    this.#readImage(part, 40);\r","  }"],"postContext":["#readPalettes(fr, offset) {\r","    fr.setOffset(offset);\r","    for (let i = 0; i < 8; i++) {\r","      const r = fr.readByte() << 2;\r"]},{"id":850,"file":"js\\UserInputManager.js","start":6794,"end":6961,"kind":"MethodDefinition","name":"UserInputManager.dispose","weight":1.2,"headline":"handler listeners dispose const listen element remove","preContext":["_addListener(type, handler) {","    this.listenElement.addEventListener(type, handler);","    this._listeners.push([type, handler]);","  }"],"postContext":["#setMouseDownState(position, buttonNum) {","    this.mouseButton = true;","    this.mouseButtonNumber = buttonNum;","    this.mouseDownX = position.x;"]},{"id":851,"file":"test\\groundrenderer.test.js","start":701,"end":818,"kind":"FunctionDeclaration","name":"makePalette","weight":0.5,"headline":"color pal palette function make const new","preContext":["getGameDisplay() {","    if (!this.display) this.display = new DisplayImage(this);","    return this.display;","  }"],"postContext":["function makeTerrain(arr, width, height, palette) {","  return { width, height, frames: [Uint8Array.from(arr)], palette };","}"]},{"id":852,"file":"js\\UnpackFilePart.js","start":1660,"end":1703,"kind":"MethodDefinition","name":"UnpackFilePart.checksum","weight":1.2,"headline":"checksum set","preContext":["get checksum() { return this.#checksum; }"],"postContext":["get decompressedSize() { return this.#decompressedSize; }"]},{"id":853,"file":"js\\TriggerManager.js","start":4163,"end":4554,"kind":"MethodDefinition","name":"TriggerManager.buildDebugFrame","weight":1.2,"headline":"tr frame color const debug lemmings level","preContext":["    }\r","    if (!this._debugFrame) this.#buildDebugFrame();\r","    g.drawFrame(this._debugFrame, 0, 0);\r","  }"],"postContext":["#insert (trigger) {\r","    /* normalise & clamp bounds */\r","    let x0 = Math.max(0, Math.min(this._maxX, Math.min(trigger.x1, trigger.x2)));\r","    let x1 = Math.max(0, Math.min(this._maxX, Math.max(trigger.x1, trigger.x2)));\r"]},{"id":854,"file":"js\\GameDisplay.js","start":2308,"end":2394,"kind":"MethodDefinition","name":"GameDisplay.drawCorner","weight":1.2,"headline":"draw corner display rect true","preContext":["      this.display.drawDashedRect(x, y, 10, 13, 3, this._dashOffset);","      this._dashOffset = (this._dashOffset + 1) % 6;","    }","  }"],"postContext":["#drawSelection(lem) {","    const x = lem.x - 5;","    const y = lem.y - 11; // sits a bit higher",""]},{"id":855,"file":"js\\ActionWalkSystem.js","start":749,"end":2012,"kind":"MethodDefinition","name":"ActionWalkSystem.process","weight":1.2,"headline":"le delta lemmings lemming state ground return","preContext":["      }","    }","    return height + 1;","  }"],"postContext":[]},{"id":856,"file":"js\\SolidLayer.js","start":736,"end":871,"kind":"MethodDefinition","name":"SolidLayer.clearMaskAt","weight":1.2,"headline":"mask clear","preContext":["clearGroundAt(x, y) {","    this.clearMaskAt(x, y);","  }"],"postContext":["setGroundAt(x, y) {","    this.setMaskAt(x, y);","  }"]},{"id":857,"file":"test\\gamegui.behavior.test.js","start":790,"end":869,"kind":"MethodDefinition","name":"VictoryStub.constructor","weight":0.5,"headline":"constructor min max current","preContext":["  setCurrentReleaseRate(v) { this.current = v; }","  getOutCount() { return 0; }","  getSurvivorPercentage() { return 0; }","}"],"postContext":["getMinReleaseRate() { return this.min; }"]},{"id":858,"file":"test\\action-drown-explode.test.js","start":846,"end":934,"kind":"MethodDefinition","name":"StubLevel.clearGroundWithMask","weight":0.5,"headline":"mask clear ground cleared masks push return","preContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"],"postContext":["class StubTriggerManager {","  constructor() { this.removed = []; }","  removeByOwner(o) { this.removed.push(o); }","}"]},{"id":859,"file":"test\\action-mine-system.test.js","start":707,"end":808,"kind":"MethodDefinition","name":"StubLevel.constructor","weight":0.5,"headline":"constructor false ground new set cleared steel","preContext":["  clearGroundWithMask(m, x, y) { this.cleared.push({ m, x, y }); }","  hasSteelUnderMask() { return this.steel; }","  hasArrowUnderMask() { return this.arrow; }","}"],"postContext":["key(x, y) { return `${x},${y}`; }"]},{"id":860,"file":"test\\action-systems-extra.test.js","start":864,"end":895,"kind":"MethodDefinition","name":"StubLevel.hasGroundAt","weight":0.5,"headline":"ground return false","preContext":["class StubLevel { hasGroundAt() { return false; } }"],"postContext":["class StubGVC { constructor(){ this.count=0; } addSurvivor(){ this.count++; } }"]},{"id":861,"file":"test\\action-systems.test.js","start":2625,"end":2658,"kind":"MethodDefinition","name":"StubLevel.key","weight":0.5,"headline":"key return","preContext":["    this.steelUnder = false;","    this.arrowUnder = false;","    this.steelGround = () => false;","  }"],"postContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"]},{"id":862,"file":"test\\bench-entrance-placement.test.js","start":640,"end":660,"kind":"MethodDefinition","name":"StageStub.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["getGuiDisplay() { return {}; }"],"postContext":["setCursorSprite() {}"]},{"id":863,"file":"test\\bench-sequence.test.js","start":510,"end":530,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":864,"file":"test\\bench-tps.test.js","start":1087,"end":1178,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrameCovered","weight":0.5,"headline":"frame draw covered calls push op","preContext":["drawFrame(frame, x, y) { this.calls.push({ op: 'drawFrame', frame, x, y }); }"],"postContext":["drawFrameResized(frame, x, y, w, h) { this.calls.push({ op: 'drawFrameResized', frame, x, y, w, h }); }"]},{"id":865,"file":"js\\GameView.js","start":4066,"end":4835,"kind":"MethodDefinition","name":"GameView.suspendWithColor","weight":1.2,"headline":"timer game scale gu resume null color","preContext":["      return;","    }","    this.game.getGameTimer().suspend();","  }"],"postContext":["continue () {","    if (this.game == null) {","      return;","    }"]},{"id":866,"file":"js\\Lemming.js","start":1417,"end":1524,"kind":"MethodDefinition","name":"Lemming.renderDebug","weight":1.2,"headline":"debug game display render action return set","preContext":["      this.countdownAction.draw(gameDisplay, this);","    }","    this.action.draw(gameDisplay, this);","  }"],"postContext":["process(level) {","    const lemX = this.x;","    const lemY = this.y;","    if ((lemX < 0) || (this.x >= level.width) || (this.y < 0) || (this.y >= level.height + 6)) {"]},{"id":867,"file":"js\\GameResources.js","start":180,"end":409,"kind":"MethodDefinition","name":"GameResources.constructor","weight":1.2,"headline":"constructor conf provider mechanics super settings game","preContext":["  getLevelGroups() {","    return this.config.level.groups;","  }","}"],"postContext":["getMainDat() {","    if (this.mainDat != null) {","      return this.mainDat;","    }"]},{"id":868,"file":"js\\Level.js","start":822,"end":1691,"kind":"MethodDefinition","name":"Level.constructor","weight":1.2,"headline":"constructor new lemmings null super ground mask","preContext":["","    this._debugFrame = frame;","  }","}"],"postContext":["setMapObjects(objects, objectImg) {","    Lemmings.withPerformance(","      'setMapObjects',","      {"]},{"id":869,"file":"js\\LemmingManager.js","start":960,"end":5347,"kind":"MethodDefinition","name":"LemmingManager.constructor","weight":1.2,"headline":"constructor lemmings actions lemming state new sprite","preContext":["      });","    }","  }","}"],"postContext":["get mmTickCounter() { return this.#mmTickCounter; }"]},{"id":870,"file":"js\\vendor\\hqx\\squooshhqx.js","start":2624,"end":2678,"kind":"FunctionDeclaration","name":"__wbg_init_memory","weight":2,"headline":"memory function wb init imports maybe","preContext":["  imports.wbg = {};","","  return imports;","}"],"postContext":["function __wbg_finalize_init(instance, module) {","  wasm = instance.exports;","  __wbg_init.__wbindgen_wasm_module = module;","  cachedInt32Memory0 = null;"]},{"id":871,"file":"test\\keyboardshortcuts.loop.test.js","start":1036,"end":1107,"kind":"MethodDefinition","name":"StageStub.limitValue","weight":0.5,"headline":"min max math limit return","preContext":["snapScale(s) { return s; }"],"postContext":["function createWindowStub() {","  let rafCb;","  let cancelId;","  const win = {"]},{"id":872,"file":"test\\gameview.onGameEnd.test.js","start":512,"end":532,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":873,"file":"test\\gameview.loadlevel.test.js","start":675,"end":695,"kind":"MethodDefinition","name":"StageStub.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":874,"file":"test\\gameview.loadlevel-missing.test.js","start":632,"end":652,"kind":"MethodDefinition","name":"StageStub.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":875,"file":"test\\action-base-system.test.js","start":599,"end":853,"kind":"ClassDeclaration","name":"StubLemming","weight":0.5,"headline":"class stub lemming constructor action look act","preContext":["GetMask(type) { return `mask-${type}`; }"],"postContext":["constructor() {","    this.action = null;","    this.frameIndex = 0;","    this.x = 0;"]},{"id":876,"file":"js\\LogHandler.js","start":941,"end":1119,"kind":"MethodDefinition","name":"Logger.debug","weight":1.2,"headline":"msg console debug enabled return string log","preContext":["log(msg, exception) {","    this.error(msg, exception);","  }"],"postContext":["class BaseLogger {","  constructor(name) {","    const Handler = Lemmings.LogHandler || Lemmings.Logger;","    this.log = new Handler(name || this.constructor.name);"]},{"id":877,"file":"js\\CommandManager.js","start":1942,"end":2259,"kind":"MethodDefinition","name":"CommandManager.queueCommand","weight":1.2,"headline":"command new current tick game ok execute","preContext":["    const values = valuesStr.substr(1).split(':');","    newCommand.load(values.map(Number));","    return newCommand;","  }"],"postContext":["serialize() {","    let result = [];","    Object.keys(this.loggedCommads).forEach((key) => {","      let command = this.loggedCommads[+key];"]},{"id":878,"file":"js\\ColorPalette.js","start":517,"end":578,"kind":"MethodDefinition","name":"ColorPalette.getB","weight":1.2,"headline":"get return","preContext":["getG(index) {","    return (this.data[index] >> 8) & 0xFF;","  }"],"postContext":["setColorRGB(index, r, g, b) {","    this.setColorInt(index, ColorPalette.colorFromRGB(r, g, b));","  }"]},{"id":879,"file":"js\\KeyboardShortcuts.js","start":839,"end":986,"kind":"MethodDefinition","name":"KeyboardShortcuts._startLoop","weight":1.2,"headline":"ra loop last performance request animation frame","preContext":["      cancelAnimationFrame(this._raf);","      this._raf = null;","    }","  }"],"postContext":["_step(t) {","    const stage = this.view.stage;","    let again = false;","    const dt = Math.min(60, t - this._last) / 16.666;"]},{"id":880,"file":"js\\ActionExplodingSystem.js","start":569,"end":874,"kind":"MethodDefinition","name":"ActionExplodingSystem.draw","weight":1.2,"headline":"le frame draw game display const ani","preContext":["triggerLemAction(lem) {","    return false;","  }"],"postContext":["process(level, lem) {","    lem.disable();","    lem.frameIndex++;","    if (lem.frameIndex == 1) {"]},{"id":881,"file":"js\\GameSkills.js","start":688,"end":786,"kind":"MethodDefinition","name":"GameSkills.canReuseSkill","weight":1.2,"headline":"return reuse skill cheat mode true skills","preContext":["        break;","      }","    }","  }"],"postContext":["reuseSkill(type) {","    if (this.cheatMode) return true;","    if (this.skills[type] <= 0)","      return false;"]},{"id":882,"file":"test\\gameview.canvas-reset.test.js","start":581,"end":616,"kind":"MethodDefinition","name":"StageMock.dispose","weight":0.5,"headline":"dispose called","preContext":["updateStageSize() {}"],"postContext":["class GameFactoryStub { constructor() {} }"]},{"id":883,"file":"js\\DisplayImage.js","start":1504,"end":1553,"kind":"MethodDefinition","name":"DisplayImage.getWidth","weight":1.2,"headline":"get return im","preContext":["    //     // this.setDebugPixel(e.x, e.y);","    // });","    this.imgData = null;","  }"],"postContext":["getHeight() { return this.imgData?.height ?? 0; }"]},{"id":884,"file":"index.html","start":2400,"end":3200,"kind":"Blob","name":"blob","weight":1,"headline":"lemmings select element game level document get","preContext":["    let lemmings;","    function init() {","      lemmings = new Lemmings.GameView();","   "],"postContext":["ge\", (e) => {","        lemmings.selectLevel(lemmings.strToNum(e.target.value));","      });","    }"]},{"id":885,"file":"test\\gamegui.test.js","start":1030,"end":1107,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrame","weight":0.5,"headline":"frame draw calls push op","preContext":["get worldDataSize() { return { width: this.width, height: this.height }; }"],"postContext":["drawFrameCovered(frame, x, y) { this.calls.push({ op: 'drawFrameCovered', frame, x, y }); }"]},{"id":886,"file":"js\\xbrz\\xbrz.js","start":594,"end":672,"kind":"MethodDefinition","name":"BlendResult.reset","weight":1.2,"headline":"reset","preContext":["    this.g = 0;","    this.j = 0;","    this.k = 0;","  }"],"postContext":["class OutputMatrix {","  constructor (scale, out, outWidth) {","    this.out = new IntPtr(out);","    this.n = (scale - 2) * (maxRots * maxScaleSq);"]},{"id":887,"file":"js\\GameVictoryCondition.js","start":1043,"end":1191,"kind":"MethodDefinition","name":"GameVictoryCondition.getCurrentReleaseRate","weight":1.2,"headline":"release rate lemmings bench return get current","preContext":["getMinReleaseRate() {","    return this.minReleaseRate;","  }"],"postContext":["addSurvivor() {","    if (this.isFinalize) {","      return;","    }"]},{"id":888,"file":"test\\keyboardshortcuts.test.js","start":0,"end":15377,"kind":"Module","name":"root","weight":0.5,"headline":"key const false return timer get command","preContext":[],"postContext":[]},{"id":889,"file":"js\\vendor\\hqx\\squooshhqx.js","start":2680,"end":2879,"kind":"FunctionDeclaration","name":"__wbg_finalize_init","weight":2,"headline":"wb module init instance cached memory null","preContext":["function __wbg_init_memory(imports, maybe_memory) {","","}"],"postContext":["function initSync(module) {","  if (wasm !== undefined) return wasm;","","  const imports = __wbg_get_imports();"]},{"id":890,"file":"js\\LemmingManager.js","start":5351,"end":5402,"kind":"MethodDefinition","name":"LemmingManager.mmTickCounter","weight":1.2,"headline":"mm tick counter get return","preContext":["","        this.releaseTickIndex = this.gameVictoryCondition.getCurrentReleaseRate() - 30;","      })();","  }"],"postContext":["set mmTickCounter(v) {","    if (v >= Lemmings.COUNTER_LIMIT) {","      console.warn('mmTickCounter wrapped, resetting to 0');","      this.#mmTickCounter = 0;"]},{"id":891,"file":"js\\Level.js","start":1695,"end":4555,"kind":"MethodDefinition","name":"Level.setMapObjects","weight":1.2,"headline":"ob info trigger new map const range","preContext":["","    /** @type {Lemmings.Frame|null} prebuilt debug overlay */","    this._debugFrame = null;","  }"],"postContext":["getGroundMaskLayer() { return this.groundMask; }"]},{"id":892,"file":"js\\GameResources.js","start":456,"end":959,"kind":"MethodDefinition","name":"GameResources.getMainDat","weight":1.2,"headline":"main dat return new resolve reject load","preContext":["    /** mechanics settings for gameplay */","    this.mechanics = config.mechanics || {};","    this.mainDat = null;","  }"],"postContext":["getLemmingsSprite(colorPalette) {","    return new Promise((resolve, reject) => {","      this.getMainDat().then((container) => {","        const sprite = new Lemmings.LemmingsSprite(container.getPart(0), colorPalette);"]},{"id":893,"file":"js\\Lemming.js","start":1528,"end":2740,"kind":"MethodDefinition","name":"Lemming.process","weight":1.2,"headline":"action lemming lemmings level le state new","preContext":["renderDebug(gameDisplay) {","    if (!this.action) return;","    gameDisplay.setDebugPixel(this.x, this.y);","  }"],"postContext":["disable() {","    this.disabled = true;","  }"]},{"id":894,"file":"js\\GameView.js","start":4839,"end":4946,"kind":"MethodDefinition","name":"GameView.continue","weight":1.2,"headline":"game continue null return get timer","preContext":["      if (this.game) this.game.getGameTimer().continue();","      this.resumeTimer = null;","    }, 2000);","  }"],"postContext":["nextFrame() {","    if (this.game == null) {","      return;","    }"]},{"id":895,"file":"test\\bench-tps.test.js","start":1181,"end":1284,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrameResized","weight":0.5,"headline":"frame draw resized calls push op","preContext":["drawFrameCovered(frame, x, y) { this.calls.push({ op: 'drawFrameCovered', frame, x, y }); }"],"postContext":["drawRect(...args) { this.calls.push({ op: 'drawRect', args }); }"]},{"id":896,"file":"test\\bench-sequence.test.js","start":533,"end":543,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":["resetFade() {}"]},{"id":897,"file":"test\\bench-entrance-placement.test.js","start":661,"end":681,"kind":"MethodDefinition","name":"StageStub.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["updateStageSize() {}"],"postContext":["clear() {}"]},{"id":898,"file":"test\\action-systems.test.js","start":2661,"end":2722,"kind":"MethodDefinition","name":"StubLevel.hasGroundAt","weight":0.5,"headline":"ground return key","preContext":["key(x, y) { return `${x},${y}`; }"],"postContext":["getGroundMaskLayer() {","    const self = this;","    return {","      hasGroundAt(x, y) { return self.hasGroundAt(x, y); },"]},{"id":899,"file":"test\\action-systems-extra.test.js","start":898,"end":977,"kind":"ClassDeclaration","name":"StubGVC","weight":0.5,"headline":"class stub constructor add survivor","preContext":["hasGroundAt() { return false; }"],"postContext":["constructor(){ this.count=0; }"]},{"id":900,"file":"test\\action-mine-system.test.js","start":811,"end":844,"kind":"MethodDefinition","name":"StubLevel.key","weight":0.5,"headline":"key return","preContext":["constructor() { this.ground = new Set(); this.cleared = []; this.steel = false; this.arrow = false; }"],"postContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"]},{"id":901,"file":"test\\action-drown-explode.test.js","start":938,"end":1050,"kind":"ClassDeclaration","name":"StubTriggerManager","weight":0.5,"headline":"class stub trigger manager constructor removed remove","preContext":["clearGroundWithMask(mask, x, y) { this.clearedMasks.push({ mask, x, y }); return true; }"],"postContext":["constructor() { this.removed = []; }"]},{"id":902,"file":"test\\gamegui.behavior.test.js","start":872,"end":912,"kind":"MethodDefinition","name":"VictoryStub.getMinReleaseRate","weight":0.5,"headline":"min get release rate return","preContext":["    this.min = 0;","    this.max = 99;","    this.current = 10;","  }"],"postContext":["getMaxReleaseRate() { return this.max; }"]},{"id":903,"file":"js\\SolidLayer.js","start":905,"end":954,"kind":"MethodDefinition","name":"SolidLayer.setGroundAt","weight":1.2,"headline":"set ground mask","preContext":["    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {","      this.mask[x + y * this.width] = 0;","    }","  }"],"postContext":["setMaskAt(x, y) {","    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {","      this.mask[x + y * this.width] = 1;","    }"]},{"id":904,"file":"js\\GameDisplay.js","start":2398,"end":3324,"kind":"MethodDefinition","name":"GameDisplay.drawSelection","weight":1.2,"headline":"action lemmings ff skill const color le","preContext":["#drawCorner(x, y, r, g, b) {","    this.display.drawRect(x, y, 2, 2, r, g, b, true);","  }"],"postContext":["#drawHover(lem) {","    const x = lem.x - 5;","    const y = lem.y - 11; // sits a bit higher","    const color = 0x5e5e5e; // slightly lighter grey"]},{"id":905,"file":"js\\TriggerManager.js","start":4560,"end":5413,"kind":"MethodDefinition","name":"TriggerManager.insert","weight":1.2,"headline":"math trigger max const let min shift","preContext":["      frame.drawRect(tr.x1, tr.y1, tr.x2 - tr.x1, tr.y2 - tr.y1, color);\r","    }\r","    this._debugFrame = frame;\r","  }"],"postContext":["#remove (trigger) {\r","    this._triggers.delete(trigger);\r","    const buckets = trigger.__bucketIndices;\r","    if (buckets) {\r"]},{"id":906,"file":"js\\UnpackFilePart.js","start":1760,"end":1817,"kind":"MethodDefinition","name":"UnpackFilePart.decompressedSize","weight":1.2,"headline":"decompressed size get return","preContext":["set checksum(val) { this.#checksum = val; }"],"postContext":["set decompressedSize(val) { this.#decompressedSize = val; }"]},{"id":907,"file":"test\\groundrenderer.test.js","start":820,"end":942,"kind":"FunctionDeclaration","name":"makeTerrain","weight":0.5,"headline":"arr palette function make terrain return frames","preContext":["  const pal = new Lemmings.ColorPalette();","  pal.setColorInt(1, color);","  return pal;","}"],"postContext":["function color32(r, g, b) {","  return (0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF)) >>> 0;","}"]},{"id":908,"file":"js\\UserInputManager.js","start":6965,"end":7215,"kind":"MethodDefinition","name":"UserInputManager.setMouseDownState","weight":1.2,"headline":"mouse position button num last set state","preContext":["      this.listenElement.removeEventListener(type, handler);","    }","    this._listeners.length = 0;","  }"],"postContext":["getRelativePosition(element, clientX, clientY) {","    const rect = element.getBoundingClientRect();","    const scaleX = element.width / rect.width;","    const scaleY = element.height / rect.height;"]},{"id":909,"file":"js\\VGASpecReader.js","start":3537,"end":3910,"kind":"MethodDefinition","name":"VGASpecReader.readPalettes","weight":1.2,"headline":"fr read offset const byte palettes set","preContext":["        }\r","      }\r","    }\r","  }"],"postContext":[]},{"id":910,"file":"test\\skillpanelsprites.test.js","start":678,"end":764,"kind":"ClassDeclaration","name":"FakeMasks","weight":0.5,"headline":"mask fake class masks get return new","preContext":["GetMask(idx) { return `${this.label}-${idx}`; }"],"postContext":["GetMask(type) {","    return new FakeMaskList(`mask-${type}`);","  }"]},{"id":911,"file":"test\\gameview.dispose.test.js","start":673,"end":717,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"class game factory stub constructor","preContext":["dispose() { this.disposeCalled++; }"],"postContext":["constructor() {}"]},{"id":912,"file":"js\\MiniMap.js","start":2427,"end":2988,"kind":"MethodDefinition","name":"MiniMap.handleMouseUp","weight":1.2,"headline":"const gd des event world size new","preContext":["    const newX = ((this.level.width - gd.worldDataSize.width) * pct) | 0;","    this.level.screenPositionX = newX;","    gd.setScreenPosition?.(newX, 0);","  }"],"postContext":["#handleMouseMove(event){","    if (!this.guiDisplay) return;","    if (!this._mouseDown) return;","    const gd = this.guiDisplay;"]},{"id":913,"file":"js\\GroundReader.js","start":2578,"end":2624,"kind":"MethodDefinition","name":"GroundReader.getObjectImages","weight":1.2,"headline":"get images return im objects","preContext":["getTerrainImages() { return this.imgTerrain;  }"],"postContext":["_readImages (imgList, vga, bitsPerPixel) {","    for (let i = 0, imgCount = imgList.length; i < imgCount; ++i) {","      const img = imgList[i];","      if (!img) continue; // hack to continue if missing img"]},{"id":914,"file":"js\\CommandSelectSkill.js","start":877,"end":972,"kind":"MethodDefinition","name":"CommandSelectSkill.save","weight":1.2,"headline":"save const skill apply push return","preContext":["load(values) {","    this.skill = +(values[0]);","    this.apply = values.length > 1 ? !!(+values[1]) : true;","  }"],"postContext":["getCommandKey() {","    return 's';","  }"]},{"id":915,"file":"js\\Frame.js","start":1029,"end":1063,"kind":"MethodDefinition","name":"Frame.getMask","weight":1.2,"headline":"mask get return","preContext":["getBuffer () { return this.data; }"],"postContext":["clear () {","    this.data.fill(Lemmings.ColorPalette.black);","    this.mask.fill(0);","  }"]},{"id":916,"file":"js\\Stage.js","start":3164,"end":3472,"kind":"MethodDefinition","name":"Stage.handleOnMouseRightDown","weight":1.2,"headline":"stage image mouse const display pos handle","preContext":["      const pos = this.calcPosition2D(stageImage, e);","      stageImage.display.onMouseUp.trigger(pos);","    });","  }"],"postContext":["handleOnMouseRightUp() {","    this.controller.onMouseRightUp.on((e) => {","      const stageImage = this.getStageImageAt(e.x, e.y);","      if (!stageImage || !stageImage.display) return;"]},{"id":917,"file":"js\\SkillPanelSprites.js","start":2915,"end":3401,"kind":"MethodDefinition","name":"SkillPanelSprites.createTiledBackground","weight":1.2,"headline":"const xx patch ds background let sr","preContext":["      }\r","    }\r","    return out;\r","  }"],"postContext":["getHighlightedButton(panelIndex) {\r","    const x = panelIndex * 16;\r","    const y = 16;\r","    const w = 16;\r"]},{"id":918,"file":"test\\lemmingmanager.test.js","start":1742,"end":1780,"kind":"ClassDeclaration","name":"DigAction","weight":0.5,"headline":"action class dig extends dummy","preContext":["class BlockAction extends DummyAction {}"],"postContext":["class MineAction extends DummyAction {}"]},{"id":919,"file":"js\\BitWriter.js","start":3328,"end":3371,"kind":"MethodDefinition","name":"BitWriter.eof","weight":1.2,"headline":"eof return pos","preContext":["getFileReader(filename) {\r","    return new Lemmings.BinaryReader(this.#outData, null, null, filename);\r","  }"],"postContext":[]},{"id":920,"file":"test\\gameview.test.js","start":911,"end":976,"kind":"ClassDeclaration","name":"KeyboardShortcutsMock","weight":0.5,"headline":"class keyboard shortcuts mock constructor dispose","preContext":["    addEventListener() {},","    removeEventListener() {}","  };","}"],"postContext":["constructor() {}"]},{"id":921,"file":"js\\Game.js","start":4196,"end":4245,"kind":"MethodDefinition","name":"Game.getGameTimer","weight":1.2,"headline":"game timer get return","preContext":["    this._disposeCurrentLevel();","    this.onGameEnd?.dispose();","    this.onGameEnd = null;","  }"],"postContext":["getGameSkills       () { return this.skills; }"]},{"id":922,"file":"js\\BinaryReader.js","start":5375,"end":5899,"kind":"MethodDefinition","name":"BinaryReader.readInt","weight":1.2,"headline":"offset length pos return let read int","preContext":["      return 0;","    }","    return this.#data[this.#pos++];","  }"],"postContext":["readIntBE(offset) {","    if (offset == null) offset = this.#pos;","    const v = (this.#data[offset]) |","              (this.#data[offset + 1] << 8) |"]},{"id":923,"file":"js\\FileProvider.js","start":3059,"end":3549,"kind":"MethodDefinition","name":"FileProvider._verifyCache","weight":1.2,"headline":"head entry ur eta last modified await","preContext":["    } catch (e) {","      return null;","    }","  }"],"postContext":["async _fetchBinary(url, path) {","    const response = await new Promise((resolve, reject) => {","      const xhr = new XMLHttpRequest();","      xhr.onload = () => {"]},{"id":924,"file":"js\\GameTimer.js","start":2322,"end":2365,"kind":"MethodDefinition","name":"GameTimer.frameTime","weight":1.2,"headline":"frame time get return","preContext":["      this.suspend();","      this.continue();","    }","  }"],"postContext":["#updateFrameTime() {","    this.#frameTime = this.TIME_PER_FRAME_MS / this.#speedFactor;","  }"]},{"id":925,"file":"test\\gameview.start-existing.test.js","start":247,"end":263,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor","preContext":["  clear() {}","  startFadeOut() {}","  startOverlayFade() {}","}"],"postContext":["getGameDisplay() { return {}; }"]},{"id":926,"file":"test\\gameview.suspendWithColor.test.js","start":248,"end":333,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor gu im props view point scale","preContext":["  clear() {}","  startFadeOut() {}","  startOverlayFade(color, rect) { this.called = { color, rect }; }","}"],"postContext":["getGameDisplay() { return {}; }"]},{"id":927,"file":"test\\gameview.controls.test.js","start":201,"end":217,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor","preContext":["  clear() {}","  startFadeOut() {}","  startOverlayFade() {}","}"],"postContext":["getGameDisplay() { return {}; }"]},{"id":928,"file":"js\\GameGui.js","start":8520,"end":9929,"kind":"MethodDefinition","name":"GameGui.handleMouseMove","weight":1.2,"headline":"raw speed const game hover true get","preContext":["handleSkillDoubleClick(e) {","    if (Math.trunc(e.x / 16) === 11)","      this.game.queueCommand(new Lemmings.CommandNuke());","  }"],"postContext":["setGuiDisplay(display) {","    if (this.display && this._displayListeners) {","      for (const [event, handler] of this._displayListeners) {","        this.display[event].off(handler);"]},{"id":929,"file":"js\\ConfigReader.js","start":475,"end":982,"kind":"MethodDefinition","name":"ConfigReader.getConfig","weight":1.2,"headline":"conf game log return gs get resolve","preContext":["        resolve(configJson);","      });","    });","  }"],"postContext":["parseConfig(jsonData) {","    let gameConfigs = [];","    let config = null;","    try {"]},{"id":930,"file":"test\\keyboardshortcuts.loop.test.js","start":1111,"end":1492,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"cb cancel return ra win remove let","preContext":["limitValue(min, val, max) { return Math.min(Math.max(val, min), max); }"],"postContext":[]},{"id":931,"file":"js\\Frame.js","start":1113,"end":1199,"kind":"MethodDefinition","name":"Frame.clear","weight":1.2,"headline":"fill clear lemmings color palette black mask","preContext":["getMask   () { return this.mask; }"],"postContext":["fill (r, g, b) {","    this.data.fill(Lemmings.ColorPalette.colorFromRGB(r, g, b));","    this.mask.fill(1);","  }"]},{"id":932,"file":"js\\CommandSelectSkill.js","start":976,"end":1013,"kind":"MethodDefinition","name":"CommandSelectSkill.getCommandKey","weight":1.2,"headline":"get command key return","preContext":["    const out = [+(this.skill)];","    if (!this.apply) out.push(0);","    return out;","  }"],"postContext":[]},{"id":933,"file":"js\\GroundReader.js","start":2860,"end":4602,"kind":"MethodDefinition","name":"GroundReader._readImages","weight":1.2,"headline":"im steel let max pixel frame widest","preContext":["getObjectImages () { return this.imgObjects; }"],"postContext":["_readObjectImages (fr, offset, palette) {","    fr.setOffset(offset);","","    //console.log(\"obj count: \" + OBJECT_COUNT)"]},{"id":934,"file":"js\\MiniMap.js","start":2992,"end":3620,"kind":"MethodDefinition","name":"MiniMap.handleMouseMove","weight":1.2,"headline":"const gd world size des event return","preContext":["    const newX = ((this.level.width - gd.worldDataSize.width) * pct) | 0;","    this.level.screenPositionX = newX;","    gd.setScreenPosition?.(newX, 0);","  }"],"postContext":["#buildTerrain() {","    this.terrain.fill(0);","    const gm = this.level.getGroundMaskLayer();","    for (let mY = 0; mY < this.height; ++mY) {"]},{"id":935,"file":"test\\gameview.dispose.test.js","start":699,"end":715,"kind":"MethodDefinition","name":"GameFactoryStub.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryStub {","  constructor() {}","}"],"postContext":[]},{"id":936,"file":"test\\skillpanelsprites.test.js","start":698,"end":762,"kind":"MethodDefinition","name":"FakeMasks.GetMask","weight":0.5,"headline":"mask get return new fake list","preContext":["  GetMask(type) {","    return new FakeMaskList(`mask-${type}`);","  }","}"],"postContext":[]},{"id":937,"file":"js\\UserInputManager.js","start":7219,"end":7550,"kind":"MethodDefinition","name":"UserInputManager.getRelativePosition","weight":1.2,"headline":"rect client const element scale get position","preContext":["    this.mouseDownY = position.y;","    this.lastMouseX = position.x;","    this.lastMouseY = position.y;","  }"],"postContext":["handleMouseMove(position) {","    //- Move Point of View","    if (this.mouseButton) {","      let deltaX = (this.lastMouseX - position.x);"]},{"id":938,"file":"test\\groundrenderer.test.js","start":944,"end":1052,"kind":"FunctionDeclaration","name":"color32","weight":0.5,"headline":"function color return","preContext":["function makeTerrain(arr, width, height, palette) {","  return { width, height, frames: [Uint8Array.from(arr)], palette };","}"],"postContext":[]},{"id":939,"file":"js\\UnpackFilePart.js","start":1821,"end":1880,"kind":"MethodDefinition","name":"UnpackFilePart.decompressedSize","weight":1.2,"headline":"decompressed size set","preContext":["get decompressedSize() { return this.#decompressedSize; }"],"postContext":["get compressedSize() { return this.#compressedSize; }"]},{"id":940,"file":"js\\TriggerManager.js","start":5419,"end":5735,"kind":"MethodDefinition","name":"TriggerManager.remove","weight":1.2,"headline":"trigger delete const buckets bucket indices arr","preContext":["      }\r","    }\r","    trigger.__bucketIndices = buckets;   // fast removal\r","  }"],"postContext":["dispose() {\r","    this.gameTimer = null;\r","    this._grid   = null;\r","    this._triggers = null;\r"]},{"id":941,"file":"js\\GameDisplay.js","start":3328,"end":3598,"kind":"MethodDefinition","name":"GameDisplay.drawHover","weight":1.2,"headline":"color le const ff draw hover sits","preContext":["      (color >> 16) & 0xff,","      1","    );","  }"],"postContext":["dispose() {","    if (this.display && this._mouseHandler) {","      this.display.onMouseDown.off(this._mouseHandler);","      this._mouseHandler = null;"]},{"id":942,"file":"js\\SolidLayer.js","start":958,"end":1091,"kind":"MethodDefinition","name":"SolidLayer.setMaskAt","weight":1.2,"headline":"mask set","preContext":["setGroundAt(x, y) {","    this.setMaskAt(x, y);","  }"],"postContext":["getSubLayer(x, y, w, h) {","    const sub = new SolidLayer(w, h);","    for (let dy = 0; dy < h; ++dy) {","      const srcY = y + dy;"]},{"id":943,"file":"test\\gamegui.behavior.test.js","start":915,"end":955,"kind":"MethodDefinition","name":"VictoryStub.getMaxReleaseRate","weight":0.5,"headline":"max get release rate return","preContext":["getMinReleaseRate() { return this.min; }"],"postContext":["getCurrentReleaseRate() { return this.current; }"]},{"id":944,"file":"test\\action-drown-explode.test.js","start":967,"end":1003,"kind":"MethodDefinition","name":"StubTriggerManager.constructor","weight":0.5,"headline":"constructor removed","preContext":["class StubTriggerManager {","  constructor() { this.removed = []; }","  removeByOwner(o) { this.removed.push(o); }","}"],"postContext":["removeByOwner(o) { this.removed.push(o); }"]},{"id":945,"file":"test\\action-mine-system.test.js","start":847,"end":908,"kind":"MethodDefinition","name":"StubLevel.hasGroundAt","weight":0.5,"headline":"ground return key","preContext":["key(x, y) { return `${x},${y}`; }"],"postContext":["clearGroundWithMask(m, x, y) { this.cleared.push({ m, x, y }); }"]},{"id":946,"file":"test\\action-systems-extra.test.js","start":914,"end":944,"kind":"MethodDefinition","name":"StubGVC.constructor","weight":0.5,"headline":"constructor","preContext":["class StubGVC { constructor(){ this.count=0; } addSurvivor(){ this.count++; } }"],"postContext":["addSurvivor(){ this.count++; }"]},{"id":947,"file":"test\\action-systems.test.js","start":2725,"end":3000,"kind":"MethodDefinition","name":"StubLevel.getGroundMaskLayer","weight":0.5,"headline":"ground return self get layer mask const","preContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"],"postContext":["clearGroundWithMask(mask, x, y) { this.clearedMasks.push({ mask, x, y }); }"]},{"id":948,"file":"test\\bench-entrance-placement.test.js","start":682,"end":692,"kind":"MethodDefinition","name":"StageStub.clear","weight":0.5,"headline":"clear","preContext":["setCursorSprite() {}"],"postContext":["startFadeOut() {}"]},{"id":949,"file":"test\\bench-sequence.test.js","start":546,"end":560,"kind":"MethodDefinition","name":"StageMock.resetFade","weight":0.5,"headline":"reset fade","preContext":["clear() {}"],"postContext":["startFadeOut() {}"]},{"id":950,"file":"test\\bench-tps.test.js","start":1287,"end":1351,"kind":"MethodDefinition","name":"DisplayImageStub.drawRect","weight":0.5,"headline":"draw rect arg calls push op","preContext":["drawFrameResized(frame, x, y, w, h) { this.calls.push({ op: 'drawFrameResized', frame, x, y, w, h }); }"],"postContext":["drawStippleRect(...args) { this.calls.push({ op: 'drawStippleRect', args }); }"]},{"id":951,"file":"js\\GameView.js","start":4950,"end":5078,"kind":"MethodDefinition","name":"GameView.nextFrame","weight":1.2,"headline":"game next frame null return get timer","preContext":["      return;","    }","    this.game.getGameTimer().continue();","  }"],"postContext":["prevFrame() {","    if (this.game == null) {","      return;","    }"]},{"id":952,"file":"js\\Lemming.js","start":2744,"end":2785,"kind":"MethodDefinition","name":"Lemming.disable","weight":1.2,"headline":"disable disabled true","preContext":["    // prevent falling through function without returning a type","    this.log.log('lemming state falling through, fix it');","    return Lemmings.LemmingStateType.NO_STATE_TYPE;","  }"],"postContext":["remove() {","    this.action = null;","    this.countdownAction = null;","    this.removed = true;"]},{"id":953,"file":"js\\GameResources.js","start":962,"end":1222,"kind":"MethodDefinition","name":"GameResources.getLemmingsSprite","weight":1.2,"headline":"sprite get lemmings color palette new resolve","preContext":["        });","    });","    return this.mainDat;","  }"],"postContext":["getSkillPanelSprite(colorPalette) {","    return new Promise((resolve, reject) => {","      this.getMainDat().then((container) => {","        resolve(new Lemmings.SkillPanelSprites(container.getPart(2), container.getPart(6), colorPalette));"]},{"id":954,"file":"js\\Level.js","start":4559,"end":4607,"kind":"MethodDefinition","name":"Level.getGroundMaskLayer","weight":1.2,"headline":"ground mask get layer return","preContext":["        }","        this._debugFrame = null; // invalidate cached debug overlay","      })();","  }"],"postContext":["setGroundMaskLayer(solidLayer) { this.groundMask = solidLayer; }"]},{"id":955,"file":"js\\LemmingManager.js","start":5405,"end":5612,"kind":"MethodDefinition","name":"LemmingManager.mmTickCounter","weight":1.2,"headline":"mm tick counter set lemmings console warn","preContext":["get mmTickCounter() { return this.#mmTickCounter; }"],"postContext":["get releaseTickIndex() { return this.#releaseTickIndex; }"]},{"id":956,"file":"js\\vendor\\hqx\\squooshhqx.js","start":2881,"end":3231,"kind":"FunctionDeclaration","name":"initSync","weight":2,"headline":"module imports instance init wb web assembly","preContext":["","","  return wasm;","}"],"postContext":["async function __wbg_init(input) {","  if (wasm !== undefined) return wasm;","","  if (typeof input === 'undefined') {"]},{"id":957,"file":"js\\GameVictoryCondition.js","start":1232,"end":1324,"kind":"MethodDefinition","name":"GameVictoryCondition.addSurvivor","weight":1.2,"headline":"survivor add finalize return","preContext":["      return 99;","    }","    return this.releaseRate;","  }"],"postContext":["getSurvivorsCount() {","    return this.survivorCount;","  }"]},{"id":958,"file":"js\\xbrz\\xbrz.js","start":756,"end":1274,"kind":"ClassDeclaration","name":"OutputMatrix","weight":1.5,"headline":"scale rot max int nr matrix sq","preContext":["    this.g = 0;","    this.j = 0;","    this.k = 0;","  }"],"postContext":["constructor (scale, out, outWidth) {","    this.out = new IntPtr(out);","    this.n = (scale - 2) * (maxRots * maxScaleSq);","    this.outWidth = outWidth;"]},{"id":959,"file":"test\\gamegui.test.js","start":1110,"end":1201,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrameCovered","weight":0.5,"headline":"frame draw covered calls push op","preContext":["drawFrame(frame, x, y) { this.calls.push({ op: 'drawFrame', frame, x, y }); }"],"postContext":["drawFrameResized(frame, x, y, w, h) { this.calls.push({ op: 'drawFrameResized', frame, x, y, w, h }); }"]},{"id":960,"file":"index.html","start":3200,"end":4000,"kind":"Blob","name":"blob","weight":1,"headline":"container game const ratio cs margin lemmings","preContext":["      lemmings.elementSelectLevelGroup.addEventListener(\"change\", (e) => {","        lemmings.selectLevelGroup(lemmings.strToNum(e.target.value));","      });","      lemmings.elementSelectLevel.addEventListener(\"chan"],"postContext":["eft\", \"\");","        gameContainer.addClass(\"small\");","      }",""]},{"id":961,"file":"js\\DisplayImage.js","start":1556,"end":1605,"kind":"MethodDefinition","name":"DisplayImage.getHeight","weight":1.2,"headline":"get return im","preContext":["getWidth()  { return this.imgData?.width  ?? 0; }"],"postContext":["get worldDataSize() {","    return { width: this.getWidth(), height: this.getHeight() };","  }"]},{"id":962,"file":"test\\gameview.canvas-reset.test.js","start":619,"end":661,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"class game factory stub constructor","preContext":["dispose() { this.disposeCalled++; }"],"postContext":["constructor() {}"]},{"id":963,"file":"js\\GameSkills.js","start":789,"end":1087,"kind":"MethodDefinition","name":"GameSkills.reuseSkill","weight":1.2,"headline":"return skills skill true reuse cheat mode","preContext":["canReuseSkill(type) {","    if (this.cheatMode) return true;","    return (this.skills[type] > 0);","  }"],"postContext":["getSkill(type) {","    if (!Lemmings.SkillTypes[Object.keys(Lemmings.SkillTypes)[type]])","      return 0;","    const val = this.skills[type];"]},{"id":964,"file":"js\\ActionExplodingSystem.js","start":878,"end":1571,"kind":"MethodDefinition","name":"ActionExplodingSystem.process","weight":1.2,"headline":"le mask lemmings lemming frame manager level","preContext":["    } else {","      this.particleTable.draw(gameDisplay, lem.frameIndex - 1, lem.x, lem.y);","    }","  }"],"postContext":[]},{"id":965,"file":"js\\KeyboardShortcuts.js","start":990,"end":4151,"kind":"MethodDefinition","name":"KeyboardShortcuts._step","weight":1.2,"headline":"const scale pan stage vp zoom target","preContext":["      this._last = performance.now();","      this._raf = requestAnimationFrame((t) => this._step(t));","    }","  }"],"postContext":["_cycleSkill(dir = 1) {","    const skills = this.view.game.getGameSkills();","    let next = skills.getSelectedSkill() + dir;","    if (next > Lemmings.SkillTypes.DIGGER) next = Lemmings.SkillTypes.CLIMBER;"]},{"id":966,"file":"js\\ColorPalette.js","start":611,"end":709,"kind":"MethodDefinition","name":"ColorPalette.setColorRGB","weight":1.2,"headline":"color set int palette","preContext":["getB(index) {","    return (this.data[index] >> 16) & 0xFF;","  }"],"postContext":["static colorFromRGB(r, g, b) {","    const value = (0xff << 24) | (b << 16) | (g << 8) | r;","    return value >>> 0;","  }"]},{"id":967,"file":"js\\CommandManager.js","start":2263,"end":2522,"kind":"MethodDefinition","name":"CommandManager.serialize","weight":1.2,"headline":"key command result let logged comma ds","preContext":["    if (ok) {","      this.loggedCommads[currentTick] = newCommand;","    }","  }"],"postContext":["dispose() {","    if (this._tickListener && this.gameTimer?.onBeforeGameTick) {","      this.gameTimer.onBeforeGameTick.off(this._tickListener);","      this._tickListener = null;"]},{"id":968,"file":"js\\LogHandler.js","start":1123,"end":2079,"kind":"ClassDeclaration","name":"BaseLogger","weight":1.5,"headline":"performance lemmings function measure handler return dev","preContext":["    } else {","      console.dir(msg);","    }","  }"],"postContext":["constructor(name) {","    const Handler = Lemmings.LogHandler || Lemmings.Logger;","    this.log = new Handler(name || this.constructor.name);","  }"]},{"id":969,"file":"test\\action-base-system.test.js","start":621,"end":748,"kind":"MethodDefinition","name":"StubLemming.constructor","weight":0.5,"headline":"constructor action null frame look true","preContext":["  }","  getDirection() { return this.lookRight ? 'right' : 'left'; }","  setAction(act) { this.action = act; }","}"],"postContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"]},{"id":970,"file":"test\\gameview.loadlevel-missing.test.js","start":655,"end":675,"kind":"MethodDefinition","name":"StageStub.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }"]},{"id":971,"file":"test\\gameview.loadlevel.test.js","start":698,"end":718,"kind":"MethodDefinition","name":"StageStub.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }"]},{"id":972,"file":"test\\gameview.onGameEnd.test.js","start":535,"end":555,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":973,"file":"js\\GameSkills.js","start":1090,"end":1284,"kind":"MethodDefinition","name":"GameSkills.getSkill","weight":1.2,"headline":"skill return lemmings types get keys const","preContext":["      this.selectFirstAvailable();","    }","    return true;","  }"],"postContext":["getSelectedSkill() {","    return this.selectedSkill;","  }"]},{"id":974,"file":"test\\gameview.canvas-reset.test.js","start":643,"end":659,"kind":"MethodDefinition","name":"GameFactoryStub.constructor","weight":0.5,"headline":"constructor","preContext":["class GameFactoryStub { constructor() {} }"],"postContext":[]},{"id":975,"file":"js\\DisplayImage.js","start":1667,"end":1757,"kind":"MethodDefinition","name":"DisplayImage.worldDataSize","weight":1.2,"headline":"get world size return","preContext":["getHeight() { return this.imgData?.height ?? 0; }"],"postContext":["set worldDataSize({ width, height }) {","    this.initSize(width, height);","  }"]},{"id":976,"file":"index.html","start":4000,"end":4800,"kind":"Blob","name":"blob","weight":1,"headline":"container canvas game window lemmings stage size","preContext":["        containerWidth = width;","        containerHeight = width / ratio;","        gameContainer.css(\"margin-top\", (height - containerHeight) / 2);","        gameContainer.css(\"margin-l"],"postContext":["select>","    </div>","    <div id=\"outputList\">","      <select id=\"midiOutSelect\"></select>"]},{"id":977,"file":"test\\gamegui.test.js","start":1204,"end":1307,"kind":"MethodDefinition","name":"DisplayImageStub.drawFrameResized","weight":0.5,"headline":"frame draw resized calls push op","preContext":["drawFrameCovered(frame, x, y) { this.calls.push({ op: 'drawFrameCovered', frame, x, y }); }"],"postContext":["drawRect(...args) { this.calls.push({ op: 'drawRect', args }); }"]},{"id":978,"file":"js\\xbrz\\xbrz.js","start":779,"end":968,"kind":"MethodDefinition","name":"OutputMatrix.constructor","weight":1.2,"headline":"constructor scale max new int pt rots","preContext":["    this.out.position(this.outi + rot.J + rot.I * this.outWidth);","    return this.out;","  }","}"],"postContext":["move (rotDeg, outi) {","    this.nr = this.n + rotDeg * maxScaleSq;","    this.outi = outi;","  }"]},{"id":979,"file":"js\\GameVictoryCondition.js","start":1363,"end":1419,"kind":"MethodDefinition","name":"GameVictoryCondition.getSurvivorsCount","weight":1.2,"headline":"get survivors return survivor","preContext":["      return;","    }","    this.survivorCount++;","  }"],"postContext":["getSurvivorPercentage() {","    return Math.floor(this.survivorCount / this.releaseCount * 100) | 0;","  }"]},{"id":980,"file":"js\\vendor\\hqx\\squooshhqx.js","start":3233,"end":3786,"kind":"FunctionDeclaration","name":"__wbg_init","weight":2,"headline":"wb imports instance function init undefined return","preContext":["  const instance = new WebAssembly.Instance(module, imports);","","  return __wbg_finalize_init(instance, module);","}"],"postContext":[]},{"id":981,"file":"js\\LemmingManager.js","start":5616,"end":5673,"kind":"MethodDefinition","name":"LemmingManager.releaseTickIndex","weight":1.2,"headline":"release tick get return","preContext":["    } else {","      this.#mmTickCounter = v;","    }","  }"],"postContext":["set releaseTickIndex(v) {","    if (v >= Lemmings.COUNTER_LIMIT) {","      console.warn('releaseTickIndex wrapped, resetting to 0');","      this.#releaseTickIndex = 0;"]},{"id":982,"file":"js\\Level.js","start":4610,"end":4674,"kind":"MethodDefinition","name":"Level.setGroundMaskLayer","weight":1.2,"headline":"layer ground mask solid set","preContext":["getGroundMaskLayer() { return this.groundMask; }"],"postContext":["isOutOfLevel(y) { return y < 0 || y >= this.height; }"]},{"id":983,"file":"js\\GameResources.js","start":1225,"end":1481,"kind":"MethodDefinition","name":"GameResources.getSkillPanelSprite","weight":1.2,"headline":"get container skill panel color palette new","preContext":["        resolve(sprite);","      });","    });","  }"],"postContext":["getCursorSprite() {","    return new Promise((resolve) => {","      this.getMainDat().then((container) => {","        const fr = container.getPart(5);"]},{"id":984,"file":"js\\Lemming.js","start":2789,"end":2935,"kind":"MethodDefinition","name":"Lemming.remove","weight":1.2,"headline":"null action remove countdown removed true exploded","preContext":["disable() {","    this.disabled = true;","  }"],"postContext":["isDisabled() { return this.disabled; }"]},{"id":985,"file":"js\\GameView.js","start":5082,"end":5211,"kind":"MethodDefinition","name":"GameView.prevFrame","weight":1.2,"headline":"game prev frame null return get timer","preContext":["    }","    this.game.getGameTimer().tick(1);","    this.game.render();","  }"],"postContext":["selectSpeedFactor(newSpeed) {","    if (this.game == null) {","      return;","    }"]},{"id":986,"file":"test\\bench-tps.test.js","start":1354,"end":1432,"kind":"MethodDefinition","name":"DisplayImageStub.drawStippleRect","weight":0.5,"headline":"draw stipple rect arg calls push op","preContext":["drawRect(...args) { this.calls.push({ op: 'drawRect', args }); }"],"postContext":["drawMarchingAntRect(...args) { this.calls.push({ op: 'drawMarchingAntRect', args }); }"]},{"id":987,"file":"test\\bench-sequence.test.js","start":563,"end":580,"kind":"MethodDefinition","name":"StageMock.startFadeOut","weight":0.5,"headline":"fade","preContext":["resetFade() {}"],"postContext":["startOverlayFade() {}"]},{"id":988,"file":"test\\bench-entrance-placement.test.js","start":693,"end":710,"kind":"MethodDefinition","name":"StageStub.startFadeOut","weight":0.5,"headline":"fade","preContext":["clear() {}"],"postContext":["startOverlayFade() {}"]},{"id":989,"file":"test\\action-systems.test.js","start":3003,"end":3078,"kind":"MethodDefinition","name":"StubLevel.clearGroundWithMask","weight":0.5,"headline":"mask clear ground cleared masks push","preContext":["        return { width: w, height: h, hasGroundAt(dx, dy) { return self.hasGroundAt(x + dx, y + dy); } };","      }","    };","  }"],"postContext":["hasSteelUnderMask() { return this.steelUnder; }"]},{"id":990,"file":"test\\action-systems-extra.test.js","start":945,"end":975,"kind":"MethodDefinition","name":"StubGVC.addSurvivor","weight":0.5,"headline":"add survivor","preContext":["constructor(){ this.count=0; }"],"postContext":[]},{"id":991,"file":"test\\action-mine-system.test.js","start":911,"end":975,"kind":"MethodDefinition","name":"StubLevel.clearGroundWithMask","weight":0.5,"headline":"clear ground mask cleared push","preContext":["hasGroundAt(x, y) { return this.ground.has(this.key(x, y)); }"],"postContext":["hasSteelUnderMask() { return this.steel; }"]},{"id":992,"file":"test\\action-drown-explode.test.js","start":1006,"end":1048,"kind":"MethodDefinition","name":"StubTriggerManager.removeByOwner","weight":0.5,"headline":"remove owner removed push","preContext":["constructor() { this.removed = []; }"],"postContext":["class DummyMask { constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; } }"]},{"id":993,"file":"test\\gamegui.behavior.test.js","start":958,"end":1006,"kind":"MethodDefinition","name":"VictoryStub.getCurrentReleaseRate","weight":0.5,"headline":"current get release rate return","preContext":["getMaxReleaseRate() { return this.max; }"],"postContext":["setCurrentReleaseRate(v) { this.current = v; }"]},{"id":994,"file":"js\\SolidLayer.js","start":1463,"end":1926,"kind":"MethodDefinition","name":"SolidLayer.getSubLayer","weight":1.2,"headline":"sr const sub layer let continue ds","preContext":["    if (x >= 0 && x < this.width && y >= 0 && y < this.height) {","      this.mask[x + y * this.width] = 1;","    }","  }"],"postContext":["clearGroundWithMask(mask, x, y, skipTest = null) {","    let changed = false;","    Lemmings.withPerformance(","      'clearGroundWithMask',"]},{"id":995,"file":"js\\GameDisplay.js","start":3602,"end":4262,"kind":"MethodDefinition","name":"GameDisplay.dispose","weight":1.2,"headline":"null mouse handler move display manager lemming","preContext":["    const color = 0x5e5e5e; // slightly lighter grey","","    this.display.drawCornerRect(x, y, { width: 10, height: 13 }, color & 0xff, (color >> 8) & 0xff, (color >> 16) & 0xff);","  }"],"postContext":[]},{"id":996,"file":"js\\TriggerManager.js","start":5741,"end":5869,"kind":"MethodDefinition","name":"TriggerManager.dispose","weight":1.2,"headline":"null dispose game timer grid triggers debug","preContext":["    }\r","    delete trigger.__bucketIndices;\r","    this._debugFrame = null;\r","  }"],"postContext":[]},{"id":997,"file":"js\\UnpackFilePart.js","start":1935,"end":1988,"kind":"MethodDefinition","name":"UnpackFilePart.compressedSize","weight":1.2,"headline":"compressed size get return","preContext":["set decompressedSize(val) { this.#decompressedSize = val; }"],"postContext":["set compressedSize(val) { this.#compressedSize = val; }"]},{"id":998,"file":"js\\UserInputManager.js","start":7553,"end":8278,"kind":"MethodDefinition","name":"UserInputManager.handleMouseMove","weight":1.2,"headline":"mouse position move delta last drag arguments","preContext":["    const x = (clientX - rect.left) * scaleX;","    const y = (clientY - rect.top) * scaleY;","    return new Lemmings.Position2D(x, y);","  }"],"postContext":["handleMouseDown(position) {","    this.#setMouseDownState(position, 0);","","    this.onMouseDown.trigger(position);"]},{"id":999,"file":"js\\MiniMap.js","start":3703,"end":4470,"kind":"MethodDefinition","name":"MiniMap.buildTerrain","weight":1.2,"headline":"const math ly lx layer scale terrain","preContext":["    const newX = ((this.level.width - gd.worldDataSize.width) * pct) | 0;","    this.level.screenPositionX = newX;","    gd.setScreenPosition?.(newX, 0);","  }"],"postContext":["onGroundChanged(px, py, removed = true) {","    const mX = (px * this.scaleX) | 0;","    const mY = (py * this.scaleY) | 0;","    const idx = mY * this.width + mX;"]},{"id":1000,"file":"js\\GroundReader.js","start":4606,"end":6536,"kind":"MethodDefinition","name":"GroundReader._readObjectImages","weight":1.2,"headline":"im fr read unknown word log byte","preContext":["      }","      img.frames = frames;","    }","  }"],"postContext":["_readTerrainImages (fr, offset, palette) {","    fr.setOffset(offset);","","    for (let i = 0; i < TERRAIN_COUNT; ++i) {"]},{"id":1001,"file":"js\\Frame.js","start":1262,"end":1370,"kind":"MethodDefinition","name":"Frame.fill","weight":1.2,"headline":"fill color lemmings palette mask","preContext":["clear () {","    this.data.fill(Lemmings.ColorPalette.black);","    this.mask.fill(0);","  }"],"postContext":["drawPaletteImage (srcImg, srcWidth, srcHeight, palette, left = 0, top = 0) {","    const dest      = this.data;","    const dMask     = this.mask;","    const palLookup = palette._rgbaCache ||= /* build once */"]},{"id":1002,"file":"js\\ConfigReader.js","start":1016,"end":2266,"kind":"MethodDefinition","name":"ConfigReader.parseConfig","weight":1.2,"headline":"conf new level game mechanics let gs","preContext":["        resolve(config);","      });","    });","  }"],"postContext":[]},{"id":1003,"file":"js\\GameGui.js","start":9933,"end":11289,"kind":"MethodDefinition","name":"GameGui.setGuiDisplay","weight":1.2,"headline":"display mouse changed listeners event handler game","preContext":["      this.gameSpeedChanged = true;","      this.gameTimeChanged = true;","    }","  }"],"postContext":["_guiLoop(now) {","    if (!this.display) {","      return;","    }"]},{"id":1004,"file":"test\\gameview.controls.test.js","start":220,"end":251,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"get game display return","preContext":["constructor() {}"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":1005,"file":"test\\gameview.suspendWithColor.test.js","start":336,"end":367,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"get game display return","preContext":["constructor() {","    this.guiImgProps = { x: 10, y: 20, viewPoint: { scale: 2 } };","  }"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":1006,"file":"test\\gameview.start-existing.test.js","start":266,"end":297,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"get game display return","preContext":["constructor() {}"],"postContext":["getGuiDisplay() { return {}; }"]},{"id":1007,"file":"js\\GameTimer.js","start":2369,"end":2459,"kind":"MethodDefinition","name":"GameTimer.updateFrameTime","weight":1.2,"headline":"frame time update speed factor","preContext":["get frameTime() { return this.#frameTime; }"],"postContext":["toggle() {","    if (this.isRunning()) this.suspend();","    else this.continue();","  }"]},{"id":1008,"file":"js\\FileProvider.js","start":3553,"end":4801,"kind":"MethodDefinition","name":"FileProvider._fetchBinary","weight":1.2,"headline":"hr response const ur err new get","preContext":["    } catch (e) {","      console.log('cache update error', e);","    }","  }"],"postContext":["async _fetchText(url) {","    const response = await new Promise((resolve, reject) => {","      const xhr = new XMLHttpRequest();","      xhr.onload = () => {"]},{"id":1009,"file":"js\\BinaryReader.js","start":6051,"end":6336,"kind":"MethodDefinition","name":"BinaryReader.readIntBE","weight":1.2,"headline":"offset pos read int null const return","preContext":["    }","    this.#pos = offset;","    return v;","  }"],"postContext":["readWord(offset) {","    if (offset == null) offset = this.#pos;","    const v = (this.#data[offset] << 8) | (this.#data[offset + 1]);","    this.#pos = offset + 2;"]},{"id":1010,"file":"js\\Game.js","start":4248,"end":4294,"kind":"MethodDefinition","name":"Game.getGameSkills","weight":1.2,"headline":"skills get game return","preContext":["getGameTimer        () { return this.gameTimer; }"],"postContext":["getLemmingManager   () { return this.lemmingManager; }"]},{"id":1011,"file":"test\\gameview.test.js","start":943,"end":959,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsMock {","  constructor() {}","  dispose() {}","}"],"postContext":["dispose() {}"]},{"id":1012,"file":"test\\lemmingmanager.test.js","start":1781,"end":1820,"kind":"ClassDeclaration","name":"MineAction","weight":0.5,"headline":"action class mine extends dummy","preContext":["class DigAction extends DummyAction {}"],"postContext":[]},{"id":1013,"file":"js\\SkillPanelSprites.js","start":3473,"end":4007,"kind":"MethodDefinition","name":"SkillPanelSprites.getHighlightedButton","weight":1.2,"headline":"patch const let math min get panel","preContext":["      }\r","    }\r","    return out;\r","  }"],"postContext":[]},{"id":1014,"file":"js\\Stage.js","start":3476,"end":3778,"kind":"MethodDefinition","name":"Stage.handleOnMouseRightUp","weight":1.2,"headline":"stage image mouse const display pos handle","preContext":["      const pos = this.calcPosition2D(stageImage, e);","      stageImage.display.onMouseRightDown.trigger(pos);","    });","  }"],"postContext":["handleOnMouseMove() {","    this.controller.onMouseMove.on((e) => {","      this.cursorX = e.x;","      this.cursorY = e.y;"]},{"id":1015,"file":"test\\gameview.test.js","start":962,"end":974,"kind":"MethodDefinition","name":"KeyboardShortcutsMock.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":["class StageMock {","  constructor(canvas) {","    this.canvas = canvas;","    this.controller = {"]},{"id":1016,"file":"js\\Game.js","start":4297,"end":4351,"kind":"MethodDefinition","name":"Game.getLemmingManager","weight":1.2,"headline":"lemming manager get return","preContext":["getGameSkills       () { return this.skills; }"],"postContext":["getVictoryCondition () { return this.gameVictoryCondition; }"]},{"id":1017,"file":"js\\BinaryReader.js","start":6492,"end":6668,"kind":"MethodDefinition","name":"BinaryReader.readWord","weight":1.2,"headline":"offset pos read word null const return","preContext":["              (this.#data[offset + 3] << 24);","    this.#pos = offset + 4;","    return v;","  }"],"postContext":["readWordBE(offset) {","    if (offset == null) offset = this.#pos;","    const v = (this.#data[offset]) | (this.#data[offset + 1] << 8);","    this.#pos = offset + 2;"]},{"id":1018,"file":"js\\FileProvider.js","start":4805,"end":5912,"kind":"MethodDefinition","name":"FileProvider._fetchText","weight":1.2,"headline":"hr text response const err ur new","preContext":["    const hash = await this._hashBuffer(buf);","    this._storeInLocalStorage(url, { type: 'binary', data: this._arrayBufferToBase64(buf), hash, ...response.headers });","    return reader;","  }"],"postContext":["async _fetchHead(url) {","    if (typeof fetch !== 'function') return null;","    try {","      const resp = await fetch(url, { method: 'HEAD' });"]},{"id":1019,"file":"js\\GameTimer.js","start":2463,"end":2545,"kind":"MethodDefinition","name":"GameTimer.toggle","weight":1.2,"headline":"toggle running suspend else continue","preContext":["#updateFrameTime() {","    this.#frameTime = this.TIME_PER_FRAME_MS / this.#speedFactor;","  }"],"postContext":["continue() {","    if (this.isRunning()) return;","    this.#lastTime = performance.now();","    this.#running = true;"]},{"id":1020,"file":"test\\gameview.start-existing.test.js","start":300,"end":330,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return {}; }"],"postContext":["setCursorSprite() {}"]},{"id":1021,"file":"test\\gameview.suspendWithColor.test.js","start":370,"end":400,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return {}; }"],"postContext":["setCursorSprite() {}"]},{"id":1022,"file":"test\\gameview.controls.test.js","start":254,"end":284,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"get gu display return","preContext":["getGameDisplay() { return {}; }"],"postContext":["setCursorSprite() {}"]},{"id":1023,"file":"js\\GameGui.js","start":11293,"end":11595,"kind":"MethodDefinition","name":"GameGui._guiLoop","weight":1.2,"headline":"gu ss display window animation frame ra","preContext":["","    this.gameTimeChanged = this.skillsCountChanged = this.skillSelectionChanged = this.backgroundChanged = this.releaseRateChanged = true;","    this._guiRafId = window.requestAnimationFrame(this._guiBound);","  }"],"postContext":["dispose() {","    if (this._guiRafId) {","      window.cancelAnimationFrame(this._guiRafId);","      this._guiRafId = 0;"]},{"id":1024,"file":"js\\Frame.js","start":1518,"end":2355,"kind":"MethodDefinition","name":"Frame.drawPaletteImage","weight":1.2,"headline":"ds sr const let palette color base","preContext":["fill (r, g, b) {","    this.data.fill(Lemmings.ColorPalette.colorFromRGB(r, g, b));","    this.mask.fill(1);","  }"],"postContext":["drawRect (x, y, w, h, color, noOverwrite = false, onlyOverwrite = false) {","    const x2 = x + w;","    const y2 = y + h;","    for (let xx = x; xx <= x2; ++xx) {"]},{"id":1025,"file":"js\\GroundReader.js","start":6540,"end":7713,"kind":"MethodDefinition","name":"GroundReader._readTerrainImages","weight":1.2,"headline":"im fr read const steel filename folder","preContext":["      }","      this.imgObjects[i] = img;","    }","  }"],"postContext":["_readPalettes (fr, offset) {","    // Skip EGA palettes – they are unused in the VGA version (3×8 bytes)","    fr.setOffset(offset + 24);",""]},{"id":1026,"file":"js\\MiniMap.js","start":4614,"end":4923,"kind":"MethodDefinition","name":"MiniMap.onGroundChanged","weight":1.2,"headline":"terrain const removed scale ground changed true","preContext":["        this.terrain[mY * this.width + mX] = count;","      }","    }","  }"],"postContext":["invalidateRegion(x, y, w, h) {","    const gm = this.level.getGroundMaskLayer();","    const xEnd = Math.min(this.level.width, x + w);","    const yEnd = Math.min(this.level.height, y + h);"]},{"id":1027,"file":"js\\UserInputManager.js","start":8281,"end":8395,"kind":"MethodDefinition","name":"UserInputManager.handleMouseDown","weight":1.2,"headline":"mouse position handle set state trigger","preContext":["      /// raise event","      this.onMouseMove.trigger(new MouseMoveEventArguements(position.x, position.y, 0, 0, false));","    }","  }"],"postContext":["handleMouseRightDown(position) {","    this.#setMouseDownState(position, 2);","","    this.onMouseRightDown.trigger(position);"]},{"id":1028,"file":"js\\UnpackFilePart.js","start":1992,"end":2047,"kind":"MethodDefinition","name":"UnpackFilePart.compressedSize","weight":1.2,"headline":"compressed size set","preContext":["get compressedSize() { return this.#compressedSize; }"],"postContext":["get unknown0() { return this.#unknown0; }"]},{"id":1029,"file":"js\\SolidLayer.js","start":2353,"end":3441,"kind":"MethodDefinition","name":"SolidLayer.clearGroundWithMask","weight":1.2,"headline":"mask map clear const ground skip test","preContext":["      }","    }","    return sub;","  }"],"postContext":["clearGroundWithMasks(masks, positions, skipTest = null) {","    Lemmings.withPerformance(","      'clearGroundWithMasks',","      {"]},{"id":1030,"file":"test\\gamegui.behavior.test.js","start":1009,"end":1055,"kind":"MethodDefinition","name":"VictoryStub.setCurrentReleaseRate","weight":0.5,"headline":"current set release rate","preContext":["getCurrentReleaseRate() { return this.current; }"],"postContext":["getOutCount() { return 0; }"]},{"id":1031,"file":"test\\action-drown-explode.test.js","start":1135,"end":1241,"kind":"ClassDeclaration","name":"DummyMask","weight":0.5,"headline":"class dummy mask constructor offset","preContext":["removeByOwner(o) { this.removed.push(o); }"],"postContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; }"]},{"id":1032,"file":"test\\action-mine-system.test.js","start":978,"end":1020,"kind":"MethodDefinition","name":"StubLevel.hasSteelUnderMask","weight":0.5,"headline":"steel mask return","preContext":["clearGroundWithMask(m, x, y) { this.cleared.push({ m, x, y }); }"],"postContext":["hasArrowUnderMask() { return this.arrow; }"]},{"id":1033,"file":"test\\action-systems.test.js","start":3081,"end":3128,"kind":"MethodDefinition","name":"StubLevel.hasSteelUnderMask","weight":0.5,"headline":"steel mask return","preContext":["clearGroundWithMask(mask, x, y) { this.clearedMasks.push({ mask, x, y }); }"],"postContext":["hasArrowUnderMask() { return this.arrowUnder; }"]},{"id":1034,"file":"test\\bench-entrance-placement.test.js","start":711,"end":732,"kind":"MethodDefinition","name":"StageStub.startOverlayFade","weight":0.5,"headline":"overlay fade","preContext":["startFadeOut() {}"],"postContext":["class KeyboardShortcutsStub { constructor() {} dispose() {} }"]},{"id":1035,"file":"test\\bench-sequence.test.js","start":583,"end":604,"kind":"MethodDefinition","name":"StageMock.startOverlayFade","weight":0.5,"headline":"overlay fade","preContext":["startFadeOut() {}"],"postContext":["class LemmingManagerMock {","  constructor() { this._spawnCount = 0; this.spawnTotal = 0; }","  get spawnCount() { return this._spawnCount; }","  set spawnCount(v) { this._spawnCount = v; this.spawnTotal += v; }"]},{"id":1036,"file":"test\\bench-tps.test.js","start":1435,"end":1521,"kind":"MethodDefinition","name":"DisplayImageStub.drawMarchingAntRect","weight":0.5,"headline":"draw marching ant rect arg calls push","preContext":["drawStippleRect(...args) { this.calls.push({ op: 'drawStippleRect', args }); }"],"postContext":["drawHorizontalLine(...args) { this.calls.push({ op: 'drawHorizontalLine', args }); }"]},{"id":1037,"file":"js\\GameView.js","start":5215,"end":5387,"kind":"MethodDefinition","name":"GameView.selectSpeedFactor","weight":1.2,"headline":"speed game factor new select null return","preContext":["    }","    this.game.getGameTimer().tick(-1);","    this.game.render();","  }"],"postContext":["playMusic(moveInterval) {","","  }"]},{"id":1038,"file":"js\\Lemming.js","start":2939,"end":2977,"kind":"MethodDefinition","name":"Lemming.isDisabled","weight":1.2,"headline":"disabled return","preContext":["    this.removed = true;","    this.hasExploded = false;","    this.id = null;","  }"],"postContext":["isRemoved() { return (this.action == null); }"]},{"id":1039,"file":"js\\GameResources.js","start":1484,"end":1920,"kind":"MethodDefinition","name":"GameResources.getCursorSprite","weight":1.2,"headline":"pim get new const color pal resolve","preContext":["        resolve(new Lemmings.SkillPanelSprites(container.getPart(2), container.getPart(6), colorPalette));","      });","    });","  }"],"postContext":["getMasks() {","    return new Promise((resolve, reject) => {","      this.getMainDat().then((container) => {","        resolve(new Lemmings.MaskProvider(container.getPart(1)));"]},{"id":1040,"file":"js\\Level.js","start":4678,"end":4731,"kind":"MethodDefinition","name":"Level.isOutOfLevel","weight":1.2,"headline":"level return","preContext":["setGroundMaskLayer(solidLayer) { this.groundMask = solidLayer; }"],"postContext":["clearGroundWithMask(mask, x, y) {","    let changed = this.groundMask.clearGroundWithMask(","      mask, x, y,","      (px, py) => this.isSteelAt(px, py)"]},{"id":1041,"file":"js\\LemmingManager.js","start":5676,"end":5895,"kind":"MethodDefinition","name":"LemmingManager.releaseTickIndex","weight":1.2,"headline":"release tick set lemmings console warn wrapped","preContext":["get releaseTickIndex() { return this.#releaseTickIndex; }"],"postContext":["setMiniMap(miniMap) {","    this.miniMap = miniMap;","  }"]},{"id":1042,"file":"js\\GameVictoryCondition.js","start":1472,"end":1574,"kind":"MethodDefinition","name":"GameVictoryCondition.getSurvivorPercentage","weight":1.2,"headline":"survivor get percentage return math floor release","preContext":["getSurvivorsCount() {","    return this.survivorCount;","  }"],"postContext":["getOutCount() {","    return this.outCount;","  }"]},{"id":1043,"file":"js\\xbrz\\xbrz.js","start":972,"end":1063,"kind":"MethodDefinition","name":"OutputMatrix.move","weight":1.2,"headline":"rot deg move nr max scale sq","preContext":["    this.outWidth = outWidth;","    this.outi = 0;","    this.nr = 0;","  }"],"postContext":["ref (i, j) {","    i = parseInt(i);","    j = parseInt(j);","    const rot = matrixRotation[this.nr + i * maxScale + j];"]},{"id":1044,"file":"test\\gamegui.test.js","start":1310,"end":1374,"kind":"MethodDefinition","name":"DisplayImageStub.drawRect","weight":0.5,"headline":"draw rect arg calls push op","preContext":["drawFrameResized(frame, x, y, w, h) { this.calls.push({ op: 'drawFrameResized', frame, x, y, w, h }); }"],"postContext":["drawStippleRect(...args) { this.calls.push({ op: 'drawStippleRect', args }); }"]},{"id":1045,"file":"index.html","start":4800,"end":5600,"kind":"Blob","name":"blob","weight":1,"headline":"select div class level game canvas style","preContext":["<body onload=\"init();\" oncontextmenu=\"return false;\">","  <div id=\"midiConfig\" style=\"color:#fff; position: absolute; top: 0; left: 0;\">","    <div id=\"inputList\">","      <select id=\"midiInSelect\"></"],"postContext":["=\"37\" height=\"58\" onclick=\"lemmings.moveToLevel(-1)\"/>","      <img class=\"arrow_r\" src=\"img/arrow_r.png\" width=\"37\" height=\"58\" onclick=\"lemmings.moveToLevel(1)\"/>","    </div>","  </div>"]},{"id":1046,"file":"js\\DisplayImage.js","start":1761,"end":1837,"kind":"MethodDefinition","name":"DisplayImage.worldDataSize","weight":1.2,"headline":"size set world init","preContext":["get worldDataSize() {","    return { width: this.getWidth(), height: this.getHeight() };","  }"],"postContext":["initSize(width, height) {","    if (!this.imgData || this.imgData.width !== width || this.imgData.height !== height) {","      this.imgData  = this.stage.createImage(this, width, height);","      // Single 32‐bit view that aliases the same buffer – no copying."]},{"id":1047,"file":"js\\GameSkills.js","start":1287,"end":1342,"kind":"MethodDefinition","name":"GameSkills.getSelectedSkill","weight":1.2,"headline":"selected skill get return","preContext":["    const val = this.skills[type];","    if (val === Infinity) return 99;","    return val;","  }"],"postContext":["setSelectedSkill(skill) {","    if (this.selectedSkill == skill) {","      return false;","    }"]},{"id":1048,"file":"test\\gameview.onGameEnd.test.js","start":558,"end":568,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":[]},{"id":1049,"file":"test\\gameview.loadlevel.test.js","start":721,"end":784,"kind":"MethodDefinition","name":"StageStub.resetFade","weight":0.5,"headline":"reset called fade","preContext":["updateStageSize() {}"],"postContext":["class GameFactoryStub {","  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1050,"file":"test\\gameview.loadlevel-missing.test.js","start":678,"end":741,"kind":"MethodDefinition","name":"StageStub.resetFade","weight":0.5,"headline":"reset called fade","preContext":["updateStageSize() {}"],"postContext":["class GameFactoryStub {","  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1051,"file":"test\\action-base-system.test.js","start":751,"end":811,"kind":"MethodDefinition","name":"StubLemming.getDirection","weight":0.5,"headline":"get direction return look","preContext":["    this.x = 0;","    this.y = 0;","    this.lookRight = true;","  }"],"postContext":["setAction(act) { this.action = act; }"]},{"id":1052,"file":"js\\LogHandler.js","start":1144,"end":1286,"kind":"MethodDefinition","name":"BaseLogger.constructor","weight":1.2,"headline":"constructor handler lemmings log const logger new","preContext":["      }","    };","  }","}"],"postContext":["startMeasure(name, devtools = {}) {","    if (!(typeof lemmings !== 'undefined' &&","              lemmings.perfMetrics === true &&","              lemmings.debug === true) ||"]},{"id":1053,"file":"js\\CommandManager.js","start":2526,"end":2986,"kind":"MethodDefinition","name":"CommandManager.dispose","weight":1.2,"headline":"game tick timer null dispose listener log","preContext":["      result.push(key + '=' + command.getCommandKey() + command.save().join(':'));","    });","    return result.join('&');","  }"],"postContext":[]},{"id":1054,"file":"js\\ColorPalette.js","start":712,"end":829,"kind":"MethodDefinition","name":"ColorPalette.colorFromRGB","weight":1.2,"headline":"static color const ff return","preContext":["setColorRGB(index, r, g, b) {","    this.setColorInt(index, ColorPalette.colorFromRGB(r, g, b));","  }"],"postContext":["static get black() {","    return 0xFF000000;","  }"]},{"id":1055,"file":"js\\KeyboardShortcuts.js","start":4155,"end":4574,"kind":"MethodDefinition","name":"KeyboardShortcuts._cycleSkill","weight":1.2,"headline":"skill next game lemmings types skills view","preContext":["    } else {","      this._raf = null;","    }","  }"],"postContext":["_instantNuke() {","    const mgr = this.view.game.getLemmingManager?.();","    if (!mgr || !mgr.lemmings) return;","    for (const lem of mgr.lemmings) {"]},{"id":1056,"file":"js\\ColorPalette.js","start":832,"end":879,"kind":"MethodDefinition","name":"ColorPalette.black","weight":1.2,"headline":"static get black return","preContext":["static colorFromRGB(r, g, b) {","    const value = (0xff << 24) | (b << 16) | (g << 8) | r;","    return value >>> 0;","  }"],"postContext":["static get debugColor() {","    return 0xFFFF00FF;","  }"]},{"id":1057,"file":"js\\LogHandler.js","start":1498,"end":2077,"kind":"MethodDefinition","name":"BaseLogger.startMeasure","weight":1.2,"headline":"performance measure lemmings dev tools undefined true","preContext":["constructor(name) {","    const Handler = Lemmings.LogHandler || Lemmings.Logger;","    this.log = new Handler(name || this.constructor.name);","  }"],"postContext":["function withPerformance(name, devtools = {}, fn) {","  return function(...args) {","    if (!(typeof lemmings !== 'undefined' &&","              lemmings.perfMetrics === true &&"]},{"id":1058,"file":"test\\action-base-system.test.js","start":814,"end":851,"kind":"MethodDefinition","name":"StubLemming.setAction","weight":0.5,"headline":"action act set","preContext":["getDirection() { return this.lookRight ? 'right' : 'left'; }"],"postContext":["class StubDisplay {","  constructor() { this.calls = []; }","  drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }","}"]},{"id":1059,"file":"test\\gameview.loadlevel-missing.test.js","start":745,"end":911,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"game get return async conf class factory","preContext":["resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }"],"postContext":["async getGame() { return {}; }"]},{"id":1060,"file":"test\\gameview.loadlevel.test.js","start":788,"end":954,"kind":"ClassDeclaration","name":"GameFactoryStub","weight":0.5,"headline":"game get return async conf class factory","preContext":["resetFade() { this.resetCalled = (this.resetCalled || 0) + 1; }"],"postContext":["async getGame() { return {}; }"]},{"id":1061,"file":"js\\GameSkills.js","start":1345,"end":1626,"kind":"MethodDefinition","name":"GameSkills.setSelectedSkill","weight":1.2,"headline":"skill selected return false lemmings types set","preContext":["getSelectedSkill() {","    return this.selectedSkill;","  }"],"postContext":["cheat() {","    this.cheatMode = true;","    for (let i = 0; i < this.skills.length; i++) {","      this.skills[i] = Infinity;"]},{"id":1062,"file":"js\\DisplayImage.js","start":1900,"end":2249,"kind":"MethodDefinition","name":"DisplayImage.initSize","weight":1.2,"headline":"im init size stage create image single","preContext":["set worldDataSize({ width, height }) {","    this.initSize(width, height);","  }"],"postContext":["clear(color = 0xFF00FF00) {","    this.buffer32?.fill(color);","  }"]},{"id":1063,"file":"index.html","start":5600,"end":5857,"kind":"Blob","name":"blob","weight":1,"headline":"lemmings im click move level arrow sr","preContext":["        <select id=\"levelIndexSelect\"></select>","      </div>","      <span id=\"levelName\" class=\"level_name\"></span>","      <img class=\"arrow_l\" src=\"img/arrow_l.png\" width"],"postContext":[]},{"id":1064,"file":"test\\gamegui.test.js","start":1377,"end":1455,"kind":"MethodDefinition","name":"DisplayImageStub.drawStippleRect","weight":0.5,"headline":"draw stipple rect arg calls push op","preContext":["drawRect(...args) { this.calls.push({ op: 'drawRect', args }); }"],"postContext":["drawMarchingAntRect(...args) { this.calls.push({ op: 'drawMarchingAntRect', args }); }"]},{"id":1065,"file":"js\\xbrz\\xbrz.js","start":1067,"end":1272,"kind":"MethodDefinition","name":"OutputMatrix.ref","weight":1.2,"headline":"rot parse int ref const matrix rotation","preContext":["move (rotDeg, outi) {","    this.nr = this.n + rotDeg * maxScaleSq;","    this.outi = outi;","  }"],"postContext":["function square (value) {","  return value * value;","}"]},{"id":1066,"file":"js\\GameVictoryCondition.js","start":1628,"end":1673,"kind":"MethodDefinition","name":"GameVictoryCondition.getOutCount","weight":1.2,"headline":"get return","preContext":["getSurvivorPercentage() {","    return Math.floor(this.survivorCount / this.releaseCount * 100) | 0;","  }"],"postContext":["getLeftCount() {","    return this.leftCount;","  }"]},{"id":1067,"file":"js\\LemmingManager.js","start":5899,"end":5952,"kind":"MethodDefinition","name":"LemmingManager.setMiniMap","weight":1.2,"headline":"mini map set","preContext":["    } else {","      this.#releaseTickIndex = v;","    }","  }"],"postContext":["processNewAction(lem, newAction) {","    if (newAction == Lemmings.LemmingStateType.NO_STATE_TYPE) return false;","    this.setLemmingState(lem, newAction);","    return true;"]},{"id":1068,"file":"js\\Level.js","start":4735,"end":5568,"kind":"MethodDefinition","name":"Level.clearGroundWithMask","weight":1.2,"headline":"mask im const ground offset let changed","preContext":["isOutOfLevel(y) { return y < 0 || y >= this.height; }"],"postContext":["setGroundAt(x, y, paletteIndex) {","    this.groundMask.setGroundAt(x, y);","    const idx = (y * this.width + x) * 4;","    const gp = this.groundImage;"]},{"id":1069,"file":"js\\GameResources.js","start":1923,"end":2115,"kind":"MethodDefinition","name":"GameResources.getMasks","weight":1.2,"headline":"get new resolve container masks return promise","preContext":["        resolve(pimg.createFrame(pal));","      });","    });","  }"],"postContext":["getLevel(levelMode, levelIndex) {","    const levelReader = new Lemmings.LevelLoader(this.fileProvider, this.config);","    return levelReader.getLevel(levelMode, levelIndex);","  }"]},{"id":1070,"file":"js\\Lemming.js","start":2980,"end":3025,"kind":"MethodDefinition","name":"Lemming.isRemoved","weight":1.2,"headline":"removed return action null","preContext":["isDisabled() { return this.disabled; }"],"postContext":[]},{"id":1071,"file":"js\\GameView.js","start":5391,"end":5421,"kind":"MethodDefinition","name":"GameView.playMusic","weight":1.2,"headline":"play music move interval","preContext":["    }","    this.gameSpeedFactor = newSpeed;","    this.game.getGameTimer().speedFactor = newSpeed;","  }"],"postContext":["stopMusic() {","","  }"]},{"id":1072,"file":"test\\bench-tps.test.js","start":1524,"end":1608,"kind":"MethodDefinition","name":"DisplayImageStub.drawHorizontalLine","weight":0.5,"headline":"draw horizontal line arg calls push op","preContext":["drawMarchingAntRect(...args) { this.calls.push({ op: 'drawMarchingAntRect', args }); }"],"postContext":["setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }"]},{"id":1073,"file":"test\\bench-sequence.test.js","start":608,"end":871,"kind":"ClassDeclaration","name":"LemmingManagerMock","weight":0.5,"headline":"class lemming manager mock constructor spawn total","preContext":["startOverlayFade() {}"],"postContext":["constructor() { this._spawnCount = 0; this.spawnTotal = 0; }"]},{"id":1074,"file":"test\\bench-entrance-placement.test.js","start":735,"end":796,"kind":"ClassDeclaration","name":"KeyboardShortcutsStub","weight":0.5,"headline":"class keyboard shortcuts stub constructor dispose","preContext":["startOverlayFade() {}"],"postContext":["constructor() {}"]},{"id":1075,"file":"test\\action-systems.test.js","start":3131,"end":3178,"kind":"MethodDefinition","name":"StubLevel.hasArrowUnderMask","weight":0.5,"headline":"arrow mask return","preContext":["hasSteelUnderMask() { return this.steelUnder; }"],"postContext":["clearGroundAt(x, y) { this.clearedPoints.push(this.key(x, y)); this.ground.delete(this.key(x, y)); }"]},{"id":1076,"file":"test\\action-mine-system.test.js","start":1023,"end":1065,"kind":"MethodDefinition","name":"StubLevel.hasArrowUnderMask","weight":0.5,"headline":"arrow mask return","preContext":["hasSteelUnderMask() { return this.steel; }"],"postContext":[]},{"id":1077,"file":"test\\action-drown-explode.test.js","start":1153,"end":1239,"kind":"MethodDefinition","name":"DummyMask.constructor","weight":0.5,"headline":"constructor offset","preContext":["class DummyMask { constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; } }"],"postContext":["function stubMasks() {","  return {","    GetMask() {","      return { GetMask() { return new DummyMask(); } };"]},{"id":1078,"file":"test\\gamegui.behavior.test.js","start":1058,"end":1085,"kind":"MethodDefinition","name":"VictoryStub.getOutCount","weight":0.5,"headline":"get return","preContext":["setCurrentReleaseRate(v) { this.current = v; }"],"postContext":["getSurvivorPercentage() { return 0; }"]},{"id":1079,"file":"js\\SolidLayer.js","start":3778,"end":4381,"kind":"MethodDefinition","name":"SolidLayer.clearGroundWithMasks","weight":1.2,"headline":"masks clear ground mask pos length positions","preContext":["        }","      })();","    return changed;","  }"],"postContext":[]},{"id":1080,"file":"js\\UnpackFilePart.js","start":2099,"end":2140,"kind":"MethodDefinition","name":"UnpackFilePart.unknown0","weight":1.2,"headline":"unknown get return","preContext":["set compressedSize(val) { this.#compressedSize = val; }"],"postContext":["set unknown0(val) { this.#unknown0 = val; }"]},{"id":1081,"file":"js\\UserInputManager.js","start":8398,"end":8522,"kind":"MethodDefinition","name":"UserInputManager.handleMouseRightDown","weight":1.2,"headline":"mouse position handle set state trigger","preContext":["    this.#setMouseDownState(position, 0);","","    this.onMouseDown.trigger(position);","  }"],"postContext":["handleMouseMiddleDown(position) {","    this.#setMouseDownState(position, 1);","  }"]},{"id":1082,"file":"js\\MiniMap.js","start":4992,"end":6452,"kind":"MethodDefinition","name":"MiniMap.invalidateRegion","weight":1.2,"headline":"const math level scale let lx ly","preContext":["    } else {","      if (this.terrain[idx] < 128) ++this.terrain[idx];","    }","  }"],"postContext":["reveal(viewX, viewW) {","    const sx1 = Math.floor(viewX * this.scaleX);","    const sx2 = Math.min(this.width, Math.ceil((viewX + viewW) * this.scaleX));","    for (let y = 0; y < this.height; ++y) {"]},{"id":1083,"file":"js\\GroundReader.js","start":7717,"end":8438,"kind":"MethodDefinition","name":"GroundReader._readPalettes","weight":1.2,"headline":"fr read byte set palette color offset","preContext":["      }","      this.imgTerrain[i] = img;","    }","  }"],"postContext":[]},{"id":1084,"file":"js\\Frame.js","start":2439,"end":2910,"kind":"MethodDefinition","name":"Frame.drawRect","weight":1.2,"headline":"overwrite color xx set pixel false const","preContext":["      }","      dstIdx += dstStride;","    }","  }"],"postContext":["drawMarchingAntRect(","    x,","    y,","    width,"]},{"id":1085,"file":"js\\GameGui.js","start":11599,"end":12257,"kind":"MethodDefinition","name":"GameGui.dispose","weight":1.2,"headline":"null game display dispose gu ra cache","preContext":["    this.render();","    this.display.redraw();","    this._guiRafId = window.requestAnimationFrame(this._guiBound);","  }"],"postContext":["render() {","    if (!this.display) return;","    const d = this.display;",""]},{"id":1086,"file":"test\\gameview.controls.test.js","start":287,"end":307,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":1087,"file":"test\\gameview.suspendWithColor.test.js","start":403,"end":423,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":1088,"file":"test\\gameview.start-existing.test.js","start":333,"end":353,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return {}; }"],"postContext":["updateStageSize() {}"]},{"id":1089,"file":"js\\GameTimer.js","start":2549,"end":2730,"kind":"MethodDefinition","name":"GameTimer.continue","weight":1.2,"headline":"running continue return last time performance true","preContext":["toggle() {","    if (this.isRunning()) this.suspend();","    else this.continue();","  }"],"postContext":["suspend() {","    if (this.#rafId) {","      window.cancelAnimationFrame(this.#rafId);","      this.#rafId = 0;"]},{"id":1090,"file":"js\\FileProvider.js","start":5916,"end":6201,"kind":"MethodDefinition","name":"FileProvider._fetchHead","weight":1.2,"headline":"fetch return resp ur null headers get","preContext":["    const hash = await this._hashString(text);","    this._storeInLocalStorage(url, { type: 'text', data: text, hash, ...response.headers });","    return text;","  }"],"postContext":["_storeInLocalStorage(url, entry) {","    try {","      localStorage.setItem('lem-cache:' + url, JSON.stringify(entry));","    } catch (e) {"]},{"id":1091,"file":"js\\BinaryReader.js","start":6827,"end":7005,"kind":"MethodDefinition","name":"BinaryReader.readWordBE","weight":1.2,"headline":"offset pos read word null const return","preContext":["    const v = (this.#data[offset] << 8) | (this.#data[offset + 1]);","    this.#pos = offset + 2;","    return v;","  }"],"postContext":["readString(length, offset) {","    if (offset !== undefined && offset !== null) {","      this.#pos = offset + this.#hiddenOffset;","    }"]},{"id":1092,"file":"js\\Game.js","start":4354,"end":4414,"kind":"MethodDefinition","name":"Game.getVictoryCondition","weight":1.2,"headline":"victory condition get return game","preContext":["getLemmingManager   () { return this.lemmingManager; }"],"postContext":["getCommandManager   () { return this.commandManager; }"]},{"id":1093,"file":"test\\gameview.test.js","start":1029,"end":2518,"kind":"ClassDeclaration","name":"StageMock","weight":0.5,"headline":"mouse display game new lemmings controller event","preContext":["dispose() {}"],"postContext":["constructor(canvas) {","    this.canvas = canvas;","    this.controller = {","      onMouseDown: new Lemmings.EventHandler(),"]},{"id":1094,"file":"js\\Stage.js","start":3782,"end":4769,"kind":"MethodDefinition","name":"Stage.handleOnMouseMove","weight":1.2,"headline":"stage image const mouse move get display","preContext":["      const pos = this.calcPosition2D(stageImage, e);","      stageImage.display.onMouseRightUp.trigger(pos);","    });","  }"],"postContext":["handleOnZoom() {","    this.controller.onZoom.on((e) => {","      const stageImage = this.gameImgProps;","      if (!stageImage || !stageImage.display) return;"]},{"id":1095,"file":"js\\Game.js","start":4417,"end":4471,"kind":"MethodDefinition","name":"Game.getCommandManager","weight":1.2,"headline":"command manager get return","preContext":["getVictoryCondition () { return this.gameVictoryCondition; }"],"postContext":["cheat               () { this.skills?.cheat(); }"]},{"id":1096,"file":"js\\BinaryReader.js","start":7275,"end":7616,"kind":"MethodDefinition","name":"BinaryReader.readString","weight":1.2,"headline":"offset length pos chars string let read","preContext":["    const v = (this.#data[offset]) | (this.#data[offset + 1] << 8);","    this.#pos = offset + 2;","    return v;","  }"],"postContext":["getOffset() {","    return this.#pos - this.#hiddenOffset;","  }"]},{"id":1097,"file":"js\\FileProvider.js","start":6205,"end":6391,"kind":"MethodDefinition","name":"FileProvider._storeInLocalStorage","weight":1.2,"headline":"local storage ur entry cache store try","preContext":["    } catch (e) {","      return null;","    }","  }"],"postContext":["async _hashBuffer(buffer) {","    if (typeof globalThis.crypto !== 'undefined' && globalThis.crypto.subtle) {","      const hashBuf = await globalThis.crypto.subtle.digest('SHA-256', buffer);","      return Array.from(new Uint8Array(hashBuf))"]},{"id":1098,"file":"js\\GameTimer.js","start":2734,"end":2876,"kind":"MethodDefinition","name":"GameTimer.suspend","weight":1.2,"headline":"ra suspend window cancel animation frame running","preContext":["    this.#lastTime = performance.now();","    this.#running = true;","    this.#rafId = window.requestAnimationFrame(this.#loopBound);","  }"],"postContext":["tick(steps = 1) {","    if (this.isRunning()) return;","    const count = Math.trunc(Math.abs(steps));","    const dir = Math.sign(steps);"]},{"id":1099,"file":"test\\gameview.start-existing.test.js","start":356,"end":376,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":1100,"file":"test\\gameview.suspendWithColor.test.js","start":426,"end":446,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":1101,"file":"test\\gameview.controls.test.js","start":310,"end":330,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":1102,"file":"js\\GameGui.js","start":12261,"end":18445,"kind":"MethodDefinition","name":"GameGui.render","weight":1.2,"headline":"draw game get const panel changed skill","preContext":["    this.miniMap = null;","    this.smoothScroller = null;","","  }"],"postContext":["_pad(v, len) { const s = String(v); return s.length >= len ? s : ' '.repeat(len - s.length) + s; }"]},{"id":1103,"file":"js\\Frame.js","start":2914,"end":3599,"kind":"MethodDefinition","name":"Frame.drawMarchingAntRect","weight":1.2,"headline":"set pattern let color pos dash const","preContext":["      this.setPixel(x,  yy, color, noOverwrite, onlyOverwrite);","      this.setPixel(x2, yy, color, noOverwrite, onlyOverwrite);","    }","  }"],"postContext":["setPixel (x, y, color, noOverwrite = false, onlyOverwrite = false) {","    if ((x >>> 0) >= this.width || (y >>> 0) >= this.height) return;","    const idx = (y * this.width + x) >>> 0;","    if ((noOverwrite && this.mask[idx]) || (onlyOverwrite && !this.mask[idx])) return;"]},{"id":1104,"file":"js\\MiniMap.js","start":6508,"end":6808,"kind":"MethodDefinition","name":"MiniMap.reveal","weight":1.2,"headline":"view const math scale let reveal floor","preContext":["        this.terrain[idx] = count;","      }","    }","  }"],"postContext":["setLiveDots(arr) {","    // arr is a Uint8Array of scaled [x1,y1,x2,y2,...]","    this.liveDots = arr;","  }"]},{"id":1105,"file":"js\\UserInputManager.js","start":8525,"end":8604,"kind":"MethodDefinition","name":"UserInputManager.handleMouseMiddleDown","weight":1.2,"headline":"mouse position handle middle set state","preContext":["    this.#setMouseDownState(position, 2);","","    this.onMouseRightDown.trigger(position);","  }"],"postContext":["handleMouseDoubleClick(position) {","    this.onDoubleClick.trigger(position);","  }"]},{"id":1106,"file":"js\\UnpackFilePart.js","start":2144,"end":2187,"kind":"MethodDefinition","name":"UnpackFilePart.unknown0","weight":1.2,"headline":"unknown set","preContext":["get unknown0() { return this.#unknown0; }"],"postContext":["get unknown1() { return this.#unknown1; }"]},{"id":1107,"file":"test\\gamegui.behavior.test.js","start":1088,"end":1125,"kind":"MethodDefinition","name":"VictoryStub.getSurvivorPercentage","weight":0.5,"headline":"get survivor percentage return","preContext":["getOutCount() { return 0; }"],"postContext":["class PanelSpritesStub {","  getPanelSprite() { return { width: 320, height: 40 }; }","  getNumberSpriteEmpty() { return {}; }","  getLetterSprite() { return {}; }"]},{"id":1108,"file":"test\\action-drown-explode.test.js","start":1242,"end":1360,"kind":"FunctionDeclaration","name":"stubMasks","weight":0.5,"headline":"return mask get function stub masks new","preContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 1; this.height = 1; }"],"postContext":[]},{"id":1109,"file":"test\\action-systems.test.js","start":3181,"end":3281,"kind":"MethodDefinition","name":"StubLevel.clearGroundAt","weight":0.5,"headline":"ground key clear cleared points push delete","preContext":["hasArrowUnderMask() { return this.arrowUnder; }"],"postContext":["setGroundAt(x, y) { this.setGroundCalls.push(this.key(x, y)); this.ground.add(this.key(x, y)); }"]},{"id":1110,"file":"test\\bench-entrance-placement.test.js","start":765,"end":781,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.constructor","weight":0.5,"headline":"constructor","preContext":["class KeyboardShortcutsStub { constructor() {} dispose() {} }"],"postContext":["dispose() {}"]},{"id":1111,"file":"test\\bench-sequence.test.js","start":637,"end":697,"kind":"MethodDefinition","name":"LemmingManagerMock.constructor","weight":0.5,"headline":"constructor spawn total","preContext":["  get spawnCount() { return this._spawnCount; }","  set spawnCount(v) { this._spawnCount = v; this.spawnTotal += v; }","  getLemmings() { return new Array(this._spawnCount); }","}"],"postContext":["get spawnCount() { return this._spawnCount; }"]},{"id":1112,"file":"test\\bench-tps.test.js","start":1611,"end":1675,"kind":"MethodDefinition","name":"DisplayImageStub.setPixel","weight":0.5,"headline":"set pixel arg calls push op","preContext":["drawHorizontalLine(...args) { this.calls.push({ op: 'drawHorizontalLine', args }); }"],"postContext":["redraw() { this.redrawCalled = true; }"]},{"id":1113,"file":"js\\GameView.js","start":5425,"end":5443,"kind":"MethodDefinition","name":"GameView.stopMusic","weight":1.2,"headline":"stop music","preContext":["playMusic(moveInterval) {","","  }"],"postContext":["stopSound() {","","  }"]},{"id":1114,"file":"js\\GameResources.js","start":2173,"end":2348,"kind":"MethodDefinition","name":"GameResources.getLevel","weight":1.2,"headline":"level get mode reader const new lemmings","preContext":["        resolve(new Lemmings.MaskProvider(container.getPart(1)));","      });","    });","  }"],"postContext":["getLevelGroups() {","    return this.config.level.groups;","  }"]},{"id":1115,"file":"js\\Level.js","start":5572,"end":5962,"kind":"MethodDefinition","name":"Level.setGroundAt","weight":1.2,"headline":"palette ground gp color get set const","preContext":["      }","    }","    return changed;","  }"],"postContext":["hasGroundAt(x, y) { return this.groundMask.hasGroundAt(x, y); }"]},{"id":1116,"file":"js\\LemmingManager.js","start":5956,"end":6129,"kind":"MethodDefinition","name":"LemmingManager.processNewAction","weight":1.2,"headline":"new action le lemming state return process","preContext":["setMiniMap(miniMap) {","    this.miniMap = miniMap;","  }"],"postContext":["tick() {","    const tickNum = this.mmTickCounter;","    Lemmings.withPerformance(","      'tick',"]},{"id":1117,"file":"js\\GameVictoryCondition.js","start":1725,"end":1772,"kind":"MethodDefinition","name":"GameVictoryCondition.getLeftCount","weight":1.2,"headline":"get return","preContext":["getOutCount() {","    return this.outCount;","  }"],"postContext":["releaseOne() {","    if ((this.isFinalize) || (this.leftCount <= 0)) {","      return;","    }"]},{"id":1118,"file":"js\\xbrz\\xbrz.js","start":2108,"end":2159,"kind":"FunctionDeclaration","name":"square","weight":2,"headline":"function square return","preContext":["    const rot = matrixRotation[this.nr + i * maxScale + j];","    this.out.position(this.outi + rot.J + rot.I * this.outWidth);","    return this.out;","  }"],"postContext":["function fillBlock (trg, trgi, pitch, col, blockSize) {","  for (let y = 0; y < blockSize; ++y, trgi += pitch) {","    for (let x = 0; x < blockSize; ++x) {","      trg[trgi + x] = col;"]},{"id":1119,"file":"test\\gamegui.test.js","start":1458,"end":1544,"kind":"MethodDefinition","name":"DisplayImageStub.drawMarchingAntRect","weight":0.5,"headline":"draw marching ant rect arg calls push","preContext":["drawStippleRect(...args) { this.calls.push({ op: 'drawStippleRect', args }); }"],"postContext":["drawHorizontalLine(...args) { this.calls.push({ op: 'drawHorizontalLine', args }); }"]},{"id":1120,"file":"js\\DisplayImage.js","start":2334,"end":2397,"kind":"MethodDefinition","name":"DisplayImage.clear","weight":1.2,"headline":"color clear fill","preContext":["      this.buffer32 = new Uint32Array(this.imgData.data.buffer);","      this.clear();","    }","  }"],"postContext":["setBackground(groundImage, groundMask = null) {","    if (groundImage instanceof Uint8ClampedArray) {","      // Uint8 – copy bytes directly.","      this.imgData.data.set(groundImage);"]},{"id":1121,"file":"js\\GameSkills.js","start":1684,"end":1852,"kind":"MethodDefinition","name":"GameSkills.cheat","weight":1.2,"headline":"cheat skills mode true let length infinity","preContext":["    this.selectedSkill = skill;","    this.onSelectionChanged.trigger();","    return true;","  }"],"postContext":["clearSelectedSkill() {","    if (this.selectedSkill !== Lemmings.SkillTypes.UNKNOWN) {","      this.selectedSkill = Lemmings.SkillTypes.UNKNOWN;","      this.onSelectionChanged.trigger();"]},{"id":1122,"file":"test\\gameview.loadlevel.test.js","start":814,"end":844,"kind":"MethodDefinition","name":"GameFactoryStub.getGame","weight":0.5,"headline":"async get game return","preContext":["  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGameResources() { return {}; }"]},{"id":1123,"file":"test\\gameview.loadlevel-missing.test.js","start":771,"end":801,"kind":"MethodDefinition","name":"GameFactoryStub.getGame","weight":0.5,"headline":"async get game return","preContext":["  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGameResources() { return {}; }"]},{"id":1124,"file":"test\\action-base-system.test.js","start":855,"end":976,"kind":"ClassDeclaration","name":"StubDisplay","weight":0.5,"headline":"class stub display constructor frame calls draw","preContext":["setAction(act) { this.action = act; }"],"postContext":["constructor() { this.calls = []; }"]},{"id":1125,"file":"js\\LogHandler.js","start":2081,"end":2761,"kind":"FunctionDeclaration","name":"withPerformance","weight":2,"headline":"performance function fn return arg lemmings dev","preContext":["        /* ignored */","      }","    };","  }"],"postContext":[]},{"id":1126,"file":"js\\ColorPalette.js","start":882,"end":934,"kind":"MethodDefinition","name":"ColorPalette.debugColor","weight":1.2,"headline":"static get debug color return","preContext":["static get black() {","    return 0xFF000000;","  }"],"postContext":[]},{"id":1127,"file":"js\\KeyboardShortcuts.js","start":4578,"end":5084,"kind":"MethodDefinition","name":"KeyboardShortcuts._instantNuke","weight":1.2,"headline":"mgr le lemming lemmings continue state action","preContext":["    if (next < Lemmings.SkillTypes.CLIMBER) next = Lemmings.SkillTypes.DIGGER;","    this.view.game.queueCommand(new Lemmings.CommandSelectSkill(next, false));","    this.view.game.gameGui.skillSelectionChanged = true;","  }"],"postContext":["_changeSpeed(dir, isShift) {","    const timer = this.view.game.getGameTimer();","    const gui = this.view.game.gameGui;","    // Shift should noticeably speed things up"]},{"id":1128,"file":"test\\action-base-system.test.js","start":877,"end":911,"kind":"MethodDefinition","name":"StubDisplay.constructor","weight":0.5,"headline":"constructor calls","preContext":["class StubDisplay {","  constructor() { this.calls = []; }","  drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }","}"],"postContext":["drawFrame(frame, x, y) { this.calls.push({ frame, x, y }); }"]},{"id":1129,"file":"test\\gameview.loadlevel-missing.test.js","start":804,"end":843,"kind":"MethodDefinition","name":"GameFactoryStub.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1130,"file":"test\\gameview.loadlevel.test.js","start":847,"end":886,"kind":"MethodDefinition","name":"GameFactoryStub.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1131,"file":"js\\GameSkills.js","start":1856,"end":2084,"kind":"MethodDefinition","name":"GameSkills.clearSelectedSkill","weight":1.2,"headline":"skill selected lemmings types return clear selection","preContext":["      this.skills[i] = Infinity;","      this.onCountChanged.trigger(i);","    }","  }"],"postContext":[]},{"id":1132,"file":"js\\DisplayImage.js","start":2467,"end":2951,"kind":"MethodDefinition","name":"DisplayImage.setBackground","weight":1.2,"headline":"ground image set mask ui nt background","preContext":["clear(color = 0xFF00FF00) {","    this.buffer32?.fill(color);","  }"],"postContext":["drawRect(x, y, width, height, r, g, b, filled = false) {","    const x2 = x + width;","    const y2 = y + height;","    this.drawHorizontalLine(x, y,  x2, r, g, b);"]},{"id":1133,"file":"test\\gamegui.test.js","start":1547,"end":1631,"kind":"MethodDefinition","name":"DisplayImageStub.drawHorizontalLine","weight":0.5,"headline":"draw horizontal line arg calls push op","preContext":["drawMarchingAntRect(...args) { this.calls.push({ op: 'drawMarchingAntRect', args }); }"],"postContext":["setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }"]},{"id":1134,"file":"js\\xbrz\\xbrz.js","start":2174,"end":2365,"kind":"FunctionDeclaration","name":"fillBlock","weight":2,"headline":"tr gi size pitch let function fill","preContext":["function square (value) {","  return value * value;","}"],"postContext":["function distYCbCr (pix1, pix2, lumaWeight) {","  const r_diff = ((pix1 & redMask) - (pix2 & redMask)) >> 16;","  const g_diff = ((pix1 & greenMask) - (pix2 & greenMask)) >> 8;","  const b_diff = ((pix1 & blueMask) - (pix2 & blueMask));"]},{"id":1135,"file":"js\\GameVictoryCondition.js","start":1808,"end":1943,"kind":"MethodDefinition","name":"GameVictoryCondition.releaseOne","weight":1.2,"headline":"release one finalize return","preContext":["getLeftCount() {","    return this.leftCount;","  }"],"postContext":["removeOne() {","    if (this.isFinalize) {","      return;","    }"]},{"id":1136,"file":"js\\LemmingManager.js","start":6133,"end":8492,"kind":"MethodDefinition","name":"LemmingManager.tick","weight":1.2,"headline":"le const lemmings ms action tick sel","preContext":["    if (newAction == Lemmings.LemmingStateType.NO_STATE_TYPE) return false;","    this.setLemmingState(lem, newAction);","    return true;","  }"],"postContext":["addLemming(x, y) {","    Lemmings.withPerformance(","      'addLemming',","      {"]},{"id":1137,"file":"js\\Level.js","start":5966,"end":6029,"kind":"MethodDefinition","name":"Level.hasGroundAt","weight":1.2,"headline":"ground return mask","preContext":["    gp[idx + 1] = this.colorPalette.getG(paletteIndex);","    gp[idx + 2] = this.colorPalette.getB(paletteIndex);","    lemmings.game.lemmingManager.miniMap.onGroundChanged(x, y, false);","  }"],"postContext":["clearGroundAt(x, y) {","    if (this.isSteelAt(x, y)) return;","    this.groundMask.clearGroundAt(x, y);","    const idx = (y * this.width + x) * 4;"]},{"id":1138,"file":"js\\GameResources.js","start":2403,"end":2462,"kind":"MethodDefinition","name":"GameResources.getLevelGroups","weight":1.2,"headline":"level groups get return conf","preContext":["getLevel(levelMode, levelIndex) {","    const levelReader = new Lemmings.LevelLoader(this.fileProvider, this.config);","    return levelReader.getLevel(levelMode, levelIndex);","  }"],"postContext":[]},{"id":1139,"file":"js\\GameView.js","start":5447,"end":5465,"kind":"MethodDefinition","name":"GameView.stopSound","weight":1.2,"headline":"stop sound","preContext":["stopMusic() {","","  }"],"postContext":["playSound(moveInterval) {","","  }"]},{"id":1140,"file":"test\\bench-tps.test.js","start":1678,"end":1716,"kind":"MethodDefinition","name":"DisplayImageStub.redraw","weight":0.5,"headline":"redraw called true","preContext":["setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }"],"postContext":["setScreenPosition(x, y) { this.pos = [x, y]; }"]},{"id":1141,"file":"test\\bench-sequence.test.js","start":700,"end":745,"kind":"MethodDefinition","name":"LemmingManagerMock.spawnCount","weight":0.5,"headline":"spawn get return","preContext":["constructor() { this._spawnCount = 0; this.spawnTotal = 0; }"],"postContext":["set spawnCount(v) { this._spawnCount = v; this.spawnTotal += v; }"]},{"id":1142,"file":"test\\bench-entrance-placement.test.js","start":782,"end":794,"kind":"MethodDefinition","name":"KeyboardShortcutsStub.dispose","weight":0.5,"headline":"dispose","preContext":["constructor() {}"],"postContext":[]},{"id":1143,"file":"test\\action-systems.test.js","start":3284,"end":3380,"kind":"MethodDefinition","name":"StubLevel.setGroundAt","weight":0.5,"headline":"ground set key calls push add","preContext":["clearGroundAt(x, y) { this.clearedPoints.push(this.key(x, y)); this.ground.delete(this.key(x, y)); }"],"postContext":["isSteelGround(x, y) { return this.steelGround(this.key(x, y)); }"]},{"id":1144,"file":"test\\gamegui.behavior.test.js","start":1129,"end":1367,"kind":"ClassDeclaration","name":"PanelSpritesStub","weight":0.5,"headline":"get sprite return number panel class sprites","preContext":["getSurvivorPercentage() { return 0; }"],"postContext":["getPanelSprite() { return { width: 320, height: 40 }; }"]},{"id":1145,"file":"js\\UnpackFilePart.js","start":2239,"end":2280,"kind":"MethodDefinition","name":"UnpackFilePart.unknown1","weight":1.2,"headline":"unknown get return","preContext":["set unknown0(val) { this.#unknown0 = val; }"],"postContext":["set unknown1(val) { this.#unknown1 = val; }"]},{"id":1146,"file":"js\\UserInputManager.js","start":8607,"end":8687,"kind":"MethodDefinition","name":"UserInputManager.handleMouseDoubleClick","weight":1.2,"headline":"double click position handle mouse trigger","preContext":["handleMouseMiddleDown(position) {","    this.#setMouseDownState(position, 1);","  }"],"postContext":["handleMouseClear() {","    this.mouseButton = false;","    this.mouseButtonNumber = 0;","    this.mouseDownX = 0;"]},{"id":1147,"file":"js\\MiniMap.js","start":6812,"end":6914,"kind":"MethodDefinition","name":"MiniMap.setLiveDots","weight":1.2,"headline":"arr live dots set ui nt scaled","preContext":["      const row = y * this.width;","      for (let x = sx1; x < sx2; ++x) this.fog[row + x] = 1;","    }","  }"],"postContext":["setSelectedDot(dot) {","    this.selectedDot = dot;","  }"]},{"id":1148,"file":"js\\Frame.js","start":3603,"end":3927,"kind":"MethodDefinition","name":"Frame.setPixel","weight":1.2,"headline":"overwrite mask color false return set pixel","preContext":["    for (let dy = 1; dy <= height; dy++) set(x + width, y + dy);","    for (let dx = 1; dx <= width; dx++) set(x + width - dx, y + height);","    for (let dy = 1; dy < height; dy++) set(x, y + height - dy);","  }"],"postContext":["clearPixel (x, y) {","    if ((x >>> 0) >= this.width || (y >>> 0) >= this.height) return;","    const idx = (y * this.width + x) >>> 0;","    this.data[idx] = Lemmings.ColorPalette.black;"]},{"id":1149,"file":"js\\GameGui.js","start":18449,"end":18547,"kind":"MethodDefinition","name":"GameGui._pad","weight":1.2,"headline":"length pad const string return repeat","preContext":["","      this.miniMap.render(viewX, viewW);","    }","  }"],"postContext":["_getLeftDigit(d)  { if (d <= 0) return null;","    if (!this._numLeftCache[d])  this._numLeftCache[d]  = this.skillPanelSprites.getNumberSpriteLeft(d);","    return this._numLeftCache[d]; }"]},{"id":1150,"file":"test\\gameview.controls.test.js","start":333,"end":343,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":["startFadeOut() {}"]},{"id":1151,"file":"test\\gameview.suspendWithColor.test.js","start":449,"end":459,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":["startFadeOut() {}"]},{"id":1152,"file":"test\\gameview.start-existing.test.js","start":379,"end":389,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":["startFadeOut() {}"]},{"id":1153,"file":"js\\GameTimer.js","start":3056,"end":3633,"kind":"MethodDefinition","name":"GameTimer.tick","weight":1.2,"headline":"tick game trigger steps math const dir","preContext":["      this.#rafId = 0;","    }","    this.#running = false;","  }"],"postContext":["#loop(now) {","    if (!this.isRunning()) return;","    window.cancelAnimationFrame(this.#rafId);","    this.#rafId = 0;"]},{"id":1154,"file":"js\\FileProvider.js","start":6395,"end":6969,"kind":"MethodDefinition","name":"FileProvider._hashBuffer","weight":1.2,"headline":"hash crypto global const subtle bu await","preContext":["    } catch (e) {","      console.log('cache write error', e);","    }","  }"],"postContext":["async _hashString(str) {","    const enc = new TextEncoder();","    return this._hashBuffer(enc.encode(str));","  }"]},{"id":1155,"file":"js\\BinaryReader.js","start":7722,"end":7782,"kind":"MethodDefinition","name":"BinaryReader.getOffset","weight":1.2,"headline":"offset get return pos hidden","preContext":["      chars.push(String.fromCharCode(this.#data[this.#pos++]));","    }","    return chars.join('');","  }"],"postContext":["setOffset(newPos) {","    this.#pos = newPos + this.#hiddenOffset;","  }"]},{"id":1156,"file":"js\\Game.js","start":4474,"end":4522,"kind":"MethodDefinition","name":"Game.cheat","weight":1.2,"headline":"cheat skills","preContext":["getCommandManager   () { return this.commandManager; }"],"postContext":["setDebugMode       (v) { this.showDebug = !!v; }"]},{"id":1157,"file":"js\\Stage.js","start":4773,"end":5070,"kind":"MethodDefinition","name":"Stage.handleOnZoom","weight":1.2,"headline":"zoom stage image handle controller const game","preContext":["        ","      }","    });","  }"],"postContext":["updateViewPoint(stageImage, argX, argY, deltaZoom, veloUpdate = false) {","    if (!stageImage || !stageImage.display) return;","","    let targetScale = stageImage.viewPoint.scale || 1;"]},{"id":1158,"file":"test\\gameview.test.js","start":1049,"end":2182,"kind":"MethodDefinition","name":"StageMock.constructor","weight":0.5,"headline":"constructor mouse display new lemmings controller event","preContext":["  startOverlayFade(color, rect) { this.overlayArgs = { color, rect }; }","  resetFade() { this.resetCalled = true; }","  setGameViewPointPosition() {}","}"],"postContext":["getGameDisplay() { return this.gameDisplay; }"]},{"id":1159,"file":"js\\Game.js","start":4525,"end":4573,"kind":"MethodDefinition","name":"Game.setDebugMode","weight":1.2,"headline":"debug set mode show","preContext":["cheat               () { this.skills?.cheat(); }"],"postContext":["queueCommand(cmd)   { this.commandManager?.queueCommand(cmd); }"]},{"id":1160,"file":"js\\BinaryReader.js","start":7912,"end":7980,"kind":"MethodDefinition","name":"BinaryReader.setOffset","weight":1.2,"headline":"pos offset new set hidden","preContext":["getOffset() {","    return this.#pos - this.#hiddenOffset;","  }"],"postContext":["eof() {","    const pos = this.#pos - this.#hiddenOffset;","    return (pos >= this.#length) || (pos < 0);","  }"]},{"id":1161,"file":"js\\FileProvider.js","start":6973,"end":7082,"kind":"MethodDefinition","name":"FileProvider._hashString","weight":1.2,"headline":"hash str enc async string const new","preContext":["    } catch (e) {","      throw new Error('crypto API not available');","    }","  }"],"postContext":["_arrayBufferToBase64(buffer) {","    let binary = '';","    const bytes = new Uint8Array(buffer);","    for (let i = 0; i < bytes.byteLength; i++) {"]},{"id":1162,"file":"js\\GameTimer.js","start":3637,"end":4610,"kind":"MethodDefinition","name":"GameTimer.loop","weight":1.2,"headline":"game time tick frame last delta second","preContext":["        if (this.onGameTick) this.onGameTick.trigger();","      }","    }","  }"],"postContext":["#benchSpeedAdjust(steps) {","    // dynamically adjust speed based on how far we fall behind","    // slowThreshold and recoverThreshold scale with the current speedFactor.","    // Below speedFactor 6 the values grow too large; use speedFactor * 1.5 so"]},{"id":1163,"file":"test\\gameview.start-existing.test.js","start":392,"end":409,"kind":"MethodDefinition","name":"StageMock.startFadeOut","weight":0.5,"headline":"fade","preContext":["clear() {}"],"postContext":["startOverlayFade() {}"]},{"id":1164,"file":"test\\gameview.suspendWithColor.test.js","start":462,"end":479,"kind":"MethodDefinition","name":"StageMock.startFadeOut","weight":0.5,"headline":"fade","preContext":["clear() {}"],"postContext":["startOverlayFade(color, rect) { this.called = { color, rect }; }"]},{"id":1165,"file":"test\\gameview.controls.test.js","start":346,"end":363,"kind":"MethodDefinition","name":"StageMock.startFadeOut","weight":0.5,"headline":"fade","preContext":["clear() {}"],"postContext":["startOverlayFade() {}"]},{"id":1166,"file":"js\\GameGui.js","start":18550,"end":18735,"kind":"MethodDefinition","name":"GameGui._getLeftDigit","weight":1.2,"headline":"num cache get return digit null skill","preContext":["_pad(v, len) { const s = String(v); return s.length >= len ? s : ' '.repeat(len - s.length) + s; }"],"postContext":["_getRightDigit(d) { if (!this._numRightCache[d])","    this._numRightCache[d] = this.skillPanelSprites.getNumberSpriteRight(d);","  return this._numRightCache[d]; ","  }"]},{"id":1167,"file":"js\\Frame.js","start":3931,"end":4141,"kind":"MethodDefinition","name":"Frame.clearPixel","weight":1.2,"headline":"clear pixel return const lemmings color palette","preContext":["    if ((noOverwrite && this.mask[idx]) || (onlyOverwrite && !this.mask[idx])) return;","    this.data[idx] = color;","    this.mask[idx] = 1;","  }"],"postContext":[]},{"id":1168,"file":"js\\MiniMap.js","start":6918,"end":6971,"kind":"MethodDefinition","name":"MiniMap.setSelectedDot","weight":1.2,"headline":"dot selected set","preContext":["setLiveDots(arr) {","    // arr is a Uint8Array of scaled [x1,y1,x2,y2,...]","    this.liveDots = arr;","  }"],"postContext":["addDeath(x, y) {","    const sx = Math.max(0, Math.min(this.width - 1, (x * this.scaleX) | 0));","    const sy = Math.max(0, Math.min(this.height - 1, (y * this.scaleY) | 0));",""]},{"id":1169,"file":"js\\UserInputManager.js","start":8690,"end":8935,"kind":"MethodDefinition","name":"UserInputManager.handleMouseClear","weight":1.2,"headline":"mouse last button false touch handle clear","preContext":["handleMouseDoubleClick(position) {","    this.onDoubleClick.trigger(position);","  }"],"postContext":["handleMouseUp(position) {","    this.handleMouseClear();","    this.onMouseUp.trigger(new Lemmings.Position2D(position.x, position.y));","  }"]},{"id":1170,"file":"js\\UnpackFilePart.js","start":2284,"end":2327,"kind":"MethodDefinition","name":"UnpackFilePart.unknown1","weight":1.2,"headline":"unknown set","preContext":["get unknown1() { return this.#unknown1; }"],"postContext":["get index() { return this.#index; }"]},{"id":1171,"file":"test\\gamegui.behavior.test.js","start":1156,"end":1211,"kind":"MethodDefinition","name":"PanelSpritesStub.getPanelSprite","weight":0.5,"headline":"get panel sprite return","preContext":["  getLetterSprite() { return {}; }","  getNumberSpriteLeft() { return {}; }","  getNumberSpriteRight() { return {}; }","}"],"postContext":["getNumberSpriteEmpty() { return {}; }"]},{"id":1172,"file":"test\\action-systems.test.js","start":3383,"end":3447,"kind":"MethodDefinition","name":"StubLevel.isSteelGround","weight":0.5,"headline":"steel ground return key","preContext":["setGroundAt(x, y) { this.setGroundCalls.push(this.key(x, y)); this.ground.add(this.key(x, y)); }"],"postContext":["isOutOfLevel(y) { return y < 0 || y >= 50; }"]},{"id":1173,"file":"test\\bench-sequence.test.js","start":748,"end":813,"kind":"MethodDefinition","name":"LemmingManagerMock.spawnCount","weight":0.5,"headline":"spawn set total","preContext":["get spawnCount() { return this._spawnCount; }"],"postContext":["getLemmings() { return new Array(this._spawnCount); }"]},{"id":1174,"file":"test\\bench-tps.test.js","start":1719,"end":1765,"kind":"MethodDefinition","name":"DisplayImageStub.setScreenPosition","weight":0.5,"headline":"set screen position pos","preContext":["redraw() { this.redrawCalled = true; }"],"postContext":["class GameTimerStub {","  constructor() { this.eachGameSecond = new Lemmings.EventHandler(); this.speedFactor = 1; this.running = true; }","  isRunning() { return this.running; }","  getGameLeftTimeString() { return '1:00'; }"]},{"id":1175,"file":"js\\GameView.js","start":5469,"end":5499,"kind":"MethodDefinition","name":"GameView.playSound","weight":1.2,"headline":"play sound move interval","preContext":["stopSound() {","","  }"],"postContext":["enableDebug() {","    if (this.game == null) {","      return;","    }"]},{"id":1176,"file":"js\\Level.js","start":6033,"end":6328,"kind":"MethodDefinition","name":"Level.clearGroundAt","weight":1.2,"headline":"ground gp clear const steel return mask","preContext":["hasGroundAt(x, y) { return this.groundMask.hasGroundAt(x, y); }"],"postContext":["setArrowAreas(ranges = []) {","    const buf = new Int32Array(ranges.length * 5);","    for (let i = 0, o = 0; i < ranges.length; ++i, o += 5) {","      const r = ranges[i];"]},{"id":1177,"file":"js\\LemmingManager.js","start":8496,"end":9784,"kind":"MethodDefinition","name":"LemmingManager.addLemming","weight":1.2,"headline":"lemmings extra lemming le const state length","preContext":["          this.miniMap.setSelectedDot(selDot);","        }","      })();","  }"],"postContext":["addNewLemmings() {","    if (lemmings.bench == true) { // if bench is enabled just keep spawning lems by skipping gameVictoryCondition check","            ","    } else {"]},{"id":1178,"file":"js\\GameVictoryCondition.js","start":1972,"end":2057,"kind":"MethodDefinition","name":"GameVictoryCondition.removeOne","weight":1.2,"headline":"remove one finalize return","preContext":["    }","    this.leftCount--;","    this.outCount++;","  }"],"postContext":["doNuke() {","    if (this.isFinalize) {","      return;","    }"]},{"id":1179,"file":"js\\xbrz\\xbrz.js","start":2367,"end":2913,"kind":"FunctionDeclaration","name":"distYCbCr","weight":2,"headline":"pix const diff mask scale square lum","preContext":["      trg[trgi + x] = col;","    }","  }","}"],"postContext":["function colorDist (pix1, pix2, luminanceWeight) {","  if (pix1 === pix2) {","    return 0;","  }"]},{"id":1180,"file":"test\\gamegui.test.js","start":1634,"end":1698,"kind":"MethodDefinition","name":"DisplayImageStub.setPixel","weight":0.5,"headline":"set pixel arg calls push op","preContext":["drawHorizontalLine(...args) { this.calls.push({ op: 'drawHorizontalLine', args }); }"],"postContext":["redraw() { this.redrawCalled = true; }"]},{"id":1181,"file":"js\\DisplayImage.js","start":3039,"end":3480,"kind":"MethodDefinition","name":"DisplayImage.drawRect","weight":1.2,"headline":"draw line horizontal filled const vertical rect","preContext":["      // this.imgData.data.set(groundImage);","    }","    this.groundMask = groundMask;","  }"],"postContext":["drawDashedRect(x, y, width, height, r, g, b, dashLen = 2) {","    const x2 = x + width;","    const y2 = y + height;","    const step = dashLen * 2;"]},{"id":1182,"file":"test\\gameview.loadlevel.test.js","start":889,"end":952,"kind":"MethodDefinition","name":"GameFactoryStub.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":[]},{"id":1183,"file":"test\\gameview.loadlevel-missing.test.js","start":846,"end":909,"kind":"MethodDefinition","name":"GameFactoryStub.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":[]},{"id":1184,"file":"test\\action-base-system.test.js","start":914,"end":974,"kind":"MethodDefinition","name":"StubDisplay.drawFrame","weight":0.5,"headline":"frame draw calls push","preContext":["constructor() { this.calls = []; }"],"postContext":[]},{"id":1185,"file":"js\\KeyboardShortcuts.js","start":5088,"end":5939,"kind":"MethodDefinition","name":"KeyboardShortcuts._changeSpeed","weight":1.2,"headline":"speed timer factor gu change game draw","preContext":["      if (lem.action === mgr.actions?.[Lemmings.LemmingStateType.OHNO]) continue;","      mgr.setLemmingState(lem, Lemmings.LemmingStateType.EXPLODING);","    }","  }"],"postContext":["_onKeyDown(e) {","    const game = this.view.game;","    if (!game || e.ctrlKey || e.metaKey) return;","    let handled = true;"]},{"id":1186,"file":"js\\DisplayImage.js","start":3484,"end":4046,"kind":"MethodDefinition","name":"DisplayImage.drawDashedRect","weight":1.2,"headline":"dash draw line math min const step","preContext":["    this.drawHorizontalLine(x, y2, x2, r, g, b);","    this.drawVerticalLine(  x,  y,  y2, r, g, b);","    this.drawVerticalLine( x2,  y,  y2, r, g, b);","  }"],"postContext":["drawVerticalLine(x, y1, y2, r, g, b) {","    if (!this.buffer32) return;","    const { width: w, height: h } = this.imgData;","    x  = Math.min(Math.max(x,  0), w - 1);"]},{"id":1187,"file":"test\\gamegui.test.js","start":1701,"end":1739,"kind":"MethodDefinition","name":"DisplayImageStub.redraw","weight":0.5,"headline":"redraw called true","preContext":["setPixel(...args) { this.calls.push({ op: 'setPixel', args }); }"],"postContext":["setScreenPosition(x, y) { this.pos = [x, y]; }"]},{"id":1188,"file":"js\\xbrz\\xbrz.js","start":2915,"end":3057,"kind":"FunctionDeclaration","name":"colorDist","weight":2,"headline":"pix dist luminance weight return function color","preContext":["  const c_b = scale_b * (b_diff - y);","  const c_r = scale_r * (r_diff - y);","  return square(lumaWeight * y) + square(c_b) + square(c_r);","}"],"postContext":["function preProcessCorners_colorDist_ (col1, col2) {","  col1 = col1 & 0xffffffff;","  col2 = col2 & 0xffffffff;","  return colorDist(col1, col2, config.luminanceWeight);"]},{"id":1189,"file":"js\\GameVictoryCondition.js","start":2093,"end":2178,"kind":"MethodDefinition","name":"GameVictoryCondition.doNuke","weight":1.2,"headline":"nuke finalize return","preContext":["      return;","    }","    this.outCount--;","  }"],"postContext":["doFinalize() {","    if (this.isFinalize) {","      return;","    }"]},{"id":1190,"file":"js\\LemmingManager.js","start":9788,"end":10420,"kind":"MethodDefinition","name":"LemmingManager.addNewLemmings","weight":1.2,"headline":"game victory condition release entrances entrance add","preContext":["          this.spawnTotal += extraCount;","        }","      })();","  }"],"postContext":["runTrigger(lem) {","    if (lem.isRemoved() || lem.isDisabled()) {","      // this.lemmings.splice(this.lemmings.indexOf(lem), 1);","      return Lemmings.LemmingStateType.NO_STATE_TYPE;"]},{"id":1191,"file":"js\\Level.js","start":6332,"end":6728,"kind":"MethodDefinition","name":"Level.setArrowAreas","weight":1.2,"headline":"bu ranges arrow const length debug set","preContext":["    const gp  = this.groundImage;","    gp[idx] = gp[idx + 1] = gp[idx + 2] = 0;","    lemmings.game.lemmingManager.miniMap.onGroundChanged(x, y, true);","  }"],"postContext":["isArrowAt(x, y, direction) {","    const a = this.arrowRanges;","    for (let i = 0, len = a.length; i < len; i += 5) {","      if (x >= a[i] && x < a[i] + a[i+2] && y >= a[i+1] && y < a[i+1] + a[i+3] && direction != a[i+4]) {"]},{"id":1192,"file":"js\\GameView.js","start":5503,"end":5605,"kind":"MethodDefinition","name":"GameView.enableDebug","weight":1.2,"headline":"debug game enable null return set mode","preContext":["playSound(moveInterval) {","","  }"],"postContext":["async moveToLevel(moveInterval = 0) {","    if (this.levelIndex + moveInterval < 0 && this.levelGroupIndex == 0) return;","    if (this.inMoveToLevel) return;","    this.inMoveToLevel = true;"]},{"id":1193,"file":"test\\bench-tps.test.js","start":1769,"end":2020,"kind":"ClassDeclaration","name":"GameTimerStub","weight":0.5,"headline":"game running return get time class timer","preContext":["setScreenPosition(x, y) { this.pos = [x, y]; }"],"postContext":["constructor() { this.eachGameSecond = new Lemmings.EventHandler(); this.speedFactor = 1; this.running = true; }"]},{"id":1194,"file":"test\\bench-sequence.test.js","start":816,"end":869,"kind":"MethodDefinition","name":"LemmingManagerMock.getLemmings","weight":0.5,"headline":"get lemmings return new spawn","preContext":["set spawnCount(v) { this._spawnCount = v; this.spawnTotal += v; }"],"postContext":["class GameMock {","  constructor() {","    this.timer = new GameTimer({ timeLimit: 1 });","    this.lemmingManager = new LemmingManagerMock();"]},{"id":1195,"file":"test\\action-systems.test.js","start":3450,"end":3494,"kind":"MethodDefinition","name":"StubLevel.isOutOfLevel","weight":0.5,"headline":"level return","preContext":["isSteelGround(x, y) { return this.steelGround(this.key(x, y)); }"],"postContext":["class StubTriggerManager {","  constructor() { this.added = []; this.removed = []; }","  add(t) { this.added.push(t); }","  removeByOwner(o) { this.removed.push(o); }"]},{"id":1196,"file":"test\\gamegui.behavior.test.js","start":1214,"end":1251,"kind":"MethodDefinition","name":"PanelSpritesStub.getNumberSpriteEmpty","weight":0.5,"headline":"get number sprite empty return","preContext":["getPanelSprite() { return { width: 320, height: 40 }; }"],"postContext":["getLetterSprite() { return {}; }"]},{"id":1197,"file":"js\\UnpackFilePart.js","start":2380,"end":2415,"kind":"MethodDefinition","name":"UnpackFilePart.index","weight":1.2,"headline":"get return","preContext":["set unknown1(val) { this.#unknown1 = val; }"],"postContext":["set index(val) { this.#index = val; }"]},{"id":1198,"file":"js\\UserInputManager.js","start":8938,"end":9073,"kind":"MethodDefinition","name":"UserInputManager.handleMouseUp","weight":1.2,"headline":"position mouse handle clear trigger new lemmings","preContext":["    this.lastMouseY = 0;","    this.twoTouch = false;","    this.lastTouchDistance = 0;","  }"],"postContext":["handleMouseRightUp(position) {","    this.handleMouseClear();","    this.onMouseRightUp.trigger(new Lemmings.Position2D(position.x, position.y));","  }"]},{"id":1199,"file":"js\\MiniMap.js","start":6975,"end":7508,"kind":"MethodDefinition","name":"MiniMap.addDeath","weight":1.2,"headline":"ls coo rd dead length const math","preContext":["setSelectedDot(dot) {","    this.selectedDot = dot;","  }"],"postContext":["render() {","    if (!this.guiDisplay) return;","","    if (++this._viewportCounter >= this.viewportDashDelay) {"]},{"id":1200,"file":"js\\GameGui.js","start":18738,"end":18901,"kind":"MethodDefinition","name":"GameGui._getRightDigit","weight":1.2,"headline":"num cache get digit skill panel sprites","preContext":["_getLeftDigit(d)  { if (d <= 0) return null;","    if (!this._numLeftCache[d])  this._numLeftCache[d]  = this.skillPanelSprites.getNumberSpriteLeft(d);","    return this._numLeftCache[d]; }"],"postContext":["_getGreenLetter(ch) {","    const cachedGreenLet  = this._letterCache.get(ch);","    if (!cachedGreenLet) { ","      const newGreenLet = this.skillPanelSprites.getLetterSprite(ch); "]},{"id":1201,"file":"test\\gameview.controls.test.js","start":366,"end":387,"kind":"MethodDefinition","name":"StageMock.startOverlayFade","weight":0.5,"headline":"overlay fade","preContext":["startFadeOut() {}"],"postContext":["class GameFactoryMock {","  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1202,"file":"test\\gameview.suspendWithColor.test.js","start":482,"end":546,"kind":"MethodDefinition","name":"StageMock.startOverlayFade","weight":0.5,"headline":"color rect overlay fade called","preContext":["startFadeOut() {}"],"postContext":["class GameFactoryMock {","  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1203,"file":"test\\gameview.start-existing.test.js","start":412,"end":433,"kind":"MethodDefinition","name":"StageMock.startOverlayFade","weight":0.5,"headline":"overlay fade","preContext":["startFadeOut() {}"],"postContext":["class GameFactoryMock {","  constructor() { this.getGameCalls = 0; }","  async getGame() { this.getGameCalls++; return {}; }","  async getGameResources() { return {}; }"]},{"id":1204,"file":"js\\GameTimer.js","start":4614,"end":7366,"kind":"MethodDefinition","name":"GameTimer.benchSpeedAdjust","weight":1.2,"headline":"speed factor const steps stable scale ticks","preContext":["      }","    }","    this.#rafId = window.requestAnimationFrame(this.#loopBound);","  }"],"postContext":["#catchupSpeedAdjust(steps) {","    const newFactor = Math.max(0.1, 1 / steps);","    if (newFactor < this.#speedFactor) {","      console.log(`catchup: ${steps} steps, speed ${newFactor}`);"]},{"id":1205,"file":"js\\FileProvider.js","start":7086,"end":7310,"kind":"MethodDefinition","name":"FileProvider._arrayBufferToBase64","weight":1.2,"headline":"binary bytes let base const new ui","preContext":["async _hashString(str) {","    const enc = new TextEncoder();","    return this._hashBuffer(enc.encode(str));","  }"],"postContext":["_base64ToArrayBuffer(base64) {","    const binary = atob(base64);","    const len = binary.length;","    const bytes = new Uint8Array(len);"]},{"id":1206,"file":"js\\BinaryReader.js","start":8120,"end":8226,"kind":"MethodDefinition","name":"BinaryReader.eof","weight":1.2,"headline":"pos eof const hidden offset return length","preContext":["setOffset(newPos) {","    this.#pos = newPos + this.#hiddenOffset;","  }"],"postContext":["readAll() {","    return this.readString(this.#length, 0);","  }"]},{"id":1207,"file":"js\\Game.js","start":4576,"end":4639,"kind":"MethodDefinition","name":"Game.queueCommand","weight":1.2,"headline":"command queue cmd manager","preContext":["setDebugMode       (v) { this.showDebug = !!v; }"],"postContext":["onGameTimerTick () {","    this.runGameLogic();","    this.checkForGameOver();","    this.render();"]},{"id":1208,"file":"test\\gameview.test.js","start":2185,"end":2230,"kind":"MethodDefinition","name":"StageMock.getGameDisplay","weight":0.5,"headline":"game display get return","preContext":["    this.controller.onMouseMove.on(e => this.gameDisplay.onMouseMove.trigger(e));","    this.controller.onDoubleClick.on(e => this.gameDisplay.onDoubleClick.trigger(e));","    this.updateStageSize();","  }"],"postContext":["getGuiDisplay() { return this.guiDisplay; }"]},{"id":1209,"file":"js\\Stage.js","start":5892,"end":7086,"kind":"MethodDefinition","name":"Stage.updateViewPoint","weight":1.2,"headline":"image target stage scale const im view","preContext":["      // Always zoom around the cursor position e.x,e.y","      this.updateViewPoint(stageImage, e.x, e.y, e.deltaZoom, e.velocity);","    });","  }"],"postContext":["snapScale(rawScale) {","    const { width: dispW, height: dispH } = this.gameImgProps.display.worldDataSize;","    if (dispW === 0 || dispH === 0) return rawScale;",""]},{"id":1210,"file":"js\\Game.js","start":4643,"end":4740,"kind":"MethodDefinition","name":"Game.onGameTimerTick","weight":1.2,"headline":"game timer tick run logic check render","preContext":["queueCommand(cmd)   { this.commandManager?.queueCommand(cmd); }"],"postContext":["runGameLogic () {","    if (!this.level) {","      this.log.log('level not loaded!');","      return;"]},{"id":1211,"file":"js\\BinaryReader.js","start":8315,"end":8375,"kind":"MethodDefinition","name":"BinaryReader.readAll","weight":1.2,"headline":"read return string length","preContext":["eof() {","    const pos = this.#pos - this.#hiddenOffset;","    return (pos >= this.#length) || (pos < 0);","  }"],"postContext":[]},{"id":1212,"file":"js\\FileProvider.js","start":7314,"end":7557,"kind":"MethodDefinition","name":"FileProvider._base64ToArrayBuffer","weight":1.2,"headline":"base const binary bytes ob length new","preContext":["      binary += String.fromCharCode(bytes[i]);","    }","    return btoa(binary);","  }"],"postContext":[]},{"id":1213,"file":"js\\GameTimer.js","start":7370,"end":7663,"kind":"MethodDefinition","name":"GameTimer.catchupSpeedAdjust","weight":1.2,"headline":"factor speed steps new catchup adjust const","preContext":["        stage.startOverlayFade(color, rect, dashLen);","      }","    }","  }"],"postContext":["#restoreSpeed() {","    if (this.#catchupSlow) {","      this.#catchupSlow = false;","      this.speedFactor = 1;"]},{"id":1214,"file":"test\\gameview.start-existing.test.js","start":436,"end":666,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game get return calls async conf class","preContext":["startOverlayFade() {}"],"postContext":["constructor() { this.getGameCalls = 0; }"]},{"id":1215,"file":"test\\gameview.suspendWithColor.test.js","start":549,"end":715,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game get return async conf class factory","preContext":["startOverlayFade(color, rect) { this.called = { color, rect }; }"],"postContext":["async getGame() { return {}; }"]},{"id":1216,"file":"test\\gameview.controls.test.js","start":390,"end":556,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game get return async conf class factory","preContext":["startOverlayFade() {}"],"postContext":["async getGame() { return {}; }"]},{"id":1217,"file":"js\\GameGui.js","start":18904,"end":19204,"kind":"MethodDefinition","name":"GameGui._getGreenLetter","weight":1.2,"headline":"green let letter ch get cached new","preContext":["_getRightDigit(d) { if (!this._numRightCache[d])","    this._numRightCache[d] = this.skillPanelSprites.getNumberSpriteRight(d);","  return this._numRightCache[d]; ","  }"],"postContext":["drawSelection(d, panelIdx) {","    if (panelIdx < 0) return;","    d.drawMarchingAntRect(","      16 * panelIdx,"]},{"id":1218,"file":"js\\MiniMap.js","start":7512,"end":10154,"kind":"MethodDefinition","name":"MiniMap.render","weight":1.2,"headline":"const vp frame dead rect dots ls","preContext":["    ttls[ttls.length - 1] = MiniMap.DEATH_DOT_TTL;","    this.deadDots = coords;","    this.deadTTLs = ttls;","  }"],"postContext":["dispose() {","    if (this.guiDisplay && this._displayListeners) {","      for (const [event, handler] of this._displayListeners) {","        this.guiDisplay[event].off(handler);"]},{"id":1219,"file":"js\\UserInputManager.js","start":9076,"end":9221,"kind":"MethodDefinition","name":"UserInputManager.handleMouseRightUp","weight":1.2,"headline":"position mouse handle clear trigger new lemmings","preContext":["handleMouseUp(position) {","    this.handleMouseClear();","    this.onMouseUp.trigger(new Lemmings.Position2D(position.x, position.y));","  }"],"postContext":["handleMouseMiddleUp() {","    this.handleMouseClear();","  }"]},{"id":1220,"file":"js\\UnpackFilePart.js","start":2419,"end":2456,"kind":"MethodDefinition","name":"UnpackFilePart.index","weight":1.2,"headline":"set","preContext":["get index() { return this.#index; }"],"postContext":["get unpackingDone() { return this.#unpackingDone; }"]},{"id":1221,"file":"test\\gamegui.behavior.test.js","start":1254,"end":1286,"kind":"MethodDefinition","name":"PanelSpritesStub.getLetterSprite","weight":0.5,"headline":"get letter sprite return","preContext":["getNumberSpriteEmpty() { return {}; }"],"postContext":["getNumberSpriteLeft() { return {}; }"]},{"id":1222,"file":"test\\action-systems.test.js","start":3498,"end":3660,"kind":"ClassDeclaration","name":"StubTriggerManager","weight":0.5,"headline":"class stub trigger manager constructor added removed","preContext":["isOutOfLevel(y) { return y < 0 || y >= 50; }"],"postContext":["constructor() { this.added = []; this.removed = []; }"]},{"id":1223,"file":"test\\bench-sequence.test.js","start":873,"end":1538,"kind":"ClassDeclaration","name":"GameMock","weight":0.5,"headline":"game timer manager return lemming new mock","preContext":["getLemmings() { return new Array(this._spawnCount); }"],"postContext":["constructor() {","    this.timer = new GameTimer({ timeLimit: 1 });","    this.lemmingManager = new LemmingManagerMock();","    this.level = {"]},{"id":1224,"file":"test\\bench-tps.test.js","start":1793,"end":1904,"kind":"MethodDefinition","name":"GameTimerStub.constructor","weight":0.5,"headline":"constructor game second new lemmings event handler","preContext":["  isRunning() { return this.running; }","  getGameLeftTimeString() { return '1:00'; }","  getGameTime() { return 0; }","}"],"postContext":["isRunning() { return this.running; }"]},{"id":1225,"file":"js\\GameView.js","start":5661,"end":7249,"kind":"MethodDefinition","name":"GameView.moveToLevel","weight":1.2,"headline":"level group game move length conf interval","preContext":["      return;","    }","    this.game.setDebugMode(true);","  }"],"postContext":["parseNumber(query, names, def, min, max, multiplier = 1) {","    for (const name of names) {","      const raw = query.get(name);","      if (raw !== null) {"]},{"id":1226,"file":"js\\Level.js","start":6732,"end":7009,"kind":"MethodDefinition","name":"Level.isArrowAt","weight":1.2,"headline":"arrow direction return const ranges let length","preContext":["    }","    this.arrowRanges = buf;","    this._debugFrame = null; // invalidate cached debug overlay","  }"],"postContext":["isArrowGround(x, y, direction) { return this.isArrowAt(x, y, direction) && this.hasGroundAt(x, y); }"]},{"id":1227,"file":"js\\LemmingManager.js","start":10424,"end":11675,"kind":"MethodDefinition","name":"LemmingManager.runTrigger","weight":1.2,"headline":"lemmings trigger le return lemming state case","preContext":["        this.gameVictoryCondition.releaseOne();","      }","    }","  }"],"postContext":["render(gameDisplay) {","    Lemmings.withPerformance(","      'render',","      {"]},{"id":1228,"file":"js\\GameVictoryCondition.js","start":2226,"end":2319,"kind":"MethodDefinition","name":"GameVictoryCondition.doFinalize","weight":1.2,"headline":"finalize return true","preContext":["      return;","    }","    this.leftCount = 0;","  }"],"postContext":[]},{"id":1229,"file":"js\\xbrz\\xbrz.js","start":3197,"end":3363,"kind":"FunctionDeclaration","name":"preProcessCorners_colorDist_","weight":2,"headline":"ff color dist function pre process corners","preContext":["    return 0;","  }","  return distYCbCr(pix1, pix2, luminanceWeight);","}"],"postContext":["function scalePixel_colorEq_ (col1, col2) {","  return colorDist(col1, col2, config.luminanceWeight) < eqColorThres;","}"]},{"id":1230,"file":"test\\gamegui.test.js","start":1742,"end":1788,"kind":"MethodDefinition","name":"DisplayImageStub.setScreenPosition","weight":0.5,"headline":"set screen position pos","preContext":["redraw() { this.redrawCalled = true; }"],"postContext":["class GameTimerStub {","  constructor() {","    this.eachGameSecond = new Lemmings.EventHandler();","    this.speedFactor = 1;"]},{"id":1231,"file":"js\\DisplayImage.js","start":4099,"end":4573,"kind":"MethodDefinition","name":"DisplayImage.drawVerticalLine","weight":1.2,"headline":"math min max const color let draw","preContext":["      this.drawVerticalLine(x, dy, Math.min(dy + dashLen - 1, y2), r, g, b);","      this.drawVerticalLine(x2, dy, Math.min(dy + dashLen - 1, y2), r, g, b);","    }","  }"],"postContext":["drawHorizontalLine(x1, y, x2, r, g, b) {","    if (!this.buffer32) return;","    const { width: w, height: h } = this.imgData;","    y  = Math.min(Math.max(y,  0), h - 1);"]},{"id":1232,"file":"js\\KeyboardShortcuts.js","start":5943,"end":11374,"kind":"MethodDefinition","name":"KeyboardShortcuts._onKeyDown","weight":1.2,"headline":"game case break command skill lemmings key","preContext":["        }","      }","    }","  }"],"postContext":["_onKeyUp(e) {","    switch (e.code) {","    case 'ArrowLeft': this.pan.left = false; this.pan.changed = true; break;","    case 'ArrowRight': this.pan.right = false; this.pan.changed = true; break;"]},{"id":1233,"file":"test\\gamegui.test.js","start":1792,"end":2102,"kind":"ClassDeclaration","name":"GameTimerStub","weight":0.5,"headline":"running game return get time class timer","preContext":["setScreenPosition(x, y) { this.pos = [x, y]; }"],"postContext":["constructor() {","    this.eachGameSecond = new Lemmings.EventHandler();","    this.speedFactor = 1;","    this.running = true;"]},{"id":1234,"file":"js\\xbrz\\xbrz.js","start":3423,"end":3539,"kind":"FunctionDeclaration","name":"scalePixel_colorEq_","weight":2,"headline":"color eq function scale pixel return dist","preContext":["  col1 = col1 & 0xffffffff;","  col2 = col2 & 0xffffffff;","  return colorDist(col1, col2, config.luminanceWeight);","}"],"postContext":["function scalePixel_colorDist_ (col1, col2) {","  return colorDist(col1, col2, config.luminanceWeight);","}"]},{"id":1235,"file":"js\\LemmingManager.js","start":11679,"end":12006,"kind":"MethodDefinition","name":"LemmingManager.render","weight":1.2,"headline":"render game display lemmings track le performance","preContext":["      this.logging.log('unknown trigger type: ' + triggerType);","      return Lemmings.LemmingStateType.NO_STATE_TYPE;","    }","  }"],"postContext":["renderDebug(gameDisplay) {","    for (const lem of this.lemmings) {","      lem.renderDebug(gameDisplay);","    }"]},{"id":1236,"file":"js\\Level.js","start":7013,"end":7113,"kind":"MethodDefinition","name":"Level.isArrowGround","weight":1.2,"headline":"arrow ground direction return","preContext":["      }","    }","    return false;","  }"],"postContext":["hasArrowUnderMask(mask, ox, oy, direction) {","    const { offsetX:mx, offsetY:my, width:w, height:h } = mask;","    for (let dy = 0; dy < h; ++dy) {","      for (let dx = 0; dx < w; ++dx) {"]},{"id":1237,"file":"js\\GameView.js","start":7299,"end":7621,"kind":"MethodDefinition","name":"GameView.parseNumber","weight":1.2,"headline":"const raw parse query names def min","preContext":["    } finally {","      this.inMoveToLevel = false;","    }","  }"],"postContext":["parseBool(query, names, def = false) {","    for (const name of names) {","      if (query.has(name)) {","        return query.get(name) === 'true';"]},{"id":1238,"file":"test\\bench-tps.test.js","start":1907,"end":1943,"kind":"MethodDefinition","name":"GameTimerStub.isRunning","weight":0.5,"headline":"running return","preContext":["constructor() { this.eachGameSecond = new Lemmings.EventHandler(); this.speedFactor = 1; this.running = true; }"],"postContext":["getGameLeftTimeString() { return '1:00'; }"]},{"id":1239,"file":"test\\bench-sequence.test.js","start":892,"end":1286,"kind":"MethodDefinition","name":"GameMock.constructor","weight":0.5,"headline":"constructor new timer game lemming manager ground","preContext":["  getCommandManager() { return { loadReplay(){} }; }","  getGameTimer() { return this.timer; }","  getLemmingManager() { return this.lemmingManager; }","}"],"postContext":["async loadLevel() {}"]},{"id":1240,"file":"test\\action-systems.test.js","start":3527,"end":3580,"kind":"MethodDefinition","name":"StubTriggerManager.constructor","weight":0.5,"headline":"constructor added removed","preContext":["  constructor() { this.added = []; this.removed = []; }","  add(t) { this.added.push(t); }","  removeByOwner(o) { this.removed.push(o); }","}"],"postContext":["add(t) { this.added.push(t); }"]},{"id":1241,"file":"test\\gamegui.behavior.test.js","start":1289,"end":1325,"kind":"MethodDefinition","name":"PanelSpritesStub.getNumberSpriteLeft","weight":0.5,"headline":"get number sprite return","preContext":["getLetterSprite() { return {}; }"],"postContext":["getNumberSpriteRight() { return {}; }"]},{"id":1242,"file":"js\\UnpackFilePart.js","start":2528,"end":2579,"kind":"MethodDefinition","name":"UnpackFilePart.unpackingDone","weight":1.2,"headline":"unpacking done get return","preContext":["set index(val) { this.#index = val; }"],"postContext":["get fileReader() { return this.#fileReader; }"]},{"id":1243,"file":"js\\UserInputManager.js","start":9224,"end":9280,"kind":"MethodDefinition","name":"UserInputManager.handleMouseMiddleUp","weight":1.2,"headline":"handle mouse middle clear","preContext":["handleMouseRightUp(position) {","    this.handleMouseClear();","    this.onMouseRightUp.trigger(new Lemmings.Position2D(position.x, position.y));","  }"],"postContext":["handleWheel(position, deltaY) {","    this.lastMouseX = position.x;","    this.lastMouseY = position.y;",""]},{"id":1244,"file":"js\\MiniMap.js","start":10158,"end":10641,"kind":"MethodDefinition","name":"MiniMap.dispose","weight":1.2,"headline":"null display gu listeners event handler dots","preContext":["    const destX = this.guiDisplay.worldDataSize.width  - W;","    const destY = this.guiDisplay.worldDataSize.height - H;","    this.guiDisplay.drawFrame(frame, destX, destY);","  }"],"postContext":[]},{"id":1245,"file":"js\\GameGui.js","start":19208,"end":19412,"kind":"MethodDefinition","name":"GameGui.drawSelection","weight":1.2,"headline":"selection panel draw return marching ant rect","preContext":["    } else {","      return cachedGreenLet;","    }","  }"],"postContext":["drawPaused(d) {","    d.drawMarchingAntRect(","      16 * 10,","      16,"]},{"id":1246,"file":"test\\gameview.controls.test.js","start":416,"end":446,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"async get game return","preContext":["  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGameResources() { return {}; }"]},{"id":1247,"file":"test\\gameview.suspendWithColor.test.js","start":575,"end":605,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"async get game return","preContext":["  async getGame() { return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGameResources() { return {}; }"]},{"id":1248,"file":"test\\gameview.start-existing.test.js","start":462,"end":502,"kind":"MethodDefinition","name":"GameFactoryMock.constructor","weight":0.5,"headline":"constructor get game calls","preContext":["  async getGame() { this.getGameCalls++; return {}; }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGame() { this.getGameCalls++; return {}; }"]},{"id":1249,"file":"js\\GameTimer.js","start":7667,"end":7784,"kind":"MethodDefinition","name":"GameTimer.restoreSpeed","weight":1.2,"headline":"speed catchup slow restore false factor","preContext":["      this.#updateFrameTime();","      this.#catchupSlow = true;","    }","  }"],"postContext":["stop() {","    this.suspend();","    document.removeEventListener('visibilitychange', this.#visHandler, false);","    window.removeEventListener('blur', this.#visHandler, false);"]},{"id":1250,"file":"js\\Game.js","start":4744,"end":4881,"kind":"MethodDefinition","name":"Game.runGameLogic","weight":1.2,"headline":"level log run game logic loaded return","preContext":["    this.runGameLogic();","    this.checkForGameOver();","    this.render();","  }"],"postContext":["getGameState () {","    if (typeof lemmings !== 'undefined' && lemmings.bench) {","      return Lemmings.GameStateTypes.RUNNING;","    }"]},{"id":1251,"file":"js\\Stage.js","start":7267,"end":7762,"kind":"MethodDefinition","name":"Stage.snapScale","weight":1.2,"headline":"scale const disp clamped raw gcd step","preContext":["    this.clear(this.guiImgProps);","    this.draw(stageImage, imgData);","    this.draw(this.guiImgProps, guiImgData);","  }"],"postContext":["applyViewport(stageImage, targetX, targetY, targetScale) {","    if (!stageImage || !stageImage.display) return;","","    this._rawScale = targetScale;"]},{"id":1252,"file":"test\\gameview.test.js","start":2233,"end":2276,"kind":"MethodDefinition","name":"StageMock.getGuiDisplay","weight":0.5,"headline":"gu display get return","preContext":["getGameDisplay() { return this.gameDisplay; }"],"postContext":["setCursorSprite() {}"]},{"id":1253,"file":"js\\GameTimer.js","start":7788,"end":8482,"kind":"MethodDefinition","name":"GameTimer.stop","weight":1.2,"headline":"game tick dispose event second remove listener","preContext":["      this.#catchupSlow = false;","      this.speedFactor = 1;","    }","  }"],"postContext":["getGameTime() { return this.ticksToSeconds(this.tickIndex); }"]},{"id":1254,"file":"test\\gameview.start-existing.test.js","start":505,"end":556,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"get game async calls return","preContext":["constructor() { this.getGameCalls = 0; }"],"postContext":["async getGameResources() { return {}; }"]},{"id":1255,"file":"test\\gameview.suspendWithColor.test.js","start":608,"end":647,"kind":"MethodDefinition","name":"GameFactoryMock.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1256,"file":"test\\gameview.controls.test.js","start":449,"end":488,"kind":"MethodDefinition","name":"GameFactoryMock.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1257,"file":"js\\GameGui.js","start":19416,"end":19571,"kind":"MethodDefinition","name":"GameGui.drawPaused","weight":1.2,"headline":"draw selection paused marching ant rect dash","preContext":["      this.selectionDashLen,","      this._selectionOffset","    );","  }"],"postContext":["drawSkillHover(d, panelIdx, r = 255, g = 255, b = 0) {","    if (panelIdx < 0) return;","    d.drawRect(16 * panelIdx, 16, 16, 23, r, g, b);","  }"]},{"id":1258,"file":"js\\UserInputManager.js","start":9321,"end":9967,"kind":"MethodDefinition","name":"UserInputManager.handleWheel","weight":1.2,"headline":"stage position image delta const vt zoom","preContext":["handleMouseMiddleUp() {","    this.handleMouseClear();","  }"],"postContext":[]},{"id":1259,"file":"js\\UnpackFilePart.js","start":2688,"end":2733,"kind":"MethodDefinition","name":"UnpackFilePart.fileReader","weight":1.2,"headline":"reader get return","preContext":["get unpackingDone() { return this.#unpackingDone; }"],"postContext":["unpack() {\r","    if (!this.#unpackingDone) {\r","      this.#fileReader = this.#doUnpacking(this.#fileReader);\r","      this.#unpackingDone = true;\r"]},{"id":1260,"file":"test\\gamegui.behavior.test.js","start":1328,"end":1365,"kind":"MethodDefinition","name":"PanelSpritesStub.getNumberSpriteRight","weight":0.5,"headline":"get number sprite return","preContext":["getNumberSpriteLeft() { return {}; }"],"postContext":["function createSkills() {","  const skills = {","    selectedSkill: Lemmings.SkillTypes.UNKNOWN,","    counts: new Array(Object.keys(Lemmings.SkillTypes).length).fill(2),"]},{"id":1261,"file":"test\\action-systems.test.js","start":3583,"end":3613,"kind":"MethodDefinition","name":"StubTriggerManager.add","weight":0.5,"headline":"add added push","preContext":["constructor() { this.added = []; this.removed = []; }"],"postContext":["removeByOwner(o) { this.removed.push(o); }"]},{"id":1262,"file":"test\\bench-sequence.test.js","start":1289,"end":1309,"kind":"MethodDefinition","name":"GameMock.loadLevel","weight":0.5,"headline":"async load level","preContext":["      render() {}","    };","    this.onGameEnd = new Lemmings.EventHandler();","  }"],"postContext":["setGameDisplay() {}"]},{"id":1263,"file":"test\\bench-tps.test.js","start":1946,"end":1988,"kind":"MethodDefinition","name":"GameTimerStub.getGameLeftTimeString","weight":0.5,"headline":"get game time string return","preContext":["isRunning() { return this.running; }"],"postContext":["getGameTime() { return 0; }"]},{"id":1264,"file":"js\\GameView.js","start":7672,"end":7848,"kind":"MethodDefinition","name":"GameView.parseBool","weight":1.2,"headline":"query names def return parse bool false","preContext":["      }","    }","    return def;","  }"],"postContext":["strToNum(value) {","    const num = Number(value);","    return isNaN(num) ? 0 : num;","  }"]},{"id":1265,"file":"js\\Level.js","start":7117,"end":7463,"kind":"MethodDefinition","name":"Level.hasArrowUnderMask","weight":1.2,"headline":"mask arrow ox oy direction offset let","preContext":["isArrowGround(x, y, direction) { return this.isArrowAt(x, y, direction) && this.hasGroundAt(x, y); }"],"postContext":["newSetSteelAreas(levelReader, terrainImages) {","    Lemmings.withPerformance(","      'newSetSteelAreas',","      {"]},{"id":1266,"file":"js\\LemmingManager.js","start":12010,"end":12121,"kind":"MethodDefinition","name":"LemmingManager.renderDebug","weight":1.2,"headline":"render debug game display le const lemmings","preContext":["          lem.render(gameDisplay);","        }","      })();","  }"],"postContext":["getLemming(id) {","    return this.lemmings[id] ?? null;","  }"]},{"id":1267,"file":"js\\xbrz\\xbrz.js","start":3541,"end":3644,"kind":"FunctionDeclaration","name":"scalePixel_colorDist_","weight":2,"headline":"color dist function scale pixel return conf","preContext":["function scalePixel_colorEq_ (col1, col2) {","  return colorDist(col1, col2, config.luminanceWeight) < eqColorThres;","}"],"postContext":["function buildMatrixRotation (rotDeg, I, J, N) {","  let I_old = 0, J_old = 0;","  if (rotDeg === 0) {","    I_old = I;"]},{"id":1268,"file":"test\\gamegui.test.js","start":1816,"end":1941,"kind":"MethodDefinition","name":"GameTimerStub.constructor","weight":0.5,"headline":"constructor game second new lemmings event handler","preContext":["  toggle() { this.running = !this.running; }","  getGameLeftTimeString() { return '1:00'; }","  getGameTime() { return 0; }","}"],"postContext":["isRunning() { return this.running; }"]},{"id":1269,"file":"js\\KeyboardShortcuts.js","start":11378,"end":11966,"kind":"MethodDefinition","name":"KeyboardShortcuts._onKeyUp","weight":1.2,"headline":"case pan break false arrow changed true","preContext":["      handled = false;","    }","    if (handled) e.preventDefault();","  }"],"postContext":[]},{"id":1270,"file":"js\\DisplayImage.js","start":4623,"end":5096,"kind":"MethodDefinition","name":"DisplayImage.drawHorizontalLine","weight":1.2,"headline":"math min max const color let draw","preContext":["    const color32 = 0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF);","    let idx = y1 * w + x;","    for (let y = y1; y <= y2; y++, idx += w) this.buffer32[idx] = color32;","  }"],"postContext":["drawMarchingAntRect(","    x,","    y,","    width,"]},{"id":1271,"file":"js\\LemmingManager.js","start":12125,"end":12183,"kind":"MethodDefinition","name":"LemmingManager.getLemming","weight":1.2,"headline":"get lemming return lemmings null","preContext":["    for (const lem of this.lemmings) {","      lem.renderDebug(gameDisplay);","    }","  }"],"postContext":["getSelectedLemming() {","    const lem = this.getLemming(this.selectedIndex);","    if (!lem || lem.removed || lem.disabled) return null;","    return lem;"]},{"id":1272,"file":"js\\Level.js","start":7467,"end":9084,"kind":"MethodDefinition","name":"Level.newSetSteelAreas","weight":1.2,"headline":"steel new mask obj range ranges ter","preContext":["      }","    }","    return false;","  }"],"postContext":["setSteelAreas(ranges = []) {","    const buf = new Int32Array(ranges.length * 4);","    for (let i = 0, o = 0; i < ranges.length; ++i, o += 4) {","      const r = ranges[i];"]},{"id":1273,"file":"js\\GameView.js","start":7909,"end":7994,"kind":"MethodDefinition","name":"GameView.strToNum","weight":1.2,"headline":"num str const number return na","preContext":["      }","    }","    return def;","  }"],"postContext":["applyQuery() {","    this.gameType = 1;","    const query = typeof window === 'undefined'","      ? new URLSearchParams('')"]},{"id":1274,"file":"test\\bench-tps.test.js","start":1991,"end":2018,"kind":"MethodDefinition","name":"GameTimerStub.getGameTime","weight":0.5,"headline":"get game time return","preContext":["getGameLeftTimeString() { return '1:00'; }"],"postContext":["class GameVictoryStub {","  constructor() { this.min = 1; this.max = 10; this.cur = 5; this.out = 0; this.survivor = 50; }","  getMinReleaseRate() { return this.min; }","  getMaxReleaseRate() { return this.max; }"]},{"id":1275,"file":"test\\bench-sequence.test.js","start":1312,"end":1331,"kind":"MethodDefinition","name":"GameMock.setGameDisplay","weight":0.5,"headline":"set game display","preContext":["async loadLevel() {}"],"postContext":["setGuiDisplay() {}"]},{"id":1276,"file":"test\\action-systems.test.js","start":3616,"end":3658,"kind":"MethodDefinition","name":"StubTriggerManager.removeByOwner","weight":0.5,"headline":"remove owner removed push","preContext":["add(t) { this.added.push(t); }"],"postContext":["class StubGVC { constructor() { this.count = 0; } addSurvivor() { this.count++; } }"]},{"id":1277,"file":"test\\gamegui.behavior.test.js","start":1369,"end":2201,"kind":"FunctionDeclaration","name":"createSkills","weight":0.5,"headline":"skill selected return lemmings types changed skills","preContext":["getNumberSpriteRight() { return {}; }"],"postContext":["class GameStub {","  constructor() { this.commands = []; this.showDebug = false; }","  queueCommand(cmd) { this.commands.push(cmd); }","}"]},{"id":1278,"file":"js\\UnpackFilePart.js","start":2929,"end":3252,"kind":"MethodDefinition","name":"UnpackFilePart.unpack","weight":1.2,"headline":"reader unpacking return done new binary unpack","preContext":["get fileReader() { return this.#fileReader; }"],"postContext":["#doUnpacking(fileReader) {\r","    return Lemmings.withPerformance(\r","      'doUnpacking',\r","      {\r"]},{"id":1279,"file":"js\\GameGui.js","start":19575,"end":19715,"kind":"MethodDefinition","name":"GameGui.drawSkillHover","weight":1.2,"headline":"panel draw skill hover return rect","preContext":["      this.selectionDashLen,","      this._selectionOffset","    );","  }"],"postContext":["_getPanelName(idx) {","    switch (idx) {","    case 0:  return 'Decrease';","    case 1:  return 'Increase';"]},{"id":1280,"file":"test\\gameview.controls.test.js","start":491,"end":554,"kind":"MethodDefinition","name":"GameFactoryMock.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":[]},{"id":1281,"file":"test\\gameview.suspendWithColor.test.js","start":650,"end":713,"kind":"MethodDefinition","name":"GameFactoryMock.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":[]},{"id":1282,"file":"test\\gameview.start-existing.test.js","start":559,"end":598,"kind":"MethodDefinition","name":"GameFactoryMock.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { this.getGameCalls++; return {}; }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1283,"file":"js\\GameTimer.js","start":8486,"end":8547,"kind":"MethodDefinition","name":"GameTimer.getGameTime","weight":1.2,"headline":"get game time return ticks seconds tick","preContext":["    this.onBeforeGameTick = null;","    this.onGameTick = null;","    this.eachGameSecond = null;","  }"],"postContext":["getGameTicks() { return this.tickIndex; }"]},{"id":1284,"file":"test\\gameview.test.js","start":2279,"end":2299,"kind":"MethodDefinition","name":"StageMock.setCursorSprite","weight":0.5,"headline":"set cursor sprite","preContext":["getGuiDisplay() { return this.guiDisplay; }"],"postContext":["updateStageSize() {}"]},{"id":1285,"file":"js\\Stage.js","start":7766,"end":8095,"kind":"MethodDefinition","name":"Stage.applyViewport","weight":1.2,"headline":"stage image target scale view point set","preContext":["    if (clamped > maxScale) clamped = maxScale;","","    return Math.round(clamped / step) * step;","  }"],"postContext":["updateStageSize() {","    const stageH = this.stageCav.height;","    const stageW = this.stageCav.width;","    // this margin is for the level <select> elements in the html "]},{"id":1286,"file":"js\\Game.js","start":4885,"end":5806,"kind":"MethodDefinition","name":"Game.getGameState","weight":1.2,"headline":"game state lemmings types get return const","preContext":["      return;","    }","    this.lemmingManager.tick();","  }"],"postContext":["checkForGameOver () {","    if (typeof lemmings !== 'undefined' && lemmings.bench) return;","    if (this.finalGameState !== Lemmings.GameStateTypes.UNKNOWN) return;",""]},{"id":1287,"file":"test\\gameview.test.js","start":2302,"end":2322,"kind":"MethodDefinition","name":"StageMock.updateStageSize","weight":0.5,"headline":"update stage size","preContext":["setCursorSprite() {}"],"postContext":["clear() {}"]},{"id":1288,"file":"js\\GameTimer.js","start":8550,"end":8591,"kind":"MethodDefinition","name":"GameTimer.getGameTicks","weight":1.2,"headline":"get game ticks return tick","preContext":["getGameTime() { return this.ticksToSeconds(this.tickIndex); }"],"postContext":["getGameLeftTime() {","    let left = this.ticksTimeLimit - this.tickIndex;","    if (left < 0) left = 0;","    return Math.floor(this.ticksToSeconds(left));"]},{"id":1289,"file":"test\\gameview.start-existing.test.js","start":601,"end":664,"kind":"MethodDefinition","name":"GameFactoryMock.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":["function createWindowStub() {","  return {","    location: { search: '' },","    setTimeout,"]},{"id":1290,"file":"js\\GameGui.js","start":19719,"end":20159,"kind":"MethodDefinition","name":"GameGui._getPanelName","weight":1.2,"headline":"return skill case key get panel const","preContext":["drawSkillHover(d, panelIdx, r = 255, g = 255, b = 0) {","    if (panelIdx < 0) return;","    d.drawRect(16 * panelIdx, 16, 16, 23, r, g, b);","  }"],"postContext":["_drawLockEdge(d, panelIdx) {","    const x = 16 * panelIdx + 2;","    const y = 18;","    const w = 11; // narrower than full panel"]},{"id":1291,"file":"js\\UnpackFilePart.js","start":3453,"end":5281,"kind":"MethodDefinition","name":"UnpackFilePart.doUnpacking","weight":1.2,"headline":"reader bit read case copy break unpacking","preContext":["    }\r","    // Return a new BinaryReader over the decompressed buffer for repeat access\r","    return new Lemmings.BinaryReader(this.#fileReader);\r","  }"],"postContext":[]},{"id":1292,"file":"test\\gamegui.behavior.test.js","start":2203,"end":2334,"kind":"ClassDeclaration","name":"GameStub","weight":0.5,"headline":"cmd class game stub constructor commands show","preContext":["    }","  };","  return skills;","}"],"postContext":["constructor() { this.commands = []; this.showDebug = false; }"]},{"id":1293,"file":"test\\action-systems.test.js","start":3662,"end":3745,"kind":"ClassDeclaration","name":"StubGVC","weight":0.5,"headline":"class stub constructor add survivor","preContext":["removeByOwner(o) { this.removed.push(o); }"],"postContext":["constructor() { this.count = 0; }"]},{"id":1294,"file":"test\\bench-sequence.test.js","start":1334,"end":1352,"kind":"MethodDefinition","name":"GameMock.setGuiDisplay","weight":0.5,"headline":"set gu display","preContext":["setGameDisplay() {}"],"postContext":["start() { this.timer.continue(); }"]},{"id":1295,"file":"test\\bench-tps.test.js","start":2022,"end":2411,"kind":"ClassDeclaration","name":"GameVictoryStub","weight":0.5,"headline":"return class game victory stub constructor get","preContext":["getGameTime() { return 0; }"],"postContext":["constructor() { this.min = 1; this.max = 10; this.cur = 5; this.out = 0; this.survivor = 50; }"]},{"id":1296,"file":"js\\GameView.js","start":8044,"end":9603,"kind":"MethodDefinition","name":"GameView.applyQuery","weight":1.2,"headline":"query parse get number game speed bool","preContext":["strToNum(value) {","    const num = Number(value);","    return isNaN(num) ? 0 : num;","  }"],"postContext":["updateQuery() {","    const params = typeof window === 'undefined'","      ? new URLSearchParams('')","      : new URLSearchParams(window.location.search);"]},{"id":1297,"file":"js\\Level.js","start":9088,"end":9454,"kind":"MethodDefinition","name":"Level.setSteelAreas","weight":1.2,"headline":"bu ranges steel const length debug set","preContext":["          this.setSteelAreas(newSteelRanges);","        }","      })();","  }"],"postContext":["isSteelAt(x, y, loading = false) {","    if (loading == false) {","      return this.steelMask.hasMaskAt(x,y);","    }"]},{"id":1298,"file":"js\\LemmingManager.js","start":12187,"end":12340,"kind":"MethodDefinition","name":"LemmingManager.getSelectedLemming","weight":1.2,"headline":"le get selected lemming return const removed","preContext":["getLemming(id) {","    return this.lemmings[id] ?? null;","  }"],"postContext":["setSelectedLemming(lem) {","    this.selectedIndex = lem?.id ?? -1;","  }"]},{"id":1299,"file":"js\\DisplayImage.js","start":5498,"end":5792,"kind":"MethodDefinition","name":"DisplayImage.drawMarchingAntRect","weight":1.2,"headline":"color draw marching ant rect dash offset","preContext":["    const color32 = 0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF);","    let idx = y * w + x1;","    for (let x = x1; x <= x2; x++, idx++) this.buffer32[idx] = color32;","  }"],"postContext":["drawDashedRect(","    x,","    y,","    width,"]},{"id":1300,"file":"test\\gamegui.test.js","start":1944,"end":1980,"kind":"MethodDefinition","name":"GameTimerStub.isRunning","weight":0.5,"headline":"running return","preContext":["    this.eachGameSecond = new Lemmings.EventHandler();","    this.speedFactor = 1;","    this.running = true;","  }"],"postContext":["toggle() { this.running = !this.running; }"]},{"id":1301,"file":"js\\xbrz\\xbrz.js","start":3646,"end":3928,"kind":"FunctionDeclaration","name":"buildMatrixRotation","weight":2,"headline":"old rot deg build matrix rotation function","preContext":["function scalePixel_colorDist_ (col1, col2) {","  return colorDist(col1, col2, config.luminanceWeight);","}"],"postContext":["function preProcessCorners (ker4x4) {","  blendResult.reset();","  if ((ker4x4.f === ker4x4.g && ker4x4.j === ker4x4.k) ||","    (ker4x4.f === ker4x4.j && ker4x4.g === ker4x4.k)) {"]},{"id":1302,"file":"test\\gamegui.test.js","start":1983,"end":2025,"kind":"MethodDefinition","name":"GameTimerStub.toggle","weight":0.5,"headline":"running toggle","preContext":["isRunning() { return this.running; }"],"postContext":["getGameLeftTimeString() { return '1:00'; }"]},{"id":1303,"file":"js\\DisplayImage.js","start":5851,"end":6135,"kind":"MethodDefinition","name":"DisplayImage.drawDashedRect","weight":1.2,"headline":"color draw dashed rect dash offset","preContext":["      color1,","      color2","    );","  }"],"postContext":["drawStippleRect(x, y, width, height, r = 128, g = 128, b = 128) {","    if (!this.buffer32) return;","    const { width: w } = this.imgData;","    const color32 = 0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF);"]},{"id":1304,"file":"js\\LemmingManager.js","start":12344,"end":12413,"kind":"MethodDefinition","name":"LemmingManager.setSelectedLemming","weight":1.2,"headline":"selected le set lemming","preContext":["    const lem = this.getLemming(this.selectedIndex);","    if (!lem || lem.removed || lem.disabled) return null;","    return lem;","  }"],"postContext":["getLemmings() {","    return this.lemmings;","  }"]},{"id":1305,"file":"js\\Level.js","start":9458,"end":9796,"kind":"MethodDefinition","name":"Level.isSteelAt","weight":1.2,"headline":"steel false return loading mask const ranges","preContext":["    }","    this.steelRanges = buf;","    this._debugFrame = null; // invalidate cached debug overlay","  }"],"postContext":["isSteelGround(x, y, loading = false) {","    if (loading == false) {","      return this.steelMask.hasMaskAt(x,y);","    }"]},{"id":1306,"file":"js\\GameView.js","start":9606,"end":10997,"kind":"MethodDefinition","name":"GameView.updateQuery","weight":1.2,"headline":"param set undefined true false bench search","preContext":["    if (query.get('perfMetrics') || query.get('pm')) {","      this.perfMetrics = (query.get('perfMetrics') || query.get('pm')) === 'true';","    }","  }"],"postContext":["setHistoryState(params) {","    const query = params instanceof URLSearchParams ? params : new URLSearchParams(params);","    history.replaceState(null, null, '?' + query.toString());","  }"]},{"id":1307,"file":"test\\bench-tps.test.js","start":2048,"end":2142,"kind":"MethodDefinition","name":"GameVictoryStub.constructor","weight":0.5,"headline":"constructor min max cur survivor","preContext":["  setCurrentReleaseRate(v) { this.cur = v; }","  getOutCount() { return this.out; }","  getSurvivorPercentage() { return this.survivor; }","}"],"postContext":["getMinReleaseRate() { return this.min; }"]},{"id":1308,"file":"test\\bench-sequence.test.js","start":1355,"end":1389,"kind":"MethodDefinition","name":"GameMock.start","weight":0.5,"headline":"timer continue","preContext":["setGuiDisplay() {}"],"postContext":["getCommandManager() { return { loadReplay(){} }; }"]},{"id":1309,"file":"test\\action-systems.test.js","start":3678,"end":3711,"kind":"MethodDefinition","name":"StubGVC.constructor","weight":0.5,"headline":"constructor","preContext":["class StubGVC { constructor() { this.count = 0; } addSurvivor() { this.count++; } }"],"postContext":["addSurvivor() { this.count++; }"]},{"id":1310,"file":"test\\gamegui.behavior.test.js","start":2222,"end":2283,"kind":"MethodDefinition","name":"GameStub.constructor","weight":0.5,"headline":"constructor commands show debug false","preContext":["class GameStub {","  constructor() { this.commands = []; this.showDebug = false; }","  queueCommand(cmd) { this.commands.push(cmd); }","}"],"postContext":["queueCommand(cmd) { this.commands.push(cmd); }"]},{"id":1311,"file":"js\\GameGui.js","start":20163,"end":20598,"kind":"MethodDefinition","name":"GameGui._drawLockEdge","weight":1.2,"headline":"draw panel const stipple rect full lock","preContext":["      }","      return '';","    }","  }"],"postContext":["drawSpeedChange(upDown, reset = false) {","    if (!reset) {","      if (upDown) {","        this.display.drawHorizontalLine(172, 32, 175, 0, 166, 0);"]},{"id":1312,"file":"test\\gameview.start-existing.test.js","start":668,"end":835,"kind":"FunctionDeclaration","name":"createWindowStub","weight":0.5,"headline":"timeout event listener function create window stub","preContext":["get configReader() { return { configs: Promise.resolve([]) }; }"],"postContext":[]},{"id":1313,"file":"js\\GameTimer.js","start":8594,"end":8748,"kind":"MethodDefinition","name":"GameTimer.getGameLeftTime","weight":1.2,"headline":"time ticks get game let limit tick","preContext":["getGameTicks() { return this.tickIndex; }"],"postContext":["getGameLeftTimeString() {","    const secs = this.getGameLeftTime();","    return Math.floor(secs / 60) + '-' + ('0' + (secs % 60)).slice(-2);","  }"]},{"id":1314,"file":"test\\gameview.test.js","start":2325,"end":2335,"kind":"MethodDefinition","name":"StageMock.clear","weight":0.5,"headline":"clear","preContext":["updateStageSize() {}"],"postContext":["redraw() {}"]},{"id":1315,"file":"js\\Game.js","start":5810,"end":6270,"kind":"MethodDefinition","name":"Game.checkForGameOver","weight":1.2,"headline":"game state lemmings types return final check","preContext":["        : Lemmings.GameStateTypes.FAILED_OUT_OF_TIME;","    }","    return Lemmings.GameStateTypes.RUNNING;","  }"],"postContext":["render () {","    if (this.gameDisplay) {","      this.gameDisplay.render();","      if (this.showDebug) this.gameDisplay.renderDebug();"]},{"id":1316,"file":"js\\Stage.js","start":8099,"end":9798,"kind":"MethodDefinition","name":"Stage.updateStageSize","weight":1.2,"headline":"im props const game scale world stage","preContext":["    stageImage.viewPoint.setY(targetY);","","    this.clampViewPoint(stageImage);","  }"],"postContext":["getStageImageAt(x, y) {","    const { width: gameW, height: gameH } =","      this.gameImgProps.canvasViewportSize;","    if ("]},{"id":1317,"file":"js\\Game.js","start":6274,"end":6508,"kind":"MethodDefinition","name":"Game.render","weight":1.2,"headline":"display render game gu debug show redraw","preContext":["      this.finalGameState = state;","      this.onGameEnd?.trigger(new Lemmings.GameResult(this));","    }","  }"],"postContext":[]},{"id":1318,"file":"test\\gameview.test.js","start":2338,"end":2349,"kind":"MethodDefinition","name":"StageMock.redraw","weight":0.5,"headline":"redraw","preContext":["clear() {}"],"postContext":["startFadeOut() {}"]},{"id":1319,"file":"js\\GameTimer.js","start":8751,"end":8893,"kind":"MethodDefinition","name":"GameTimer.getGameLeftTimeString","weight":1.2,"headline":"secs get game time string const return","preContext":["    let left = this.ticksTimeLimit - this.tickIndex;","    if (left < 0) left = 0;","    return Math.floor(this.ticksToSeconds(left));","  }"],"postContext":["ticksToSeconds(t) {","    if (lemmings.endless == true) {","      return 42069 * (this.TIME_PER_FRAME_MS / 1000);","    }  "]},{"id":1320,"file":"js\\GameGui.js","start":20602,"end":21485,"kind":"MethodDefinition","name":"GameGui.drawSpeedChange","weight":1.2,"headline":"draw display horizontal line speed else reset","preContext":["    d.drawStippleRect(x, y + h, w, 0, 160, 160, 160);    // bottom","    d.drawStippleRect(x, y, 0, h, 160, 160, 160);        // left","    d.drawStippleRect(x + w, y, 0, h, 160, 160, 160);    // right","  }"],"postContext":["drawNukeConfirm(d) {","    d.drawRect(16 * 11, 16, 16, 23, 255, 0, 0);","  }"]},{"id":1321,"file":"test\\gamegui.behavior.test.js","start":2286,"end":2332,"kind":"MethodDefinition","name":"GameStub.queueCommand","weight":0.5,"headline":"cmd queue command commands push","preContext":["constructor() { this.commands = []; this.showDebug = false; }"],"postContext":["function createDisplay() {","  return {","    lines: [],","    marching: [],"]},{"id":1322,"file":"test\\action-systems.test.js","start":3712,"end":3743,"kind":"MethodDefinition","name":"StubGVC.addSurvivor","weight":0.5,"headline":"add survivor","preContext":["constructor() { this.count = 0; }"],"postContext":["class DummyMask { constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 0; this.height = 0; } at() { return false; } }"]},{"id":1323,"file":"test\\bench-sequence.test.js","start":1392,"end":1442,"kind":"MethodDefinition","name":"GameMock.getCommandManager","weight":0.5,"headline":"get command manager return load replay","preContext":["start() { this.timer.continue(); }"],"postContext":["getGameTimer() { return this.timer; }"]},{"id":1324,"file":"test\\bench-tps.test.js","start":2145,"end":2185,"kind":"MethodDefinition","name":"GameVictoryStub.getMinReleaseRate","weight":0.5,"headline":"min get release rate return","preContext":["constructor() { this.min = 1; this.max = 10; this.cur = 5; this.out = 0; this.survivor = 50; }"],"postContext":["getMaxReleaseRate() { return this.max; }"]},{"id":1325,"file":"js\\GameView.js","start":11000,"end":11183,"kind":"MethodDefinition","name":"GameView.setHistoryState","weight":1.2,"headline":"param history state query search null set","preContext":["    }","","    this.setHistoryState(params);","  }"],"postContext":["changeHtmlText(htmlElement, value) {","    if (htmlElement == null) {","      return;","    }"]},{"id":1326,"file":"js\\Level.js","start":9800,"end":9995,"kind":"MethodDefinition","name":"Level.isSteelGround","weight":1.2,"headline":"steel ground loading false return mask","preContext":["      }","    }","    return false;","  }"],"postContext":["hasSteelUnderMask(mask, ox, oy) {","    const { offsetX:mx, offsetY:my, width:w, height:h } = mask;","    for (let dy = 0; dy < h; ++dy) {","      for (let dx = 0; dx < w; ++dx) {"]},{"id":1327,"file":"js\\LemmingManager.js","start":12417,"end":12462,"kind":"MethodDefinition","name":"LemmingManager.getLemmings","weight":1.2,"headline":"lemmings get return","preContext":["setSelectedLemming(lem) {","    this.selectedIndex = lem?.id ?? -1;","  }"],"postContext":["getLemmingAt(x, y, radius = 6) {","    return this.getNearestLemming(x, y);","  }"]},{"id":1328,"file":"js\\DisplayImage.js","start":6210,"end":6639,"kind":"MethodDefinition","name":"DisplayImage.drawStippleRect","weight":1.2,"headline":"let const color draw stipple rect return","preContext":["      color1,","      color2","    );","  }"],"postContext":["drawCornerRect(x, y, size, r, g, b, length = 1, midLine = false, midLen = 0) {","    const w = typeof size === 'object' ? size.width : size;","    const h = typeof size === 'object' ? size.height : size;","    const x2 = x + w - 1;"]},{"id":1329,"file":"test\\gamegui.test.js","start":2028,"end":2070,"kind":"MethodDefinition","name":"GameTimerStub.getGameLeftTimeString","weight":0.5,"headline":"get game time string return","preContext":["toggle() { this.running = !this.running; }"],"postContext":["getGameTime() { return 0; }"]},{"id":1330,"file":"js\\xbrz\\xbrz.js","start":4373,"end":5726,"kind":"FunctionDeclaration","name":"preProcessCorners","weight":2,"headline":"ker blend dist dominant result const gradient","preContext":["    J_old = old.I;","  }","  return { I: I_old, J: J_old };","}"],"postContext":["function scalePixel (scaler, rotDeg, ker3x3, trg, trgi, trgWidth, blendInfo) {","  const b = ker3x3[Rot[(1 << 2) + rotDeg]];","  const c = ker3x3[Rot[(2 << 2) + rotDeg]];","  const d = ker3x3[Rot[(3 << 2) + rotDeg]];"]},{"id":1331,"file":"test\\gamegui.test.js","start":2073,"end":2100,"kind":"MethodDefinition","name":"GameTimerStub.getGameTime","weight":0.5,"headline":"get game time return","preContext":["getGameLeftTimeString() { return '1:00'; }"],"postContext":["class GameVictoryConditionStub {","  constructor() {","    this.min = 1;","    this.max = 10;"]},{"id":1332,"file":"js\\DisplayImage.js","start":7205,"end":8587,"kind":"MethodDefinition","name":"DisplayImage.drawCornerRect","weight":1.2,"headline":"math line draw const mid size max","preContext":["        if (((dx + dy) & 1) === 0) this.buffer32[idx] = color32;","      }","    }","  }"],"postContext":["drawMask(mask, posX, posY) {","    if (!this.buffer32) return;","    const srcW = mask.width, srcH = mask.height,","      srcMask = mask.getMask(),"]},{"id":1333,"file":"js\\LemmingManager.js","start":12466,"end":12543,"kind":"MethodDefinition","name":"LemmingManager.getLemmingAt","weight":1.2,"headline":"get lemming radius return nearest","preContext":["getLemmings() {","    return this.lemmings;","  }"],"postContext":["getNearestLemming(x, y) {","    let best = null;","    let bestDist = Infinity;","    for (const lem of this.lemmings) {"]},{"id":1334,"file":"js\\Level.js","start":9999,"end":10323,"kind":"MethodDefinition","name":"Level.hasSteelUnderMask","weight":1.2,"headline":"mask steel ox oy offset let return","preContext":["    if (this.hasGroundAt(x, y)) {","      return this.isSteelAt(x, y);","    }","  }"],"postContext":["setGroundImage(img) { this.groundImage = new Uint8ClampedArray(img); }"]},{"id":1335,"file":"js\\GameView.js","start":11233,"end":11359,"kind":"MethodDefinition","name":"GameView.changeHtmlText","weight":1.2,"headline":"ht ml element text change null return","preContext":["setHistoryState(params) {","    const query = params instanceof URLSearchParams ? params : new URLSearchParams(params);","    history.replaceState(null, null, '?' + query.toString());","  }"],"postContext":["prefixNumbers(list) {","    return list.map((item, idx) => `${idx + 1} - ${item}`);","  }"]},{"id":1336,"file":"test\\bench-tps.test.js","start":2188,"end":2228,"kind":"MethodDefinition","name":"GameVictoryStub.getMaxReleaseRate","weight":0.5,"headline":"max get release rate return","preContext":["getMinReleaseRate() { return this.min; }"],"postContext":["getCurrentReleaseRate() { return this.cur; }"]},{"id":1337,"file":"test\\bench-sequence.test.js","start":1445,"end":1482,"kind":"MethodDefinition","name":"GameMock.getGameTimer","weight":0.5,"headline":"timer get game return","preContext":["getCommandManager() { return { loadReplay(){} }; }"],"postContext":["getLemmingManager() { return this.lemmingManager; }"]},{"id":1338,"file":"test\\action-systems.test.js","start":3747,"end":3876,"kind":"ClassDeclaration","name":"DummyMask","weight":0.5,"headline":"class dummy mask constructor offset return false","preContext":["addSurvivor() { this.count++; }"],"postContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 0; this.height = 0; }"]},{"id":1339,"file":"test\\gamegui.behavior.test.js","start":2336,"end":2710,"kind":"FunctionDeclaration","name":"createDisplay","weight":0.5,"headline":"draw arg marching rect frame lines push","preContext":["queueCommand(cmd) { this.commands.push(cmd); }"],"postContext":[]},{"id":1340,"file":"js\\GameGui.js","start":21489,"end":21561,"kind":"MethodDefinition","name":"GameGui.drawNukeConfirm","weight":1.2,"headline":"draw nuke confirm rect","preContext":["    }","","    this.gameSpeedChanged = true;","  }"],"postContext":["drawNukeHover(d) {","    d.drawMarchingAntRect(","      16 * 11,","      16,"]},{"id":1341,"file":"js\\GameTimer.js","start":8896,"end":9066,"kind":"MethodDefinition","name":"GameTimer.ticksToSeconds","weight":1.2,"headline":"return ticks seconds lemmings endless true","preContext":["getGameLeftTimeString() {","    const secs = this.getGameLeftTime();","    return Math.floor(secs / 60) + '-' + ('0' + (secs % 60)).slice(-2);","  }"],"postContext":["secondsToTicks(s) { return s * (1000 / this.TIME_PER_FRAME_MS); }"]},{"id":1342,"file":"test\\gameview.test.js","start":2352,"end":2369,"kind":"MethodDefinition","name":"StageMock.startFadeOut","weight":0.5,"headline":"fade","preContext":["redraw() {}"],"postContext":["startOverlayFade(color, rect) { this.overlayArgs = { color, rect }; }"]},{"id":1343,"file":"js\\Stage.js","start":9801,"end":10419,"kind":"MethodDefinition","name":"Stage.getStageImageAt","weight":1.2,"headline":"im props game gu return const canvas","preContext":["      const guiImg = this.guiImgProps.display.getImageData();","      this.draw(this.guiImgProps, guiImg);","    }","  }"],"postContext":["getGameDisplay() {","    if (this.gameImgProps.display) return this.gameImgProps.display;","    this.gameImgProps.display = new Lemmings.DisplayImage(this);","    return this.gameImgProps.display;"]},{"id":1344,"file":"js\\GameGui.js","start":21565,"end":21763,"kind":"MethodDefinition","name":"GameGui.drawNukeHover","weight":1.2,"headline":"draw selection nuke hover marching ant rect","preContext":["drawNukeConfirm(d) {","    d.drawRect(16 * 11, 16, 16, 23, 255, 0, 0);","  }"],"postContext":["drawPanelNumber(d, num, panelIdx) { ","    this.drawNumber(d, num, 4 + 16 * panelIdx, 17); ","  }"]},{"id":1345,"file":"test\\action-systems.test.js","start":3765,"end":3851,"kind":"MethodDefinition","name":"DummyMask.constructor","weight":0.5,"headline":"constructor offset","preContext":["class DummyMask { constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 0; this.height = 0; } at() { return false; } }"],"postContext":["at() { return false; }"]},{"id":1346,"file":"test\\bench-sequence.test.js","start":1485,"end":1536,"kind":"MethodDefinition","name":"GameMock.getLemmingManager","weight":0.5,"headline":"lemming manager get return","preContext":["getGameTimer() { return this.timer; }"],"postContext":["class GameResourcesMock {","  async getLevel() { return { width:100, height:50, screenPositionX:0, entrances:[], render(){}}; }","  getLevelGroups() { return [0]; }","}"]},{"id":1347,"file":"test\\bench-tps.test.js","start":2231,"end":2275,"kind":"MethodDefinition","name":"GameVictoryStub.getCurrentReleaseRate","weight":0.5,"headline":"get current release rate return cur","preContext":["getMaxReleaseRate() { return this.max; }"],"postContext":["setCurrentReleaseRate(v) { this.cur = v; }"]},{"id":1348,"file":"js\\GameView.js","start":11409,"end":11494,"kind":"MethodDefinition","name":"GameView.prefixNumbers","weight":1.2,"headline":"list item prefix numbers return map","preContext":["      return;","    }","    htmlElement.innerText = value;","  }"],"postContext":["strToNum(str) {","    const n = parseInt(str, 10);","    return Number.isNaN(n) ? 0 : n;","  }"]},{"id":1349,"file":"js\\Level.js","start":10327,"end":10397,"kind":"MethodDefinition","name":"Level.setGroundImage","weight":1.2,"headline":"ground image im set new ui nt","preContext":["      }","    }","    return false;","  }"],"postContext":["setPalettes(colorPalette, groundPalette) {","    this.colorPalette = colorPalette;","    this.groundPalette = groundPalette;","  }"]},{"id":1350,"file":"js\\LemmingManager.js","start":12547,"end":12863,"kind":"MethodDefinition","name":"LemmingManager.getNearestLemming","weight":1.2,"headline":"dist best le get let const nearest","preContext":["getLemmingAt(x, y, radius = 6) {","    return this.getNearestLemming(x, y);","  }"],"postContext":["getLemmingsInMask(mask, x, y) {","    const out = [];","    const lems = this.lemmings;","    const left = x + mask.offsetX;"]},{"id":1351,"file":"js\\DisplayImage.js","start":8673,"end":9418,"kind":"MethodDefinition","name":"DisplayImage.drawMask","weight":1.2,"headline":"sr mask des base pos const let","preContext":["      this.drawVerticalLine(x, hy1, hy2, r, g, b);","      this.drawVerticalLine(x2, hy1, hy2, r, g, b);","    }","  }"],"postContext":["_blit(frame, posX, posY, opts) {","    const { width: srcW, height: srcH } = frame,","      srcBuf  = frame.getBuffer(),","      srcMask = frame.getMask(),"]},{"id":1352,"file":"test\\gamegui.test.js","start":2104,"end":2524,"kind":"ClassDeclaration","name":"GameVictoryConditionStub","weight":0.5,"headline":"class game victory condition stub constructor get","preContext":["getGameTime() { return 0; }"],"postContext":["constructor() {","    this.min = 1;","    this.max = 10;","    this.cur = 5;"]},{"id":1353,"file":"js\\xbrz\\xbrz.js","start":6440,"end":8196,"kind":"FunctionDeclaration","name":"scalePixel","weight":2,"headline":"blend rot const line deg ker eq","preContext":["      blendResult.g = dominantGradient ? BlendType.BLEND_DOMINANT : BlendType.BLEND_NORMAL;","    }","  }","}"],"postContext":["function scaleImage (scaleSize, src, trg, srcWidth, srcHeight, yFirst, yLast) {","  yFirst = Math.max(yFirst, 0);","  yLast = Math.min(yLast, srcHeight);",""]},{"id":1354,"file":"test\\gamegui.test.js","start":2139,"end":2255,"kind":"MethodDefinition","name":"GameVictoryConditionStub.constructor","weight":0.5,"headline":"constructor min max cur survivor","preContext":["  setCurrentReleaseRate(v) { this.cur = v; }","  getOutCount() { return this.out; }","  getSurvivorPercentage() { return this.survivor; }","}"],"postContext":["getMinReleaseRate() { return this.min; }"]},{"id":1355,"file":"js\\DisplayImage.js","start":9633,"end":11834,"kind":"MethodDefinition","name":"DisplayImage._blit","weight":1.2,"headline":"sr des const ground scale ds frame","preContext":["        this.buffer32[destRow] = WHITE;","      }","    }","  }"],"postContext":["drawFrame(frame, x, y,) {","    this._blit(frame, x, y);","  }"]},{"id":1356,"file":"js\\LemmingManager.js","start":12867,"end":13275,"kind":"MethodDefinition","name":"LemmingManager.getLemmingsInMask","weight":1.2,"headline":"const mask lx ly lemmings le ms","preContext":["      }","    }","    return best;","  }"],"postContext":["setLemmingState(lem, stateType) {","    Lemmings.withPerformance(","      'setLemmingState',","      {"]},{"id":1357,"file":"js\\Level.js","start":10400,"end":10524,"kind":"MethodDefinition","name":"Level.setPalettes","weight":1.2,"headline":"palette color ground set palettes","preContext":["setGroundImage(img) { this.groundImage = new Uint8ClampedArray(img); }"],"postContext":["render(gameDisplay) {","    gameDisplay.initSize(this.width, this.height);","    gameDisplay.setBackground(this.groundImage, this.groundMask);","  }"]},{"id":1358,"file":"js\\GameView.js","start":11541,"end":11629,"kind":"MethodDefinition","name":"GameView.strToNum","weight":1.2,"headline":"str num const parse int return number","preContext":["prefixNumbers(list) {","    return list.map((item, idx) => `${idx + 1} - ${item}`);","  }"],"postContext":["clearHtmlList(htmlList) {","    while (htmlList.options.length) {","      htmlList.remove(0);","    }"]},{"id":1359,"file":"test\\bench-tps.test.js","start":2278,"end":2320,"kind":"MethodDefinition","name":"GameVictoryStub.setCurrentReleaseRate","weight":0.5,"headline":"set current release rate cur","preContext":["getCurrentReleaseRate() { return this.cur; }"],"postContext":["getOutCount() { return this.out; }"]},{"id":1360,"file":"test\\bench-sequence.test.js","start":1540,"end":1702,"kind":"ClassDeclaration","name":"GameResourcesMock","weight":0.5,"headline":"get level return class game resources mock","preContext":["getLemmingManager() { return this.lemmingManager; }"],"postContext":["async getLevel() { return { width:100, height:50, screenPositionX:0, entrances:[], render(){}}; }"]},{"id":1361,"file":"test\\action-systems.test.js","start":3852,"end":3874,"kind":"MethodDefinition","name":"DummyMask.at","weight":0.5,"headline":"return false","preContext":["constructor() { this.offsetX = 0; this.offsetY = 0; this.width = 0; this.height = 0; }"],"postContext":["function stubMasks() {","  return {","    GetMask() {","      return { GetMask() { return new DummyMask(); } };"]},{"id":1362,"file":"js\\GameGui.js","start":21767,"end":21860,"kind":"MethodDefinition","name":"GameGui.drawPanelNumber","weight":1.2,"headline":"panel draw number num","preContext":["      0xFF0080FF,","      0xFF00FFFF","    );","  }"],"postContext":["drawNumber(d, num, x, y, small = false) {","    if (num <= 0) { ","      d.drawFrame(this._numEmptySprite, x, y); return; ","    }"]},{"id":1363,"file":"js\\Stage.js","start":10423,"end":10617,"kind":"MethodDefinition","name":"Stage.getGameDisplay","weight":1.2,"headline":"display game im props return get new","preContext":["      return this.guiImgProps;","    }","    return null;","  }"],"postContext":["getGuiDisplay() {","    if (this.guiImgProps.display) return this.guiImgProps.display;","    this.guiImgProps.display = new Lemmings.DisplayImage(this);","    return this.guiImgProps.display;"]},{"id":1364,"file":"test\\gameview.test.js","start":2372,"end":2441,"kind":"MethodDefinition","name":"StageMock.startOverlayFade","weight":0.5,"headline":"overlay color rect fade arg","preContext":["startFadeOut() {}"],"postContext":["resetFade() { this.resetCalled = true; }"]},{"id":1365,"file":"js\\GameTimer.js","start":9069,"end":9134,"kind":"MethodDefinition","name":"GameTimer.secondsToTicks","weight":1.2,"headline":"seconds ticks return","preContext":["      return 42069 * (this.TIME_PER_FRAME_MS / 1000);","    }  ","    return t * (this.TIME_PER_FRAME_MS / 1000); ","  }"],"postContext":[]},{"id":1366,"file":"test\\action-systems.test.js","start":3877,"end":3995,"kind":"FunctionDeclaration","name":"stubMasks","weight":0.5,"headline":"return mask get function stub masks new","preContext":["at() { return false; }"],"postContext":["class TestBashSystem extends ActionBashSystem {","  constructor(gap, horiz) { super(stubSprites, stubMasks()); this.gap = gap; this.horiz = horiz; }","  findGapDelta() { return this.gap; }","  findHorizontalSpace() { return this.horiz; }"]},{"id":1367,"file":"test\\bench-sequence.test.js","start":1568,"end":1665,"kind":"MethodDefinition","name":"GameResourcesMock.getLevel","weight":0.5,"headline":"async get level return screen position entrances","preContext":["class GameResourcesMock {","  async getLevel() { return { width:100, height:50, screenPositionX:0, entrances:[], render(){}}; }","  getLevelGroups() { return [0]; }","}"],"postContext":["getLevelGroups() { return [0]; }"]},{"id":1368,"file":"test\\bench-tps.test.js","start":2323,"end":2357,"kind":"MethodDefinition","name":"GameVictoryStub.getOutCount","weight":0.5,"headline":"get return","preContext":["setCurrentReleaseRate(v) { this.cur = v; }"],"postContext":["getSurvivorPercentage() { return this.survivor; }"]},{"id":1369,"file":"js\\GameView.js","start":11668,"end":11767,"kind":"MethodDefinition","name":"GameView.clearHtmlList","weight":1.2,"headline":"ht ml list clear options length remove","preContext":["strToNum(str) {","    const n = parseInt(str, 10);","    return Number.isNaN(n) ? 0 : n;","  }"],"postContext":["arrayToSelect(htmlList, list) {","    if (htmlList == null) {","      return;","    }"]},{"id":1370,"file":"js\\Level.js","start":10528,"end":10670,"kind":"MethodDefinition","name":"Level.render","weight":1.2,"headline":"game display ground render init size set","preContext":["setPalettes(colorPalette, groundPalette) {","    this.colorPalette = colorPalette;","    this.groundPalette = groundPalette;","  }"],"postContext":["renderDebug(gameDisplay) {","    if (!this._debugFrame) this.#buildDebugFrame();","    gameDisplay.drawFrame(this._debugFrame, 0, 0);","  }"]},{"id":1371,"file":"js\\LemmingManager.js","start":13279,"end":14976,"kind":"MethodDefinition","name":"LemmingManager.setLemmingState","weight":1.2,"headline":"state le lemming lemmings action set track","preContext":["      if (lx > left && lx < right && ly > top && ly < bottom) out.push(val);","    }","    return out;","  }"],"postContext":["doLemmingAction(lem, skillType) {","    return Lemmings.withPerformance(","      'doLemmingAction',","      {"]},{"id":1372,"file":"js\\DisplayImage.js","start":11838,"end":11896,"kind":"MethodDefinition","name":"DisplayImage.drawFrame","weight":1.2,"headline":"frame draw blit","preContext":["    } else {","      scaleNearest(frame, dstW, dstH, scaleOpts);","    }","  }"],"postContext":["drawFrameCovered(frame, x, y, r, g, b) {","    const nullColor32 = 0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF);","    this._blit(frame, x, y, { nullColor32 });","  }"]},{"id":1373,"file":"test\\gamegui.test.js","start":2258,"end":2298,"kind":"MethodDefinition","name":"GameVictoryConditionStub.getMinReleaseRate","weight":0.5,"headline":"min get release rate return","preContext":["    this.cur = 5;","    this.out = 0;","    this.survivor = 50;","  }"],"postContext":["getMaxReleaseRate() { return this.max; }"]},{"id":1374,"file":"js\\xbrz\\xbrz.js","start":8205,"end":12469,"kind":"ExportedFunction","name":"scaleImage","weight":1.2,"headline":"sr ker blend tr const math scaler","preContext":["      scaler.blendLineDiagonal(px, out);","    }","  }","}"],"postContext":[]},{"id":1375,"file":"js\\Level.js","start":10674,"end":10807,"kind":"MethodDefinition","name":"Level.renderDebug","weight":1.2,"headline":"debug frame game display render build draw","preContext":["render(gameDisplay) {","    gameDisplay.initSize(this.width, this.height);","    gameDisplay.setBackground(this.groundImage, this.groundMask);","  }"],"postContext":["#buildDebugFrame() {","    const frame = new Lemmings.Frame(this.width, this.height);","    const steelColor  = Lemmings.ColorPalette.colorFromRGB(0, 255, 255);","    const arrowRColor = Lemmings.ColorPalette.colorFromRGB(128, 255, 0);"]},{"id":1376,"file":"js\\GameView.js","start":11812,"end":12148,"kind":"MethodDefinition","name":"GameView.arrayToSelect","weight":1.2,"headline":"list ht ml el const opt select","preContext":["    while (htmlList.options.length) {","      htmlList.remove(0);","    }","  }"],"postContext":["async populateLevelSelect() {","    if (!this.elementSelectLevel || !this.gameResources) return;","    const config = await this.gameFactory.getConfig(this.gameType);","    const groupLength = config.level.getGroupLength(this.levelGroupIndex);"]},{"id":1377,"file":"test\\bench-tps.test.js","start":2360,"end":2409,"kind":"MethodDefinition","name":"GameVictoryStub.getSurvivorPercentage","weight":0.5,"headline":"survivor get percentage return","preContext":["getOutCount() { return this.out; }"],"postContext":["class GameSkillsStub {","  constructor() {","    this.onCountChanged = new Lemmings.EventHandler();","    this.onSelectionChanged = new Lemmings.EventHandler();"]},{"id":1378,"file":"test\\bench-sequence.test.js","start":1668,"end":1700,"kind":"MethodDefinition","name":"GameResourcesMock.getLevelGroups","weight":0.5,"headline":"get level groups return","preContext":["async getLevel() { return { width:100, height:50, screenPositionX:0, entrances:[], render(){}}; }"],"postContext":["class GameFactoryMock {","  async getGame() { return new GameMock(); }","  async getConfig() { return { level: { order: [[0]], getGroupLength(){return 1;} } }; }","  async getGameResources() { return new GameResourcesMock(); }"]},{"id":1379,"file":"test\\action-systems.test.js","start":4038,"end":4271,"kind":"ClassDeclaration","name":"TestBashSystem","weight":0.5,"headline":"gap hor bash system stub find return","preContext":["      return { GetMask() { return new DummyMask(); } };","    }","  };","}"],"postContext":["constructor(gap, horiz) { super(stubSprites, stubMasks()); this.gap = gap; this.horiz = horiz; }"]},{"id":1380,"file":"test\\gameview.test.js","start":2444,"end":2484,"kind":"MethodDefinition","name":"StageMock.resetFade","weight":0.5,"headline":"reset fade called true","preContext":["startOverlayFade(color, rect) { this.overlayArgs = { color, rect }; }"],"postContext":["setGameViewPointPosition() {}"]},{"id":1381,"file":"js\\Stage.js","start":10621,"end":10810,"kind":"MethodDefinition","name":"Stage.getGuiDisplay","weight":1.2,"headline":"display gu im props return get new","preContext":["    if (this.gameImgProps.display) return this.gameImgProps.display;","    this.gameImgProps.display = new Lemmings.DisplayImage(this);","    return this.gameImgProps.display;","  }"],"postContext":["setGameViewPointPosition(x, y) {","    this.clear(this.gameImgProps);","","    if (lemmings.scale > 0) {"]},{"id":1382,"file":"js\\GameGui.js","start":21864,"end":22250,"kind":"MethodDefinition","name":"GameGui.drawNumber","weight":1.2,"headline":"num draw const frame tens ones get","preContext":["drawPanelNumber(d, num, panelIdx) { ","    this.drawNumber(d, num, 4 + 16 * panelIdx, 17); ","  }"],"postContext":["drawGreenString(d, text, x, y) {","    for (let i = 0; i < text.length; ++i) {","      const ch = text[i];","      let img  = this._letterCache.get(ch);"]},{"id":1383,"file":"test\\gameview.test.js","start":2487,"end":2516,"kind":"MethodDefinition","name":"StageMock.setGameViewPointPosition","weight":0.5,"headline":"set game view point position","preContext":["resetFade() { this.resetCalled = true; }"],"postContext":["class GameMock {","  constructor() {","    this.commandManager = { loadReplay() {} };","    this.gameTimer = { speedFactor: 1 };"]},{"id":1384,"file":"test\\action-systems.test.js","start":4088,"end":4184,"kind":"MethodDefinition","name":"TestBashSystem.constructor","weight":0.5,"headline":"constructor gap hor stub super sprites masks","preContext":["  constructor(gap, horiz) { super(stubSprites, stubMasks()); this.gap = gap; this.horiz = horiz; }","  findGapDelta() { return this.gap; }","  findHorizontalSpace() { return this.horiz; }","}"],"postContext":["findGapDelta() { return this.gap; }"]},{"id":1385,"file":"test\\bench-sequence.test.js","start":1704,"end":2019,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game get return mock async conf new","preContext":["getLevelGroups() { return [0]; }"],"postContext":["async getGame() { return new GameMock(); }"]},{"id":1386,"file":"test\\bench-tps.test.js","start":2413,"end":3092,"kind":"ClassDeclaration","name":"GameSkillsStub","weight":0.5,"headline":"skill selected changed lemmings types skills new","preContext":["getSurvivorPercentage() { return this.survivor; }"],"postContext":["constructor() {","    this.onCountChanged = new Lemmings.EventHandler();","    this.onSelectionChanged = new Lemmings.EventHandler();","    this.skills = new Array(Object.keys(Lemmings.SkillTypes).length).fill(2);"]},{"id":1387,"file":"js\\GameView.js","start":12219,"end":12795,"kind":"MethodDefinition","name":"GameView.populateLevelSelect","weight":1.2,"headline":"level select group game const element conf","preContext":["      el.value = i.toString();","      htmlList.appendChild(el);","    }","  }"],"postContext":["async selectLevelGroup(newLevelGroupIndex) {","    if (!this.gameResources) return;","    const groups = this.gameResources.getLevelGroups();","    const max = groups.length - 1;"]},{"id":1388,"file":"js\\Level.js","start":10811,"end":11511,"kind":"MethodDefinition","name":"Level.buildDebugFrame","weight":1.2,"headline":"color frame const arrow lemmings steel palette","preContext":["renderDebug(gameDisplay) {","    if (!this._debugFrame) this.#buildDebugFrame();","    gameDisplay.drawFrame(this._debugFrame, 0, 0);","  }"],"postContext":[]},{"id":1389,"file":"test\\gamegui.test.js","start":2301,"end":2341,"kind":"MethodDefinition","name":"GameVictoryConditionStub.getMaxReleaseRate","weight":0.5,"headline":"max get release rate return","preContext":["getMinReleaseRate() { return this.min; }"],"postContext":["getCurrentReleaseRate() { return this.cur; }"]},{"id":1390,"file":"js\\DisplayImage.js","start":11900,"end":12076,"kind":"MethodDefinition","name":"DisplayImage.drawFrameCovered","weight":1.2,"headline":"frame null color draw covered const blit","preContext":["drawFrame(frame, x, y,) {","    this._blit(frame, x, y);","  }"],"postContext":["drawFrameFlags(frame, x, y, cfg) {","    this._blit(frame, x, y, {","      checkGround:   true,","      onlyOverwrite: cfg.onlyOverwrite,"]},{"id":1391,"file":"js\\LemmingManager.js","start":14980,"end":17064,"kind":"MethodDefinition","name":"LemmingManager.doLemmingAction","weight":1.2,"headline":"skill lemmings action types system le const","preContext":["        }","        lem.setAction(actionSystem);","      })();","  }"],"postContext":["isNuking() { return this.nextNukingLemmingsIndex >= 0; }"]},{"id":1392,"file":"js\\GameView.js","start":12839,"end":13268,"kind":"MethodDefinition","name":"GameView.selectLevelGroup","weight":1.2,"headline":"level group new groups max select game","preContext":["    }","    this.arrayToSelect(this.elementSelectLevel, list);","    this.elementSelectLevel.selectedIndex = this.levelIndex;","  }"],"postContext":["async selectGameType(newGameType) {","    // dropdown values correspond to config array indices","    if (this.configs && this.configs[newGameType]) {","      newGameType = this.configs[newGameType].gametype;"]},{"id":1393,"file":"test\\bench-tps.test.js","start":2438,"end":2703,"kind":"MethodDefinition","name":"GameSkillsStub.constructor","weight":0.5,"headline":"constructor lemmings new skill changed event handler","preContext":["  setSelectedSkill(s) { this.selectedSkill = s; this.onSelectionChanged.trigger(); }","  getSelectedSkill() { return this.selectedSkill; }","  clearSelectedSkill() { const changed = this.selectedSkill !== Lemmings.SkillTypes.UNKNOWN; this.selectedSkill = Lemmings.SkillTypes.UNKNOWN; if (changed) this.onSelectionChanged.trigger(); return changed; }","}"],"postContext":["getSkill(s) { return this.skills[s]; }"]},{"id":1394,"file":"test\\bench-sequence.test.js","start":1730,"end":1772,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"game async get return new mock","preContext":["  async getConfig() { return { level: { order: [[0]], getGroupLength(){return 1;} } }; }","  async getGameResources() { return new GameResourcesMock(); }","  get configReader() { return { configs: Promise.resolve([{ name:'test', gametype:1 }]) }; }","}"],"postContext":["async getConfig() { return { level: { order: [[0]], getGroupLength(){return 1;} } }; }"]},{"id":1395,"file":"test\\action-systems.test.js","start":4187,"end":4222,"kind":"MethodDefinition","name":"TestBashSystem.findGapDelta","weight":0.5,"headline":"gap find delta return","preContext":["constructor(gap, horiz) { super(stubSprites, stubMasks()); this.gap = gap; this.horiz = horiz; }"],"postContext":["findHorizontalSpace() { return this.horiz; }"]},{"id":1396,"file":"test\\gameview.test.js","start":2560,"end":3178,"kind":"ClassDeclaration","name":"GameMock","weight":0.5,"headline":"game set display arg command manager timer","preContext":["setGameViewPointPosition() {}"],"postContext":["constructor() {","    this.commandManager = { loadReplay() {} };","    this.gameTimer = { speedFactor: 1 };","    this.gameResources = { getCursorSprite: () => Promise.resolve(null) };"]},{"id":1397,"file":"js\\GameGui.js","start":22254,"end":22624,"kind":"MethodDefinition","name":"GameGui.drawGreenString","weight":1.2,"headline":"im ch text letter draw let cache","preContext":["      d.drawFrameCovered(left,  x, y, 0, 0, 0);","    }","    d.drawFrame(right, x, y);","  }"],"postContext":["getSkillByPanelIndex(idx) {","    switch (Math.trunc(idx)) {","    case 2:  return Lemmings.SkillTypes.CLIMBER;","    case 3:  return Lemmings.SkillTypes.FLOATER;"]},{"id":1398,"file":"js\\Stage.js","start":10814,"end":12391,"kind":"MethodDefinition","name":"Stage.setGameViewPointPosition","weight":1.2,"headline":"game im props scale view point set","preContext":["    if (this.guiImgProps.display) return this.guiImgProps.display;","    this.guiImgProps.display = new Lemmings.DisplayImage(this);","    return this.guiImgProps.display;","  }"],"postContext":["redraw() {","    if (this.gameImgProps.display) {","      this.clear(this.gameImgProps);","      const gameImg = this.gameImgProps.display.getImageData();"]},{"id":1399,"file":"test\\gameview.test.js","start":2579,"end":2912,"kind":"MethodDefinition","name":"GameMock.constructor","weight":0.5,"headline":"constructor game null set display arg command","preContext":["  start() { this.startCalled = true; }","  getCommandManager() { return this.commandManager; }","  getGameTimer() { return this.gameTimer; }","}"],"postContext":["async loadLevel() {}"]},{"id":1400,"file":"test\\action-systems.test.js","start":4225,"end":4269,"kind":"MethodDefinition","name":"TestBashSystem.findHorizontalSpace","weight":0.5,"headline":"find horizontal space return hor","preContext":["findGapDelta() { return this.gap; }"],"postContext":["class TestWalkSystem extends ActionWalkSystem {","  constructor(up, down) { super(stubSprites); this.up = up; this.down = down; }","  getGroundStepHeight() { return this.up; }","  getGroundGapDepth() { return this.down; }"]},{"id":1401,"file":"test\\bench-sequence.test.js","start":1775,"end":1861,"kind":"MethodDefinition","name":"GameFactoryMock.getConfig","weight":0.5,"headline":"get return async conf level order group","preContext":["async getGame() { return new GameMock(); }"],"postContext":["async getGameResources() { return new GameResourcesMock(); }"]},{"id":1402,"file":"test\\bench-tps.test.js","start":2706,"end":2744,"kind":"MethodDefinition","name":"GameSkillsStub.getSkill","weight":0.5,"headline":"get skill return skills","preContext":["    this.onSelectionChanged = new Lemmings.EventHandler();","    this.skills = new Array(Object.keys(Lemmings.SkillTypes).length).fill(2);","    this.selectedSkill = Lemmings.SkillTypes.CLIMBER;","  }"],"postContext":["setSelectedSkill(s) { this.selectedSkill = s; this.onSelectionChanged.trigger(); }"]},{"id":1403,"file":"js\\GameView.js","start":13310,"end":13980,"kind":"MethodDefinition","name":"GameView.selectGameType","weight":1.2,"headline":"game level new select resources conf group","preContext":["    this.levelIndex = 0;","    await this.populateLevelSelect();","    this.loadLevel();","  }"],"postContext":["selectLevel(newLevelIndex) {","    this.levelIndex = newLevelIndex;","    this.loadLevel();","  }"]},{"id":1404,"file":"js\\LemmingManager.js","start":17068,"end":17124,"kind":"MethodDefinition","name":"LemmingManager.isNuking","weight":1.2,"headline":"nu king return next lemmings","preContext":["        const result = ok;","        return result;","      }).call(this);","  }"],"postContext":["doNukeAllLemmings() { this.nextNukingLemmingsIndex = 0; }"]},{"id":1405,"file":"js\\DisplayImage.js","start":12080,"end":12337,"kind":"MethodDefinition","name":"DisplayImage.drawFrameFlags","weight":1.2,"headline":"cf overwrite frame ground upside mask draw","preContext":["drawFrameCovered(frame, x, y, r, g, b) {","    const nullColor32 = 0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF);","    this._blit(frame, x, y, { nullColor32 });","  }"],"postContext":["drawFrameResized(frame, x, y, w, h) {","    this._blit(frame, x, y, {","      size: {width: w, height: h}","    });"]},{"id":1406,"file":"test\\gamegui.test.js","start":2344,"end":2388,"kind":"MethodDefinition","name":"GameVictoryConditionStub.getCurrentReleaseRate","weight":0.5,"headline":"get current release rate return cur","preContext":["getMaxReleaseRate() { return this.max; }"],"postContext":["setCurrentReleaseRate(v) { this.cur = v; }"]},{"id":1407,"file":"test\\bench-tps.test.js","start":2747,"end":2829,"kind":"MethodDefinition","name":"GameSkillsStub.setSelectedSkill","weight":0.5,"headline":"selected skill set selection changed trigger","preContext":["getSkill(s) { return this.skills[s]; }"],"postContext":["getSelectedSkill() { return this.selectedSkill; }"]},{"id":1408,"file":"test\\bench-sequence.test.js","start":1864,"end":1924,"kind":"MethodDefinition","name":"GameFactoryMock.getGameResources","weight":0.5,"headline":"game resources async get return new mock","preContext":["async getConfig() { return { level: { order: [[0]], getGroupLength(){return 1;} } }; }"],"postContext":["get configReader() { return { configs: Promise.resolve([{ name:'test', gametype:1 }]) }; }"]},{"id":1409,"file":"test\\action-systems.test.js","start":4273,"end":4490,"kind":"ClassDeclaration","name":"TestWalkSystem","weight":0.5,"headline":"walk system get ground return class test","preContext":["findHorizontalSpace() { return this.horiz; }"],"postContext":["constructor(up, down) { super(stubSprites); this.up = up; this.down = down; }"]},{"id":1410,"file":"test\\gameview.test.js","start":2915,"end":2935,"kind":"MethodDefinition","name":"GameMock.loadLevel","weight":0.5,"headline":"async load level","preContext":["    this.setGameDisplayArgs = null;","    this.setGuiDisplayArgs = null;","    this.startCalled = false;","  }"],"postContext":["setGameDisplay(d) { this.setGameDisplayArgs = d; }"]},{"id":1411,"file":"js\\Stage.js","start":12395,"end":12804,"kind":"MethodDefinition","name":"Stage.redraw","weight":1.2,"headline":"im props game gu display draw clear","preContext":["    );","","    this.redraw();","  }"],"postContext":["createImage(displayOwner, width, height) {","    return displayOwner === this.gameImgProps.display","      ? this.gameImgProps.createImage(width, height)","      : this.guiImgProps.createImage(width, height);"]},{"id":1412,"file":"js\\GameGui.js","start":22628,"end":23132,"kind":"MethodDefinition","name":"GameGui.getSkillByPanelIndex","weight":1.2,"headline":"skill return lemmings types case get panel","preContext":["      }","      x += 8;","    }","  }"],"postContext":["getPanelIndexBySkill(skill) {","    switch (skill) {","    case Lemmings.SkillTypes.CLIMBER: return 2;","    case Lemmings.SkillTypes.FLOATER: return 3;"]},{"id":1413,"file":"test\\gameview.test.js","start":2938,"end":2988,"kind":"MethodDefinition","name":"GameMock.setGameDisplay","weight":0.5,"headline":"set game display arg","preContext":["async loadLevel() {}"],"postContext":["setGuiDisplay(d) { this.setGuiDisplayArgs = d; }"]},{"id":1414,"file":"test\\action-systems.test.js","start":4323,"end":4400,"kind":"MethodDefinition","name":"TestWalkSystem.constructor","weight":0.5,"headline":"constructor super stub sprites","preContext":["  constructor(up, down) { super(stubSprites); this.up = up; this.down = down; }","  getGroundStepHeight() { return this.up; }","  getGroundGapDepth() { return this.down; }","}"],"postContext":["getGroundStepHeight() { return this.up; }"]},{"id":1415,"file":"test\\bench-sequence.test.js","start":1927,"end":2017,"kind":"MethodDefinition","name":"GameFactoryMock.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return new GameResourcesMock(); }"],"postContext":[]},{"id":1416,"file":"test\\bench-tps.test.js","start":2832,"end":2881,"kind":"MethodDefinition","name":"GameSkillsStub.getSelectedSkill","weight":0.5,"headline":"selected skill get return","preContext":["setSelectedSkill(s) { this.selectedSkill = s; this.onSelectionChanged.trigger(); }"],"postContext":["clearSelectedSkill() { const changed = this.selectedSkill !== Lemmings.SkillTypes.UNKNOWN; this.selectedSkill = Lemmings.SkillTypes.UNKNOWN; if (changed) this.onSelectionChanged.trigger(); return changed; }"]},{"id":1417,"file":"test\\gamegui.test.js","start":2391,"end":2433,"kind":"MethodDefinition","name":"GameVictoryConditionStub.setCurrentReleaseRate","weight":0.5,"headline":"set current release rate cur","preContext":["getCurrentReleaseRate() { return this.cur; }"],"postContext":["getOutCount() { return this.out; }"]},{"id":1418,"file":"js\\DisplayImage.js","start":12340,"end":12453,"kind":"MethodDefinition","name":"DisplayImage.drawFrameResized","weight":1.2,"headline":"frame draw resized blit size","preContext":["      upsideDown:    cfg.isUpsideDown,","      groundMask:    this.groundMask","    });","  }"],"postContext":["setDebugPixel(x, y) { if (this.buffer32) this.buffer32[y * this.imgData.width + x] = 0xFF0000FF; }"]},{"id":1419,"file":"js\\LemmingManager.js","start":17127,"end":17184,"kind":"MethodDefinition","name":"LemmingManager.doNukeAllLemmings","weight":1.2,"headline":"lemmings nuke next nu king","preContext":["isNuking() { return this.nextNukingLemmingsIndex >= 0; }"],"postContext":["removeOne(lem) {","    if (this.miniMap &&","            lem.action !== this.actions[Lemmings.LemmingStateType.EXITING]) {","      this.miniMap.addDeath(lem.x, lem.y);"]},{"id":1420,"file":"js\\GameView.js","start":14016,"end":14107,"kind":"MethodDefinition","name":"GameView.selectLevel","weight":1.2,"headline":"level new select load","preContext":["    this.elementSelectLevelGroup.selectedIndex = this.levelGroupIndex;","    await this.populateLevelSelect();","    this.loadLevel();","  }"],"postContext":["async setup() {","    this.applyQuery();","    this.configs = await this.gameFactory.configReader.configs;","    this.arrayToSelect(this.elementSelectGameType, this.configs.map(c => c.name));"]},{"id":1421,"file":"js\\LemmingManager.js","start":17188,"end":17420,"kind":"MethodDefinition","name":"LemmingManager.removeOne","weight":1.2,"headline":"le remove one mini map action actions","preContext":["doNukeAllLemmings() { this.nextNukingLemmingsIndex = 0; }"],"postContext":["cycleSelection(dir = 1) {","    if (!this.lemmings?.length) return null;","    const total = this.lemmings.length;","    let idx = this.selectedIndex;"]},{"id":1422,"file":"js\\DisplayImage.js","start":12502,"end":12600,"kind":"MethodDefinition","name":"DisplayImage.setDebugPixel","weight":1.2,"headline":"set debug pixel im","preContext":["    this._blit(frame, x, y, {","      size: {width: w, height: h}","    });","  }"],"postContext":["setPixel(x,y,r,g,b) {","    if (!this.buffer32) return;","    this.buffer32[y * this.imgData.width + x] = 0xFF000000 | (b&0xFF)<<16 | (g&0xFF)<<8 | (r&0xFF);","  }"]},{"id":1423,"file":"test\\gamegui.test.js","start":2436,"end":2470,"kind":"MethodDefinition","name":"GameVictoryConditionStub.getOutCount","weight":0.5,"headline":"get return","preContext":["setCurrentReleaseRate(v) { this.cur = v; }"],"postContext":["getSurvivorPercentage() { return this.survivor; }"]},{"id":1424,"file":"test\\bench-tps.test.js","start":2884,"end":3090,"kind":"MethodDefinition","name":"GameSkillsStub.clearSelectedSkill","weight":0.5,"headline":"skill changed selected lemmings types clear const","preContext":["getSelectedSkill() { return this.selectedSkill; }"],"postContext":["class SpritesStub {","  getPanelSprite() { return { width: 176, height: 40, getData() { return [0]; } }; }","  getNumberSpriteLeft() { return {}; }","  getNumberSpriteRight() { return {}; }"]},{"id":1425,"file":"test\\action-systems.test.js","start":4403,"end":4444,"kind":"MethodDefinition","name":"TestWalkSystem.getGroundStepHeight","weight":0.5,"headline":"get ground step return","preContext":["constructor(up, down) { super(stubSprites); this.up = up; this.down = down; }"],"postContext":["getGroundGapDepth() { return this.down; }"]},{"id":1426,"file":"test\\gameview.test.js","start":2991,"end":3039,"kind":"MethodDefinition","name":"GameMock.setGuiDisplay","weight":0.5,"headline":"set gu display arg","preContext":["setGameDisplay(d) { this.setGameDisplayArgs = d; }"],"postContext":["start() { this.startCalled = true; }"]},{"id":1427,"file":"js\\GameGui.js","start":23136,"end":23604,"kind":"MethodDefinition","name":"GameGui.getPanelIndexBySkill","weight":1.2,"headline":"skill return case lemmings types get panel","preContext":["    case 9:  return Lemmings.SkillTypes.DIGGER;","    default: return Lemmings.SkillTypes.UNKNOWN;","    }","  }"],"postContext":["class SmoothScroller {","  static minZoom = 0.25;","  static maxZoom = 8;",""]},{"id":1428,"file":"js\\Stage.js","start":12808,"end":13014,"kind":"MethodDefinition","name":"Stage.createImage","weight":1.2,"headline":"create image display im props owner game","preContext":["      this.draw(this.guiImgProps, guiImg);","    }","    this.drawCursor();","  }"],"postContext":["clear(stageImage) {","    const ctx = this.stageCav.getContext('2d', { willReadFrequently: true });","    ctx.fillStyle = '#000900';","    if (!stageImage) {"]},{"id":1429,"file":"test\\gameview.test.js","start":3042,"end":3078,"kind":"MethodDefinition","name":"GameMock.start","weight":0.5,"headline":"called true","preContext":["setGuiDisplay(d) { this.setGuiDisplayArgs = d; }"],"postContext":["getCommandManager() { return this.commandManager; }"]},{"id":1430,"file":"test\\action-systems.test.js","start":4447,"end":4488,"kind":"MethodDefinition","name":"TestWalkSystem.getGroundGapDepth","weight":0.5,"headline":"get ground gap depth return","preContext":["getGroundStepHeight() { return this.up; }"],"postContext":["class TestMineSystem extends ActionMineSystem {","  constructor(haveSteel, haveArrow) { super(stubSprites, stubMasks()); this.haveSteel = haveSteel; this.haveArrow = haveArrow; this.cleared = 0; }","  process(level, lem) { return super.process(level, lem); }","}"]},{"id":1431,"file":"test\\bench-tps.test.js","start":3094,"end":3354,"kind":"ClassDeclaration","name":"SpritesStub","weight":0.5,"headline":"get return sprite number class sprites stub","preContext":["clearSelectedSkill() { const changed = this.selectedSkill !== Lemmings.SkillTypes.UNKNOWN; this.selectedSkill = Lemmings.SkillTypes.UNKNOWN; if (changed) this.onSelectionChanged.trigger(); return changed; }"],"postContext":["getPanelSprite() { return { width: 176, height: 40, getData() { return [0]; } }; }"]},{"id":1432,"file":"test\\gamegui.test.js","start":2473,"end":2522,"kind":"MethodDefinition","name":"GameVictoryConditionStub.getSurvivorPercentage","weight":0.5,"headline":"survivor get percentage return","preContext":["getOutCount() { return this.out; }"],"postContext":["class GameSkillsStub {","  constructor() {","    this.onCountChanged = new Lemmings.EventHandler();","    this.onSelectionChanged = new Lemmings.EventHandler();"]},{"id":1433,"file":"js\\DisplayImage.js","start":12604,"end":12761,"kind":"MethodDefinition","name":"DisplayImage.setPixel","weight":1.2,"headline":"set pixel return im","preContext":["setDebugPixel(x, y) { if (this.buffer32) this.buffer32[y * this.imgData.width + x] = 0xFF0000FF; }"],"postContext":["setScreenPosition(x, y) { this.stage.setGameViewPointPosition(x, y); }"]},{"id":1434,"file":"js\\LemmingManager.js","start":17424,"end":17850,"kind":"MethodDefinition","name":"LemmingManager.cycleSelection","weight":1.2,"headline":"le total lemmings return selected dir length","preContext":["    }","    lem.remove();","    this.gameVictoryCondition.removeOne();","  }"],"postContext":["dispose() {","    const start = performance.now();","    if (this.lemmings) this.lemmings.length = 0;","    if (this.minimapDots) this.minimapDots = new Uint8Array(0);"]},{"id":1435,"file":"js\\GameView.js","start":14138,"end":14973,"kind":"MethodDefinition","name":"GameView.setup","weight":1.2,"headline":"game select level conf await element resources","preContext":["selectLevel(newLevelIndex) {","    this.levelIndex = newLevelIndex;","    this.loadLevel();","  }"],"postContext":["async loadLevel() {","    if (this.autoMoveTimer !== null) {","      window.clearTimeout(this.autoMoveTimer);","      this.autoMoveTimer = null;"]},{"id":1436,"file":"js\\LemmingManager.js","start":17854,"end":18969,"kind":"MethodDefinition","name":"LemmingManager.dispose","weight":1.2,"headline":"null lemmings manager performance lemming dispose minima","preContext":["    }","    this.selectedIndex = -1;","    return null;","  }"],"postContext":[]},{"id":1437,"file":"js\\DisplayImage.js","start":12765,"end":12835,"kind":"MethodDefinition","name":"DisplayImage.setScreenPosition","weight":1.2,"headline":"set position screen stage game view point","preContext":["setPixel(x,y,r,g,b) {","    if (!this.buffer32) return;","    this.buffer32[y * this.imgData.width + x] = 0xFF000000 | (b&0xFF)<<16 | (g&0xFF)<<8 | (r&0xFF);","  }"],"postContext":["getImageData()         { return this.imgData;  }"]},{"id":1438,"file":"test\\gamegui.test.js","start":2526,"end":3223,"kind":"ClassDeclaration","name":"GameSkillsStub","weight":0.5,"headline":"skill selected changed lemmings types skills new","preContext":["getSurvivorPercentage() { return this.survivor; }"],"postContext":["constructor() {","    this.onCountChanged = new Lemmings.EventHandler();","    this.onSelectionChanged = new Lemmings.EventHandler();","    this.skills = new Array(Object.keys(Lemmings.SkillTypes).length).fill(2);"]},{"id":1439,"file":"test\\bench-tps.test.js","start":3116,"end":3198,"kind":"MethodDefinition","name":"SpritesStub.getPanelSprite","weight":0.5,"headline":"get return panel sprite","preContext":["  getNumberSpriteRight() { return {}; }","  getNumberSpriteEmpty() { return {}; }","  getLetterSprite() { return {}; }","}"],"postContext":["getNumberSpriteLeft() { return {}; }"]},{"id":1440,"file":"test\\action-systems.test.js","start":4492,"end":4748,"kind":"ClassDeclaration","name":"TestMineSystem","weight":0.5,"headline":"steel arrow mine system super stub process","preContext":["getGroundGapDepth() { return this.down; }"],"postContext":["constructor(haveSteel, haveArrow) { super(stubSprites, stubMasks()); this.haveSteel = haveSteel; this.haveArrow = haveArrow; this.cleared = 0; }"]},{"id":1441,"file":"test\\gameview.test.js","start":3081,"end":3132,"kind":"MethodDefinition","name":"GameMock.getCommandManager","weight":0.5,"headline":"command manager get return","preContext":["start() { this.startCalled = true; }"],"postContext":["getGameTimer() { return this.gameTimer; }"]},{"id":1442,"file":"js\\Stage.js","start":13018,"end":13340,"kind":"MethodDefinition","name":"Stage.clear","weight":1.2,"headline":"stage image ct fill rect canvas clear","preContext":["    return displayOwner === this.gameImgProps.display","      ? this.gameImgProps.createImage(width, height)","      : this.guiImgProps.createImage(width, height);","  }"],"postContext":["resetFade() {","    this.fadeAlpha = 0;","    this.overlayAlpha = 0;","    this.overlayRect = null;"]},{"id":1443,"file":"js\\GameGui.js","start":23608,"end":24958,"kind":"ClassDeclaration","name":"SmoothScroller","weight":1.5,"headline":"velocity delta return min last static zoom","preContext":["    case Lemmings.SkillTypes.DIGGER:  return 9;","    default: return -1;","    }","  }"],"postContext":["constructor() {","    this.velocity = 0;     // pixels/frame (or units/frame)","    this.friction = 0.99;","    this.minVelocity = 0.7;       //0.0175;"]},{"id":1444,"file":"test\\action-systems.test.js","start":4542,"end":4686,"kind":"MethodDefinition","name":"TestMineSystem.constructor","weight":0.5,"headline":"constructor steel arrow stub super sprites masks","preContext":["class TestMineSystem extends ActionMineSystem {","  constructor(haveSteel, haveArrow) { super(stubSprites, stubMasks()); this.haveSteel = haveSteel; this.haveArrow = haveArrow; this.cleared = 0; }","  process(level, lem) { return super.process(level, lem); }","}"],"postContext":["process(level, lem) { return super.process(level, lem); }"]},{"id":1445,"file":"test\\bench-tps.test.js","start":3201,"end":3237,"kind":"MethodDefinition","name":"SpritesStub.getNumberSpriteLeft","weight":0.5,"headline":"get number sprite return","preContext":["getPanelSprite() { return { width: 176, height: 40, getData() { return [0]; } }; }"],"postContext":["getNumberSpriteRight() { return {}; }"]},{"id":1446,"file":"test\\gamegui.test.js","start":2551,"end":2816,"kind":"MethodDefinition","name":"GameSkillsStub.constructor","weight":0.5,"headline":"constructor lemmings new skill changed event handler","preContext":["    if (changed) this.onSelectionChanged.trigger();","    return changed;","  }","}"],"postContext":["getSkill(s) { return this.skills[s]; }"]},{"id":1447,"file":"js\\DisplayImage.js","start":12838,"end":12886,"kind":"MethodDefinition","name":"DisplayImage.getImageData","weight":1.2,"headline":"get image return im","preContext":["setScreenPosition(x, y) { this.stage.setGameViewPointPosition(x, y); }"],"postContext":["redraw()               { this.stage.redraw();   }"]},{"id":1448,"file":"js\\GameView.js","start":15027,"end":16285,"kind":"MethodDefinition","name":"GameView.loadLevel","weight":1.2,"headline":"game level element select display stage group","preContext":["    if (this.benchSequence) {","      await this.benchSequenceStart();","    }","  }"],"postContext":["async benchStart(entrances) {","    this.bench = true;","    this._benchMeasureExtras = false;","    await this.loadLevel();"]},{"id":1449,"file":"js\\DisplayImage.js","start":12889,"end":12938,"kind":"MethodDefinition","name":"DisplayImage.redraw","weight":1.2,"headline":"redraw stage","preContext":["getImageData()         { return this.imgData;  }"],"postContext":["dispose() {","    this.onMouseUp.dispose();","    this.onMouseDown.dispose();","    this.onMouseRightDown.dispose();"]},{"id":1450,"file":"test\\gamegui.test.js","start":2819,"end":2857,"kind":"MethodDefinition","name":"GameSkillsStub.getSkill","weight":0.5,"headline":"get skill return skills","preContext":["    this.onSelectionChanged = new Lemmings.EventHandler();","    this.skills = new Array(Object.keys(Lemmings.SkillTypes).length).fill(2);","    this.selectedSkill = Lemmings.SkillTypes.CLIMBER;","  }"],"postContext":["setSelectedSkill(s) { this.selectedSkill = s; this.onSelectionChanged.trigger(); }"]},{"id":1451,"file":"test\\bench-tps.test.js","start":3240,"end":3277,"kind":"MethodDefinition","name":"SpritesStub.getNumberSpriteRight","weight":0.5,"headline":"get number sprite return","preContext":["getNumberSpriteLeft() { return {}; }"],"postContext":["getNumberSpriteEmpty() { return {}; }"]},{"id":1452,"file":"test\\action-systems.test.js","start":4689,"end":4746,"kind":"MethodDefinition","name":"TestMineSystem.process","weight":0.5,"headline":"process level le return super","preContext":["constructor(haveSteel, haveArrow) { super(stubSprites, stubMasks()); this.haveSteel = haveSteel; this.haveArrow = haveArrow; this.cleared = 0; }"],"postContext":[]},{"id":1453,"file":"js\\GameGui.js","start":23681,"end":23913,"kind":"MethodDefinition","name":"SmoothScroller.constructor","weight":1.2,"headline":"constructor velocity frame pixels units friction min","preContext":["    this._lastVelocity = this.velocity;","    this.onHasVelocity.trigger(this.velocity);","  }","}"],"postContext":["hasVelocity() {","    if (this.velocity < this.minVelocity || this.velocity == 0) {","      return false;","    }"]},{"id":1454,"file":"js\\Stage.js","start":13344,"end":13601,"kind":"MethodDefinition","name":"Stage.resetFade","weight":1.2,"headline":"timer fade overlay alpha clear interval reset","preContext":["    } else {","      ctx.fillRect(stageImage.x, stageImage.y, stageImage.width, stageImage.height);","    }","  }"],"postContext":["startFadeOut() {","    this.resetFade();","    this.fadeTimer = setInterval(() => {","      this.fadeAlpha = Math.min(this.fadeAlpha + 0.02, 1);"]},{"id":1455,"file":"test\\gameview.test.js","start":3135,"end":3176,"kind":"MethodDefinition","name":"GameMock.getGameTimer","weight":0.5,"headline":"game timer get return","preContext":["getCommandManager() { return this.commandManager; }"],"postContext":["class GameFactoryMock {","  async getGame() { return new GameMock(); }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1456,"file":"test\\bench-tps.test.js","start":3280,"end":3317,"kind":"MethodDefinition","name":"SpritesStub.getNumberSpriteEmpty","weight":0.5,"headline":"get number sprite empty return","preContext":["getNumberSpriteRight() { return {}; }"],"postContext":["getLetterSprite() { return {}; }"]},{"id":1457,"file":"test\\gamegui.test.js","start":2860,"end":2942,"kind":"MethodDefinition","name":"GameSkillsStub.setSelectedSkill","weight":0.5,"headline":"selected skill set selection changed trigger","preContext":["getSkill(s) { return this.skills[s]; }"],"postContext":["getSelectedSkill() { return this.selectedSkill; }"]},{"id":1458,"file":"js\\DisplayImage.js","start":12942,"end":13231,"kind":"MethodDefinition","name":"DisplayImage.dispose","weight":1.2,"headline":"dispose mouse null move double click im","preContext":["redraw()               { this.stage.redraw();   }"],"postContext":["function scaleNearest(","  frame,","  dstWidth,","  dstHeight,"]},{"id":1459,"file":"js\\GameView.js","start":16289,"end":22425,"kind":"MethodDefinition","name":"GameView.benchStart","weight":1.2,"headline":"bench const level entrances timer game en","preContext":["    this.updateQuery();","    this.log.debug(level);","    return this.start();","  }"],"postContext":["async benchMeasureExtras() {","    this.bench = true;","    this._benchMeasureExtras = true;","    await this.loadLevel();"]},{"id":1460,"file":"js\\GameGui.js","start":23917,"end":24045,"kind":"MethodDefinition","name":"SmoothScroller.hasVelocity","weight":1.2,"headline":"velocity return min false true","preContext":["    this._lastVelocity = 0;","","    this.onHasVelocity = new Lemmings.EventHandler();","  }"],"postContext":["addImpulse(delta) {","    if (delta == 0) {","      console.log('error: trying to add 0 impulse');","      return;"]},{"id":1461,"file":"js\\DisplayImage.js","start":13273,"end":14673,"kind":"FunctionDeclaration","name":"scaleNearest","weight":2,"headline":"sr const des base ground ds null","preContext":["    this.buffer32 = null;","    this.imgData = null;","    this.stage = null;","  }"],"postContext":["function scaleXbrz(","  frame,","  dstWidth,","  dstHeight,"]},{"id":1462,"file":"test\\gamegui.test.js","start":2945,"end":2994,"kind":"MethodDefinition","name":"GameSkillsStub.getSelectedSkill","weight":0.5,"headline":"selected skill get return","preContext":["setSelectedSkill(s) { this.selectedSkill = s; this.onSelectionChanged.trigger(); }"],"postContext":["clearSelectedSkill() {","    const changed = this.selectedSkill !== Lemmings.SkillTypes.UNKNOWN;","    this.selectedSkill = Lemmings.SkillTypes.UNKNOWN;","    if (changed) this.onSelectionChanged.trigger();"]},{"id":1463,"file":"test\\bench-tps.test.js","start":3320,"end":3352,"kind":"MethodDefinition","name":"SpritesStub.getLetterSprite","weight":0.5,"headline":"get letter sprite return","preContext":["getNumberSpriteEmpty() { return {}; }"],"postContext":["class MiniMapStub {","  constructor() {}","  render() {}","  dispose() {}"]},{"id":1464,"file":"test\\gameview.test.js","start":3180,"end":3358,"kind":"ClassDeclaration","name":"GameFactoryMock","weight":0.5,"headline":"game get return mock async conf class","preContext":["getGameTimer() { return this.gameTimer; }"],"postContext":["async getGame() { return new GameMock(); }"]},{"id":1465,"file":"js\\Stage.js","start":13605,"end":13867,"kind":"MethodDefinition","name":"Stage.startFadeOut","weight":1.2,"headline":"fade timer alpha interval reset set math","preContext":["    if (this.fadeTimer) clearInterval(this.fadeTimer);","    if (this.overlayTimer) clearInterval(this.overlayTimer);","    this.fadeTimer = this.overlayTimer = 0;","  }"],"postContext":["startOverlayFade(color, rect = null, dashLen = 0) {","    if (this.overlayTimer) clearInterval(this.overlayTimer);","    this.overlayColor = color;","    this.overlayRect = rect;"]},{"id":1466,"file":"test\\gameview.test.js","start":3206,"end":3248,"kind":"MethodDefinition","name":"GameFactoryMock.getGame","weight":0.5,"headline":"game async get return new mock","preContext":["  async getGame() { return new GameMock(); }","  async getGameResources() { return {}; }","  get configReader() { return { configs: Promise.resolve([]) }; }","}"],"postContext":["async getGameResources() { return {}; }"]},{"id":1467,"file":"test\\bench-tps.test.js","start":3356,"end":3425,"kind":"ClassDeclaration","name":"MiniMapStub","weight":0.5,"headline":"class mini map stub constructor render dispose","preContext":["getLetterSprite() { return {}; }"],"postContext":["constructor() {}"]},{"id":1468,"file":"test\\gamegui.test.js","start":2997,"end":3221,"kind":"MethodDefinition","name":"GameSkillsStub.clearSelectedSkill","weight":0.5,"headline":"skill changed selected lemmings types clear const","preContext":["getSelectedSkill() { return this.selectedSkill; }"],"postContext":["class SkillPanelSpritesStub {","  constructor() {","    this.panel = { width: 176, height: 40, getData() { return [0]; } };","  }"]},{"id":1469,"file":"js\\DisplayImage.js","start":14675,"end":16688,"kind":"FunctionDeclaration","name":"scaleXbrz","weight":2,"headline":"sr ds const des scale mask ground","preContext":["      dest32[destIdx] = srcBuf[srcIdx];","    }","  }","}"],"postContext":["function scaleHqx(","  frame,","  dstWidth,","  dstHeight,"]},{"id":1470,"file":"js\\GameGui.js","start":24094,"end":24512,"kind":"MethodDefinition","name":"SmoothScroller.addImpulse","weight":1.2,"headline":"delta velocity return add impulse console log","preContext":["      return false;","    }","    return true;","  }"],"postContext":["update() {","    // decay the velocity:","    this.velocity = this.velocity * this.friction;",""]},{"id":1471,"file":"js\\GameView.js","start":22429,"end":23671,"kind":"MethodDefinition","name":"GameView.benchMeasureExtras","weight":1.2,"headline":"extras timer game bench lm const get","preContext":["      };","      timer.eachGameSecond.on(this._benchMonitor);","    }","  }"],"postContext":["async benchSequenceStart() {","    this._benchCounts = [50, 25, 10, 1];","    this._benchIndex = 0;","    const extras = await this.benchMeasureExtras();"]},{"id":1472,"file":"js\\DisplayImage.js","start":16690,"end":18642,"kind":"FunctionDeclaration","name":"scaleHqx","weight":2,"headline":"sr ds const des scale mask ground","preContext":["      dest32[destRow] = scaled[srcRow];","    }","  }","}"],"postContext":["function drawMarchingAntRect(","  display,","  x,","  y,"]},{"id":1473,"file":"test\\gamegui.test.js","start":3225,"end":3569,"kind":"ClassDeclaration","name":"SkillPanelSpritesStub","weight":0.5,"headline":"get return sprite panel number ch class","preContext":["    this.selectedSkill = Lemmings.SkillTypes.UNKNOWN;","    if (changed) this.onSelectionChanged.trigger();","    return changed;","  }"],"postContext":["constructor() {","    this.panel = { width: 176, height: 40, getData() { return [0]; } };","  }"]},{"id":1474,"file":"test\\bench-tps.test.js","start":3378,"end":3394,"kind":"MethodDefinition","name":"MiniMapStub.constructor","weight":0.5,"headline":"constructor","preContext":["  constructor() {}","  render() {}","  dispose() {}","}"],"postContext":["render() {}"]},{"id":1475,"file":"test\\gameview.test.js","start":3251,"end":3290,"kind":"MethodDefinition","name":"GameFactoryMock.getGameResources","weight":0.5,"headline":"async get game resources return","preContext":["async getGame() { return new GameMock(); }"],"postContext":["get configReader() { return { configs: Promise.resolve([]) }; }"]},{"id":1476,"file":"js\\Stage.js","start":13871,"end":14593,"kind":"MethodDefinition","name":"Stage.startOverlayFade","weight":1.2,"headline":"overlay dash color timer rect alpha interval","preContext":["        this.fadeTimer = 0;","      }","    }, 40);","  }"],"postContext":["resetOverlayFade() {","    this.overlayAlpha = 0;","    this.overlayRect = null;","    this.overlayDashLen = 0;"]},{"id":1477,"file":"js\\DisplayImage.js","start":18644,"end":19390,"kind":"FunctionDeclaration","name":"drawMarchingAntRect","weight":2,"headline":"pattern let set display color const pos","preContext":["      dest32[destRow] = scaled[srcRow];","    }","  }","}"],"postContext":["function drawDashedRect(","  display,","  x,","  y,"]},{"id":1478,"file":"js\\GameView.js","start":23675,"end":24142,"kind":"MethodDefinition","name":"GameView.benchSequenceStart","weight":1.2,"headline":"bench extra extras lemmings counts await list","preContext":["      };","      timer.eachGameSecond.on(monitor);","    });","  }"],"postContext":["dispose() {","    if (this.shortcuts) {","      this.shortcuts.dispose();","      this.shortcuts = null;"]},{"id":1479,"file":"js\\GameGui.js","start":24516,"end":24956,"kind":"MethodDefinition","name":"SmoothScroller.update","weight":1.2,"headline":"velocity last trigger update decay friction stop","preContext":["    }","","    this.velocity += delta; ","  }"],"postContext":[]},{"id":1480,"file":"js\\Stage.js","start":14597,"end":14794,"kind":"MethodDefinition","name":"Stage.resetOverlayFade","weight":1.2,"headline":"overlay timer reset fade alpha rect null","preContext":["        this.overlayDashLen = 0;","      }","    }, 40);","  }"],"postContext":["dispose() {","    this.resetFade();","    if (this.gameImgProps.display?.dispose) this.gameImgProps.display.dispose();","    if (this.guiImgProps.display?.dispose)  this.guiImgProps.display.dispose();"]},{"id":1481,"file":"test\\gameview.test.js","start":3293,"end":3356,"kind":"MethodDefinition","name":"GameFactoryMock.configReader","weight":0.5,"headline":"conf get reader return gs promise resolve","preContext":["async getGameResources() { return {}; }"],"postContext":[]},{"id":1482,"file":"test\\bench-tps.test.js","start":3397,"end":3408,"kind":"MethodDefinition","name":"MiniMapStub.render","weight":0.5,"headline":"render","preContext":["constructor() {}"],"postContext":["dispose() {}"]},{"id":1483,"file":"test\\gamegui.test.js","start":3257,"end":3348,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.constructor","weight":0.5,"headline":"constructor panel get return","preContext":["  getNumberSpriteRight(n) { return 'R' + n; }","  getNumberSpriteEmpty() { return 'E'; }","  getLetterSprite(ch) { return 'ch-' + ch; }","}"],"postContext":["getPanelSprite() { return this.panel; }"]},{"id":1484,"file":"js\\DisplayImage.js","start":19392,"end":19662,"kind":"FunctionDeclaration","name":"drawDashedRect","weight":2,"headline":"color draw rect display dash offset function","preContext":["  for (let dy = 1; dy <= height; dy++) set(x + width, y + dy);","  for (let dx = 1; dx <= width; dx++) set(x + width - dx, y + height);","  for (let dy = 1; dy < height; dy++) set(x, y + height - dy);","}"],"postContext":[]},{"id":1485,"file":"js\\GameView.js","start":24191,"end":24539,"kind":"MethodDefinition","name":"GameView.dispose","weight":1.2,"headline":"stage dispose shortcuts resize null window remove","preContext":["    this.extraLemmings = this._benchExtraList[0];","    lemmings.extraLemmings = this.extraLemmings;","    await this.benchStart(this._benchCounts[0]);","  }"],"postContext":[]},{"id":1486,"file":"js\\Stage.js","start":14798,"end":15186,"kind":"MethodDefinition","name":"Stage.dispose","weight":1.2,"headline":"dispose im props display null game gu","preContext":["    this.overlayDashLen = 0;","    if (this.overlayTimer) clearInterval(this.overlayTimer);","    this.overlayTimer = 0;","  }"],"postContext":["draw(display, img) {","    if (!display.ctx) return;","","    display.ctx.putImageData(img, 0, 0);"]},{"id":1487,"file":"test\\gamegui.test.js","start":3351,"end":3390,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.getPanelSprite","weight":0.5,"headline":"panel get sprite return","preContext":["constructor() {","    this.panel = { width: 176, height: 40, getData() { return [0]; } };","  }"],"postContext":["getNumberSpriteLeft(n) { return 'L' + n; }"]},{"id":1488,"file":"test\\bench-tps.test.js","start":3411,"end":3423,"kind":"MethodDefinition","name":"MiniMapStub.dispose","weight":0.5,"headline":"dispose","preContext":["render() {}"],"postContext":[]},{"id":1489,"file":"js\\Stage.js","start":15190,"end":17543,"kind":"MethodDefinition","name":"Stage.draw","weight":1.2,"headline":"display ct im alpha view point math","preContext":["    this.gameImgProps = null;","    this.guiImgProps  = null;","    this.stageCav     = null;","  }"],"postContext":["drawCursor() {","    if (!this.cursorCanvas) return;","    const ctx = this.stageCav.getContext('2d', { alpha: true, willReadFrequently: true});","    const cx = Math.trunc(this.cursorX - this.cursorCanvas.width / 2);"]},{"id":1490,"file":"test\\gamegui.test.js","start":3393,"end":3435,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.getNumberSpriteLeft","weight":0.5,"headline":"get number sprite return","preContext":["getPanelSprite() { return this.panel; }"],"postContext":["getNumberSpriteRight(n) { return 'R' + n; }"]},{"id":1491,"file":"js\\Stage.js","start":17547,"end":17880,"kind":"MethodDefinition","name":"Stage.drawCursor","weight":1.2,"headline":"cursor canvas const draw ct true math","preContext":["        octx.putImageData(img, r.x, r.y);","      }","    }","  }"],"postContext":["clampViewPoint(stageImage) {","    if (!stageImage || !stageImage.display) return;","    const { width: worldW, height: worldH } = stageImage.display.worldDataSize;","    const scale = stageImage.viewPoint.scale;"]},{"id":1492,"file":"test\\gamegui.test.js","start":3438,"end":3481,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.getNumberSpriteRight","weight":0.5,"headline":"get number sprite return","preContext":["getNumberSpriteLeft(n) { return 'L' + n; }"],"postContext":["getNumberSpriteEmpty() { return 'E'; }"]},{"id":1493,"file":"js\\Stage.js","start":17884,"end":18626,"kind":"MethodDefinition","name":"Stage.clampViewPoint","weight":1.2,"headline":"view stage image point const world scale","preContext":["    const cx = Math.trunc(this.cursorX - this.cursorCanvas.width / 2);","    const cy = Math.trunc(this.cursorY - this.cursorCanvas.height / 2);","    ctx.drawImage(this.cursorCanvas, cx, cy);","  }"],"postContext":["getGameViewRect() {","    return {","      x: this.gameImgProps.viewPoint.x,","      y: this.gameImgProps.viewPoint.y,"]},{"id":1494,"file":"test\\gamegui.test.js","start":3484,"end":3522,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.getNumberSpriteEmpty","weight":0.5,"headline":"get number sprite empty return","preContext":["getNumberSpriteRight(n) { return 'R' + n; }"],"postContext":["getLetterSprite(ch) { return 'ch-' + ch; }"]},{"id":1495,"file":"js\\Stage.js","start":18630,"end":18933,"kind":"MethodDefinition","name":"Stage.getGameViewRect","weight":1.2,"headline":"game im props view point canvas viewport","preContext":["        worldW - viewW","      );","    }","  }"],"postContext":["limitValue(minLimit, value, maxLimit) {","    return Math.min(Math.max(minLimit, value), maxLimit);","  }"]},{"id":1496,"file":"test\\gamegui.test.js","start":3525,"end":3567,"kind":"MethodDefinition","name":"SkillPanelSpritesStub.getLetterSprite","weight":0.5,"headline":"ch get letter sprite return","preContext":["getNumberSpriteEmpty() { return 'E'; }"],"postContext":["class MiniMapStub {","  constructor(gd, lvl, disp) { this.args = [gd, lvl, disp]; this.renderCalls = []; }","  render(x, w) { this.renderCalls.push({ x, w }); }","  dispose() {}"]},{"id":1497,"file":"js\\Stage.js","start":18937,"end":19038,"kind":"MethodDefinition","name":"Stage.limitValue","weight":1.2,"headline":"limit min max math return","preContext":["      h: this.gameImgProps.canvasViewportSize.height / this.gameImgProps.viewPoint.scale","","    };","  }"],"postContext":[]},{"id":1498,"file":"test\\gamegui.test.js","start":3571,"end":3744,"kind":"ClassDeclaration","name":"MiniMapStub","weight":0.5,"headline":"class mini map stub constructor render gd","preContext":["getLetterSprite(ch) { return 'ch-' + ch; }"],"postContext":["constructor(gd, lvl, disp) { this.args = [gd, lvl, disp]; this.renderCalls = []; }"]},{"id":1499,"file":"test\\gamegui.test.js","start":3593,"end":3675,"kind":"MethodDefinition","name":"MiniMapStub.constructor","weight":0.5,"headline":"constructor gd lv disp arg render calls","preContext":["  constructor(gd, lvl, disp) { this.args = [gd, lvl, disp]; this.renderCalls = []; }","  render(x, w) { this.renderCalls.push({ x, w }); }","  dispose() {}","}"],"postContext":["render(x, w) { this.renderCalls.push({ x, w }); }"]},{"id":1500,"file":"test\\gamegui.test.js","start":3678,"end":3727,"kind":"MethodDefinition","name":"MiniMapStub.render","weight":0.5,"headline":"render calls push","preContext":["constructor(gd, lvl, disp) { this.args = [gd, lvl, disp]; this.renderCalls = []; }"],"postContext":["dispose() {}"]},{"id":1501,"file":"test\\gamegui.test.js","start":3730,"end":3742,"kind":"MethodDefinition","name":"MiniMapStub.dispose","weight":0.5,"headline":"dispose","preContext":["render(x, w) { this.renderCalls.push({ x, w }); }"],"postContext":[]}]
