import { expect } from 'chai';
import { scaleImage } from '../js/xbrz/xbrz.js';

globalThis.lemmings = { game: { showDebug: false } };

function color32(r, g, b) {
  return (0xFF000000 | (b & 0xFF) << 16 | (g & 0xFF) << 8 | (r & 0xFF)) >>> 0;
}

const SRC = [
  color32(255, 0, 0),
  color32(0, 255, 0),
  color32(0, 0, 255),
  color32(255, 255, 0)
];

const EXPECTED_2X = [
  0xff0000ff, 0xff0000ff, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff00ff7f, 0xff00ff00,
  0xffff0000, 0xff7f007f, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xff00ffff, 0xff00ffff
];

const EXPECTED_3X = [
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ff00, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ff1f, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ffdf, 0xff00ff1f, 0xff00ff00,
  0xffff0000, 0xffdf001f, 0xff1f00df, 0xff00ffff, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xffdf001f, 0xff00ffff, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xffff0000, 0xff00ffff, 0xff00ffff, 0xff00ffff
];

const EXPECTED_4X = [
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ff00, 0xff00ff00, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ff00, 0xff00ff00, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ff7f, 0xff00ff00, 0xff00ff00, 0xff00ff00,
  0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff0000ff, 0xff00ffff, 0xff00ff7f, 0xff00ff00, 0xff00ff00,
  0xffff0000, 0xffff0000, 0xff7f007f, 0xff0000ff, 0xff00ffff, 0xff00ffff, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xffff0000, 0xff7f007f, 0xff00ffff, 0xff00ffff, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xff00ffff, 0xff00ffff, 0xff00ffff, 0xff00ffff,
  0xffff0000, 0xffff0000, 0xffff0000, 0xffff0000, 0xff00ffff, 0xff00ffff, 0xff00ffff, 0xff00ffff
];

describe('xbrz scaleImage', function() {
  [2, 3, 4].forEach(function(scale) {
    it(`scales ${scale}x correctly`, function() {
      const dest = new Uint32Array(scale * 2 * scale * 2);
      scaleImage(scale, SRC, dest, 2, 2, 0, 2);
      const expected = scale === 2 ? EXPECTED_2X : scale === 3 ? EXPECTED_3X : EXPECTED_4X;
      expect(Array.from(dest)).to.eql(expected);
    });
  });
});
